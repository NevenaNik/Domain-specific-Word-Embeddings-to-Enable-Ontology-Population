Early designs of automobiles used to have very little electrical content with very few electrical parts, a bunch of connectors and a couple of harnesses with simple electrical layouts. There were no microprocessors, or so to speak, no embedded software. As a result of the growing needs and wants of the customer, car manufac-turers, government regulations and the availability of the analog, digital and micro-processor based integrated electronics kicked off the successful launch of an internal combustion  engine controller ; a fairly sophisticated, mission critical, real-time com-puter located under the hood. The success of engine controller spawned the devel-opment of many critical vehicle functions by utilizing the embedded design like automatic transmission and vehicle cruise control. An  automatic transmission  is an intriguing combination of ﬂ uid dynamics, mechanics, electro-magnetic and  electronics—managing the power transfer between the engine and the gear train for optimal vehicle motion. The real challenge for this design is the precise control of hydraulic valves and the sensitive torque detection mechanism to select the optimal gear-speed. The  cruise control  is a function that manages the engine throttle to maintain a constant vehicle speed selected by the user. An advanced version of cruise control has been recognized as an  adaptive cruise control  that adapts to the speed of a slow-moving vehicle ahead of you by automatically reducing your vehi-cle speed to maintain a safer distance. The radar detection based sensors are used to measure the vehicle speed moving ahead of you. An intriguing feature of  auto parallel park assist  is a glowing example of incorporating electronics, electric motor steer-ing, and object detection sensors. The function of auto parallel park assist is an  Electronic supplementary material:   The online version of this chapter (doi:  10.1007/978-3- 319- 17584-3_1    ) contains supplementary material, which is available to authorized users. 2impressive feature in a manner that it assists the driver to do parallel parking in a vacant, even tightly-spaced parking spot by relinquishing the steering wheel control to the embedded controller, the only example of hands-free reversing. At the end of the vehicle maneuvers, you will ﬁ nd yourself safely parked between the cars.  1.2     Instrument Cluster  This is the most visible device of any vehicle. It displays information such as the vehicle speed, fuel quantity, engine temperature, engine rpm and gear position, among other features. It used to be a ‘dumb’ display with dial-pointers coupled mechanically to the mechanical sensors—but today—it has turned into an intelli-gent embedded device that has a direct ‘hot line’ to the engine controller, and a few other modules. It conveys critical early warnings and cautions to the driver by means of dial pointers, visual displays, audible tones and telltales. Added features include, but are not limited to: seat-belt status, fuel consumption computations, oil change warnings, tire pressure information, multiple trip mileage logging, and operational status monitoring of other vehicle systems.  1.3     Heating and Cooling  The heating and air conditioning in a typical vehicle requires an engine driven air- conditioning compressor pump and a speed-controlled blower motor to distribute warm and cool air through air outlet registers. Is there a reason for electronics or embedded design to be added to this simple application? The answer is both yes and no, depending on the type of vehicle or manufacturer. Some  HVAC  ( H eating  V entilating &  A ir  C onditioning) systems are simple and do not require embedded controller, but some require an embedded controller to provide better system perfor-mance, enhanced temperature control, additional informed-display, system self- tests, diagnostics, troubleshooting features and more.  1.4     Airbag Safety  Fatal car accidents and crashes triggered the need to improve passenger road safety. The airbag, a cushion of air in a bag, can protect the occupant from accident impact if opens in timely moment. The decision to trigger the airbag ﬁ ring circuits that deploy the airbag to save the occupant’s life must be made within a fraction of sec-ond to mitigate the impact of a potentially deadly force. Today in the world of embedded design, it is possible to trigger the airbag ﬁ ring circuits with the aid of a microcontroller by utilizing the vehicle movement sensors, impact detection mech-anisms, and complex deterministic software algorithms. Here rests the need of 1 Vehicle Electronics Architecture3airbag embedded software, electronics and positional accelerometers packaged in a separate mechanical housing attached to the rigid vehicle chassis. Further interfaces to the airbag module are seatbelt position sensing circuits, sophisticated airbag ﬁ r-ing mechanisms and a backup power supply. The airbag system is safety-critical equipment, and in the realm of automotive electronics it enjoys the highest level of fault-tolerant system with least possible dependency on other vehicle resources due to nature of its intended safety task.  1.5     Antilock Brake, Traction and Stability  If you live in a place where snow is second nature, then you are the right candidate for a vehicle with an  anti-lock brake  mechanism. Antilock brake systems can miti-gate undesirable vehicle slip movements during icy and slippery conditions that pervade this season. This slippage occurs when one drives on slippery road condi-tions and applies brakes that tend to lock one or more wheels due to the low traction. The loss of even traction—on top of a slippery road—causes the vehicle to spin out of control. In order to control the wheel skidding motion, the skidding-wheel brake must be released swiftly and automatically to prevent the vehicle from going out of control. Indeed, that is the function of a typical antilock brake system. The antilock system performs tasks to avoid wheel locking conditions while the brakes are applied, and it does this automatically by measuring the angular velocity of each wheel, thereby calculating the potential slip conditions. An anti-locking brake sys-tem is composed of sensors which are able to sense the rotational speed of each wheel, perform computations based on parameters like vehicle speed and vehicle attitude and then use the solenoid controlled valves to apply and release respective brakes to counter the wheel locking conditions. The mechanism provides self- governing, single or multiple wheel brake control without any efforts from the driver as long as the brake pedal is pressed.  This has been made possible by virtue of an embedded controller developed to support a powerful closed-loop control algorithm along with the system compo-nents mentioned earlier and a motor controlled pump to generate the brake pressure hydraulics. An added feature within this domain of sensors, augmented by few more devices has been recognized as  traction control  where it helps to maintain and enhance the vehicle stability.  1.6     Power Assist Steering  Power steering is not new for vehicles requiring power-assist steering efforts during turns and maneuvers. It is a system based on the ﬂ uid dynamics torque characteris-tics utilized in the steering system to assist the driver in steering the vehicle by uniform optimum efforts. The hydraulic steering system uses the engine-driven pump to create hydraulic pressure to realize the vehicle power steering efforts. 1.6 Power Assist Steering4At higher vehicle speeds, the steering system adds low power assistance whereas more power assistance is added when the vehicle is moving slowly or parked. Automotive manufacturers have been working on two different topologies to develop an advanced steering system. One works on the principal of hydraulics ﬂ ow metering and the other uses a high torque electric motor. Both topologies could be augmented by embedded design. Development has not stopped here. OEM’s are now debating to disconnect the complete mechanical linkage from the steering col-umn, and wish to steer the vehicle by means of electrical motors and actuators. The fully integrated system will not have any mechanical linkages but rather it will func-tion by utilizing the electronic sensors, motors, actuators and an embedded design. A buzz- word in the automotive industry ‘x-by-wire’ has been used to classify such systems that utilizes electronic sensors to capture the customer commands and con-trols the vehicle systems with the aid of actuators and motors by incorporating embedded design.  Before we explore more on ‘x-by-wire’ systems, let’s review the concept of ‘ﬂ y-by- wire’ which was introduced much earlier than ‘x-by-wire’ systems. Historically the word ‘ﬂ y-by-wire’ was ﬁ rst coined in Avionics design segment ( Avi ation Electr onics ) where it refers to the ﬂ ight control surfaces like ailerons, elevators, and rudder—controlled by actuators and commanded by computers, when a pilot issues the command by moving the control yoke or rudder pedal. In essence, the pilot input goes to the sensors and not directly to the conventional mechanical linkages attached to the control surfaces.     So, what is a conventional mechanical system? A conventional mechanical sys-tem is drawn in    Fig.  1.1 . The mechanical linkages are attached to the cables and move control surfaces proportional to the pilot’s command. The mechanical feed-back allows the control surfaces to achieve the applied requested position.1.7        Avionics Fly-By-Wire (FBW)  Unlike conventional mechanical systems, ﬂ y-by-wire systems do not use mechanical linkages that need to be attached to the pilot controls. Instead, the pilot commands go to the electronic sensors and are transmitted as a proportional electrical quantity Feedback Control Surfaces Primary Flight Controls(Pilot Commands)Mechanical LinkageHydraulic Actuators Control Valves      Fig. 1.1    Conventional mechanical system. Source: Boeing: Fly-By-Wire Flight Controls (B777: Public Domain Publications)        1 Vehicle Electronics Architecture5to the respective electronics interface unit that digitizes the signals. The digitized signals are then fed to the primary ﬂ ight computers where the appropriate process-ing is done. Once the processing is furnished, the computers then sends the electri-cal commands to actuate the actuators that move the control surfaces to the required desired position. The feedback mechanism monitors the  operation of control sur-faces. A simpliﬁ ed block is shown in Fig.  1.2 1.8        Automotive X- By-Wire  Conventionally, vehicle controls such as the brake, steering and acceleration are mechanically connected to their relevant systems. The brake pedal is attached to the brake system, the steering wheel is coupled to the steering system, and the accelera-tor pedal is linked to the engine throttle by means of mechanical linkages or cable. The basic design philosophy behind ‘x’ by wire in the minds of automotive OEMs is to remove the mechanical linkage between the driver and the systems, and use electrical controls to perform all functions. The ‘x-by-wire' is the buzz word, which harnesses all three systems, namely Brake, Drive or Steer. Buzz words like ‘Brake-by- wire’, ‘Drive-by-wire’ and ‘Steer-by-wire’ and are often synonymously used for this purpose. 1.8.1     Brake- By-Wire  A brake-by-wire is the concept of using electrical actuators to actuate the brake pads. The concept is sketched in Fig.  1.3 . The brake pedal is no longer coupled directly to the brake system, but rather it is connected to the brake pedal sensors. The sensor transforms the electrical signal to the proportional brake pedal demand and feeds it to the embedded controller. The embedded controller drives the electri-cal actuators to push the brake pads. A feedback is required to know the rate of deceleration that is furnished by the aid of a wheel speed sensor.Control Surfaces Control Yoke &Rudder Pedal SensorsComputersActuatorsFeedbackInterfaceActuatorControlElectronics  Fig. 1.2    Avionics ﬂ y-by-wire system. Source: Boeing: Fly-By-Wire Flight Controls (B777: Public Domain Publications)        1.8 Automotive X- By-Wire61.8.2        Steer- By-Wire  The steer-by-wire (SBW) is the concept of steering the vehicle with the aid of an electric motor. The steering wheel position sensor senses the steering position, transmits electrical demand to the embedded controller. This enables the software to drive the motor to steer the wheels. The wheel position sensor transmits the feed-back signal to the embedded controller to perform the closed-loop functions. Please see Fig.  1.4  for a one possible solution.1.8.3        Drive- By-Wire  The drive-by-wire is the concept of using an electric motor to control the engine throttle and remove the mechanical linkage to the throttle. One possible solution is shown in Fig.  1.5 . It is similar to preceding example. However, the control-loop is sensing multiple parameters of the throttle-position sensor, the engine torque and rpm to verify and validate the intended operational command by the customer.Wheel Speed SensorBrake Pedal SensorsEmbedded ControllerActuatorsBrake PadsBrake Pedal  Fig. 1.3    Automotive Brake-by-wire (BBW)       Wheel Position SensorSteering Position SensorEmbedded ControllerMotorsFront WheelsSteering Wheel  Fig. 1.4    Automotive Steer-by-wire (SBW)         1 Vehicle Electronics Architecture7   The OEM’s are debating whether or not to disconnect the complete mechanical linkage from the steering wheel. However, it is a safety-critical issue that requires a federal safety board review and approval. It is worth noting that the aerospace industry still kept the mechanical linkages in the ﬂ y-by-wire systems as a back-up safety should there is a complete ﬂ y-by-wire system failure.  Another intriguing application in the ﬁ eld of steering controls is the rejuvenation of a 4-wheel steering system. The initial concept, developed many years ago, has lately received more attention due to easy accessibility of advanced embedded design tools and software that could be used to develop better systems. The 4-wheel steering system augments the driver’s efforts in a large wheel-base vehicle to reduce turning radius and maintain better stability control.   1.9     Tire Pressure Monitoring  The increased roll-over accidents involving a number of fatalities had triggered seri-ous concerns by the federal government agencies. Low tire pressure was blamed as the major contributor to many unfortunate losses of life. The US congress passed an auto safety bill called the  T ransportation  R ecall  E nhancement  A ccountability and  D ocumentation act (TREAD) mandating the National Highway Transportation Safety Administration (NHTSA) to develop a safety standard for the OEM’s to install the tire pressure monitoring system. The vehicle manufactures were then given a time period of 3 years to complete the TPMS installations. The 3 years deadline that expired in 2006 had forced the OEMs’ to implement the tire pressure monitoring system in vehicles sold across the United States of America.  The tire pressure monitoring system uses two different topologies to calculate the tire pressure and alert the driver for a low tire-pressure warning: (1) indirect method; and (2) direct method.    1.    The  indirect-method  measures the angular velocity of each tire and computes the circumference of the tire and compares it to the pre-deﬁ ned tire circumference 1. Throttle Position Sensor2. Engine torque, rpmPedal Position SensorEmbedded ControllerMotorsEngine ThrottleAccelerator Pedal  Fig. 1.5    Automotive Drive-by-wire (DBW)        1.9 Tire Pressure Monitoring8known previously at an accurate inﬂ ate radius. By knowing the difference of radius the embedded software calculates the tire pressure.  This method employs continuous software tasks to measure the rotational tire speed of all four tires in order to compute in real-time the tire pressure. In real world it is extremely slow and time-consuming algorithm.      2.    The  direct method  uses the tire pressure sensors installed on each tire. The sensor uses self-contained long-life battery (5–10 years) to power the senor electronics mounted on each tire. The battery operated sensor measures the tire pressure and transmits that information by modulating the data over radio frequency carrier (global G5 or G6 band) to the receiver. The transmitter is positioned inside the tire or mounted at the tire valve-stem. The receivers are positioned inside the vehicle electronics module. The data transmitted over the RF signal includes coded infor-mation proportional to the tire pressure with proper wheel identity. All four tire pressure sensors installed on each tire sends-out the identity information of the installed wheel location. At the receiving end, the embedded controller or the vehicle electronics module with the aid of an RF receiver decodes that informa-tion, and then processes it to alert the occupants for the low tire- pressure cautions and warnings. The cautions may include an aural sound, chime or a message displayed at a convenient location to warn about the low tire pressure.      1.10     Modules Count  So far we have captured eight major electronics and embedded design applications related directly to vehicle function. These are summarized below:    1.    Engine Controller      2.    Transmission Controller      3.    Instrument Display      4.    Heating, Ventilation and Air-conditioning Controls      5.    Airbag Deployment      6.    Anti-lock brake      7.    Power Steering      8.    Tire Pressure Monitoring      As listed, a minimum of eight microcontrollers are needed to implement all of the vehicle-related functions, assuming the fact that we intend to develop eight sep-arate modules.  At this time you might want to ask a question: Why would we need eight micro-controllers? Why can’t just one single processor like in today’s personnel computer and the windows CE Operating system by Microsoft or any other real time operat-ing system (RTOS) to implement all automotive functions?  The answer is not that simple, and requires thorough understanding of many  factors like module functionalities, module installation locations, safety, redun-dancy, wiring lengths, operating zones, harness routing schemes, and realization of 1 Vehicle Electronics Architecture9a  powerful real time operating system. All of these factors must be understood in great detail before ﬁ nalizing an informed decision on a single computing architec-ture. By the time you ﬁ nished reading this book, you may be able to conclude by yourself the answers to this question and many others you might have.  Here is another quick question you might like to ask at this moment:   Is this all for embedded functions in a typical vehicle? –   The answer is a deﬁ nite no.        Every vehicle has door-locks, window-glasses, window-heaters, wiper-motors, headlamps, tail lamps, turn signals, interior lights and numerous other functions. Automotive manufacturers have assigned a separate module to integrate all of these functions by incorporating electronics and embedded controllers. Sometimes all of these functions are called out as vehicle-body-functions. In the early days of auto-mobiles, these functions used to be ‘straight-wire-switch’ topology where a lamp is connected to the battery through a fuse with a switch. However, in advanced auto-motive electronics architecture, it has been integrated as an embedded function requiring hardware and software-tasks that has to be developed and deployed.  Additional features like motorized-seats, temperature-controlled seats, motor-ized side-view mirrors, solenoid-operated door locks, solid-state lamps, motorized-sun- roof, and reverse parking assistance—collision avoidance, lane change warning and smart headlamps have been implemented as embedded functions. These embed-ded functions add value and customer convenience like when the customer turns remote keyless entry to lock or unlock the vehicle, or utilizes the dimming switch to control the interior lights or invokes the remote car starter.  1.11     Straight-Wire-Switch Topology  The rule of thumb, ‘straight-wire-switch’ topology was the ‘old fashion’ way of doing things and embedding a function is a new paradigm. Nevertheless, before you decide to jump on to the embedded-functions bandwagon, make sure that the cost and time-to-market is not an issue and that your customer is willing to pay the price so the function is not just a  lamp on the vanity mirror .  A ‘straight-wire-switch’ topology is shown in the Fig.  1.6 , where the battery power feeds the lamp in-series to a fuse with a switch. When the switch was placed FuseBattery+SwitchBatteryHeadLamps  Fig. 1.6    ‘Straight-wire-switch’ Topology        1.11 Straight-Wire-Switch Topology10at a closed position, the lamps turned-off, and when it was switched to an open  position, the lamps turned-off. The fuse protects the wiring and battery against faulty conditions. For example, an excessive current draw due to a short-to-ground condition. The fuse ‘blows’ if the current exceeds its rated value after a pre-deﬁ ned period of time, thus opening up the circuit to avoid catastrophic damage to the active components, which may cause ﬁ re or turn into a safety hazard.   In the early day of automobiles, almost all electrical contents in a typical vehi-cle like window-glass-motors, defrost heater, door-lock-solenoids, turn signals, headlamps, and many others—have traditionally used 'straight-wire-switch' topol-ogy. However, this has changed over the past couple of years in the highly com-petitive market, where the customers are willing to pay the price and are ready to accept the changes.  United States of America, Japan, Europe, and Australia are examples where tough competitions have forced OEMs to adapt to the embedded functions.  The embedded functions have been realized and generally categorized in the fol-lowing areas:•    Engine controls, Power Train and Cruise Controls  •   Safety, Security and Comforts  •   Driveline & Axle  •   Motion, Stability and Chassis Control  •   Radio, Audio, Video and Navigation  •   Consumer to Automotive Interface     It is interesting to note that the automotive market in developed markets intro-duced advanced concepts much earlier than the developing or emerging markets. Some good examples are adaptive cruise controllers and 3D GPS navigation sys-tems, which have successfully been introduced in Japan earlier than many other market segments.  Some of the concepts and designs have been embedded as a result of homologa-tion requirements. For example, the European market has the homologation require-ments of maintaining the headlamp-beams aim toward way-points, and must not aim unnecessarily upwards or downwards while the vehicle is travelling through an uneven terrain. The European regulation requires that the headlamps aiming must be compensated throughout the entire phase of vehicle upward or downward move-ments due to uneven terrain. Indeed, in order to furnish headlamp aiming tasks, a motorized headlamp assembly with vehicle pitch-attitude sensor is required to work with an embedded controller.  Another intriguing example is an auto-parking feature to demonstrate the use of image processing sensors to furnish the parallel parking capabilities. Recently an adaptive headlight feature has been introduced where the headlights turns before the vehicle turns in order to show the way-points ahead of you in advance. Just on the same principle collision avoidance, and lane departure warnings have been added in automotive domain.  The list of advanced and intriguing features goes on. 1 Vehicle Electronics Architecture11 Some parts of the world where technology, life style, marketing strategy, target customers and the industrial infrastructure have not grown matured enough to  handle advance automotive electronics functions, the ‘straight-wire-switch’ topol-ogy has still its merits.  If you happen to live in a place where automotive electronics is a ‘never heard before!’ phrase with a shrug, then you have an entire new market segment waiting to take up the challenge. If you wish to accept the challenge and have desire to introduce embedded functions to attract a customer’s attention then you might want to research how to generate value added results by selecting the functions that could generate real tangible results.  Historically, automotive radio was the most visible and interactive introduction to the customer, and by its nature, added for convenience to the customer. However, the tangible results were achieved when the engine controller was introduced. The engine controller had not only facilitated the engine to work and operate efﬁ ciently, but also relieved customers from the recurring engine maintenance cost.  1.12     Embedded Function  Embedding a lamp function requires an embedded controller, embedded software, and an electronic-switch to supply battery-power to the lamp. The software code, stored inside the controller, adds intelligence to perform extended functions such as fused-lamps detection, system faults, and automatic switching of the lamp. As can be seen from Fig.  1.7 , the embedded controller is controlling the headlamp directly, and the switch is only used to signal the embedded controller to turn on/off the headlamps. Recall in a ‘straight-wire-switch’ topology the switch was directly connected to the battery, fuse and the headlamps. However, with an embed-ded application, the headlamp turn on/off- switch is no longer connected to the battery instead detected by the intelligence of the microcontroller. The intelligence then uses an additional electronic-switch to control the headlamp to be turned-off and turned-on.   Also note how the power to the headlamps is drawn directly from the battery. Later, we will explore why this direct power-drive to the headlamps is controlled by Battery+FuseSwitchBatteryEmbeddedControllerHeadLampElectronicSwitch  Fig. 1.7    An embedded functional block        1.12 Embedded Function12the embedded controller as well. Indeed, embedding a function does add  complexity, but with more beneﬁ ts. The beneﬁ ts in the longer run are helpful and intriguing.  A brief overview of embedded functions verses its overheads are tabulated in    Table  1.1 . As summarized in the table the activities of product development cycle have many overheads. There are tasks and challenges for the development team to deﬁ ne hardware & software requirements, system interfaces, write code, and struggle through hardware and software integration process to prove that the product is working as intended. While the electronics team is performing these tasks, the mechanical design team has to enclose the electronics in a proper ﬁ t, form and ﬁ nish.   When the design meets the needs and wants of the intended function, and a prototype module is available, then it is tested at various test set-ups and ﬁ nally connected to the vehicle interfaces by using wiring and connectors. Testing, veri-ﬁ cation and validations are conducted at the basic module level and then carried up to the vehicle level. At the vehicle level, weight and space is also a signiﬁ cant factor. The wiring and connectors are mandatory requirements to realize a mod-ule’s physical installation so that it could be connected to the vehicle interfaces and other harnesses.  However, nothing is free in the design and development world, so cost and time are additional factors one has to consider before switching to embedded paradigm  An interesting application of embedded lamp function is the auto-lamp function, where the headlamps can be turned-on automatically when the ambient light condi-tion falls below a certain lighting threshold. Additional beneﬁ ts of embedding a function includes, but is not limited to, system fault-detection, fused-lamp detec-tion, self-test and automatic lamp shut-off. Please see the Table  1.1  for an overview of head lamp embedded features verses overheads.  If it is desired to use High Intensity Discharge (HID) type head lamps, then the embedded controller can be ﬁ tted with HID drivers, and when it is desired to use an array of light emitting diodes (LED) then it will have to be driven by LED drive circuitry. An interesting feature of lamps or LED’s is its light dimming control. The light dimming control of lamps, or LED’s, requires modulation to the power driving pulses. Hence, in any application of lighting, if it is desired to control the light dim-ming control then the embedded controller should be ﬁ tted with  P ulse  W idth  M odulated (PWM) drive circuitry to control the lamp intensity. The pulse width     Table 1.1    Head Lamp embedded features verses the overheads    Head lamp embedded features  Overheads  • Fault detection  – Design  – Development  • Automatic lamp control  – Hardware  – Software  • Automatic shut-off  – Weight  – Space  • Fused-lamp detection.  – Wiring  – Connector  • Software Function/Upgrade  – Test  – Validate  • Self-test 1 Vehicle Electronics Architecture13modulation is manageable with the aid of an embedded controller and a piece of software code. The LED headlamps and tail lamps have already been introduced in the automotive industry, and are increasingly showing strong market demand for variety of automotive applications. A strong presence of cockpit-related applica-tions are indicating that the vehicle instruments and lighting systems will eventually be using high-power LED’s even for exterior lights in a typical vehicle.  1.13     A Conventional Radio  The passion of embedding automotive functions had grown so strong that today sound features of a car-audio like volume, base, fader, treble and balance are no longer simple analog-type applications—rather all the sound functions of a decent car-radio are carried out by the digital signal processors (DSP) with the assistance of an embedded controller.  In order to present a comparison of a conventional radio verses the embedded radio, a block diagram of a conventional radio is shown in Fig.  1.7 . As can be seen in the block diagram, the RF (Radio Frequency) tuner is connected to the antenna in order to capture the radio frequency signal energy. The tuning knob connected to the tuner is used to tune the incoming radio signal (FM 98.5 or 105.1 … radio station for example). Once the station is tuned to the desired channel, the carrier frequency is demodulated, and the signal is fed to the intermediate frequency (IF) ampliﬁ er. The signal is then fed to the audio power ampliﬁ er to drive the speakers. The switches and knobs control the audio sound features by adjusting the gains and tun-ing frequencies using variable active or passive components, which are basically connected to the tuning circuits and ampliﬁ ers. The dials and pointers are the status information for the user to know the station tuned, volume level and band.  Note the absence of microcontroller, Digital Signal Processor (DSP) and how the sound features are controlled by switches and knobs—connected directly to the power ampliﬁ er.  1.14     An Embedded Radio  As stated earlier, the embedded-radio sound functions are carried out by software with the aid of a Digital Signal Processor (DSP) and a microcontroller. Both, work-ing as a team with other peripherals, furnish all the functions associated with a radio drawn in Fig.  1.8 . The software plays a huge role in an embedded radio. Software tasks are shared by the DSP and the microcontroller. The signal-processing, math- intensive calculation tasks and powerful stored algorithms are executed by the DSP; however, the control over all other peripherals including user interaction is managed by the microcontroller. The embedded controller on one hand interacts with the user, and on the other hand communicates with the DSP, programmable radio fre-quency (RF) tuner, audio power ampliﬁ er and other peripherals.1.14 An Embedded Radio14   It is interesting to note that the user controls like power On-Off switch, station tuning and volume controls are inputs to the microcontroller, and are no longer directly connected to the tuner or the ampliﬁ er, which is different than what has been done in the conventional radio. The radio station-tuning is achieved by sending digital commands to the programmable tuners. The signal ﬁ ltering, audio and radio processing is primarily performed by the digital signal processor  The customer requests, in the form of key-presses and knob-adjustments, go directly to the microcontroller as depicted in Fig.  1.8 .  The output of the DSP feeds the audio ampliﬁ er either through a pre-ampliﬁ er or directly to the power ampliﬁ er, which drives the speakers. Now, the question comes to your mind:  How do I see which station I tuned to? How do I control other settings like vol-ume, base, treble, balance, fader and more?  The answer to this and many other user interactions and requirements are resolved by adding a switch-matrix and a display. The switch matrix allows the user-commands to be read by the microcontroller. The display shows the status of adjustments, thereby enabling the customer to dynamically interact with the radio functions. The block diagram of an embedded radio is shown in Figs.  1.8  and  1.9 .AntennaSWITCHESKNOBSRFTUNERIFAMP,DETECTOR, AGCAUDIOPOWERAMPSPEAKERSDIALS, POINTERS  Fig. 1.8    A conventional radio        1 Vehicle Electronics Architecture15SIGNALPROCESSINGSOFTWARE*Switch-MatrixAudioAntennaDataRF SignalAPPLICATIONSOFTWAREKey:Software ControlsSWITCHESMICRO  DSPPOWER AMP TUNER SPEAKERSDISPLAY Volume Knob Tune Knob  Fig. 1.9    An embedded approach to audio and radio functions       Applica(cid:2)on CodeNetwork Opera(cid:2)ng So(cid:3)warePOWER SUPPLYPROTECTIONSRESETMODULE COMMUNICATION NODEIGNITION CIRCUITINPUT CIRCUITSWARNINGS & CAUTIONS ELECTRONIC SWITCHESANPROCESSINGNA  Fig. 1.10    General Block Diagram of a module         1.14 An Embedded Radio161.15        Distributed Vehicle Architecture  An overview of electrical layout of the distributed processing architecture is shown in Fig.  1.11 . Each module uses a dedicated microcontroller to sense and control its own domain of input sensing circuits (sensors, switches…), and output control IGNITIONSWITCHFUSEFUSEFUSEFUSEFUSEFUSEFUSEKEY:Network Operating SoftwareModule Application SoftwareModule  BATTERY ( B+ )COMMUNICATION LINK  Sensors,Switches Actuators,LampsEngine ControllerTransmission ControllerInstruments & DisplaysTire Pressure MonitorVehicle Body FunctionsHVAC Controls & DisplaysAirbag Logic & DriveAntiskid Logic & ControlsPower Steering Assist A  A  N N   A  N   A  N   A  N   A  N   A  N   A  N   A  N   A  N    Fig. 1.11    Modules distributed vehicle architecture        1 Vehicle Electronics Architecture17devices (actuators, lamps, motors, heaters…). Modules share fuses, an ignition switch, battery power and a serial communication bus to talk to each other. The block shows only a single communication backbone, but in the real world multiple backbones have been used in a typical vehicle. However, for the sake of clarity, only a single bus is shown in the Fig.  1.11 .    As can be seen, the vehicle battery is the primary source of power for the elec-tronic modules. The ignition switch is the primary-switch to apply power to the modules.  The battery feed going directly to the module through the fuses does not mean that every module is consuming full power at all times. There are electronic switches inside some of the modules that only allow full or partial power needed to be used. For example in case of ‘Delayed Accessory’ feature of a typical car—electronic switches inside the modules keep the module power on for a deﬁ ned period of time—even after the ignition switch is turned-off. The software application code (A) and the network operating software (N) rests inside the modules fulﬁ lls few major requirements: (Fig.  1.10 ).•    It must hold the application code to fulﬁ ll the intended functional requirements.  •   It must hold the diagnostics code to fulﬁ ll the diagnostics requirements.  •   It must keep a copy of the network operating software.  •   It must keep the database of the messages needed to be sent or received.  •   It must keep the calibration ﬁ le if it is needed for that particular module  •   It must keep the module nomenclature, and module related identiﬁ cations     In the distributed processing of vehicle electronics architecture, the following blocks are essential for every module:•    Microcontroller and its associated hardware  •   Application speciﬁ c software code  •   Diagnostic related functions and features  •   Electronics interface for the input sensors and switches  •   Electronics interface for the output devices and interfaces     The physical existences of modules are realized by developing the following items:•    Printed Circuit Board (s)  •   Physical Dimensions  •   Housing & Cover  •   Module connector (s)  •   Mounting and installation scheme     In a typical vehicle, modules are installed at a different mounting location across the vehicle. The wiring harness that connects the modules to the relevant devices varies in lengths and routing schemes. Modules differ in ﬁ t, form and function sub-ject to the physical realization of the embedded functions. 1.15 Distributed Vehicle Architecture18 It is important to understand that automotive manufacturers are not vertically integrated to the vehicle electronics architecture. The electronic modules have been designed and developed by different companies (“suppliers” is the com-mon term used about these companies) by incorporating their own platform of processing architectures, algorithms, and electronics. This essentially means that common electronic-blocks like H-Bridges, pulse-width modulated controllers,  high-side- switches, low-side-switches, signal-conditioners, microcontrollers, mem-ory address space of RAM, ROM, EEPROM, and Flash memory—embedded code size, compilation tools and vehicle depended functional electronic-blocks may not be the    ‘copy-exactly 1 ’ circuits to the competitor’s electronics design. So to speak, this means that a fundamental electronics block for a precisely identical function could be using a distinctly different technology, and an entirely different embedded software among the competitors.  1.16     Custom Built Modules  Every car manufacturer deﬁ nes their own set of requirements for the proposed  module functions. The module external vehicle interfaces, connectors, wiring, har-ness, fusing strategy and physical sizes are developed as spelled out by the respective car OEM’s hardware & software requirements speciﬁ cations. The requirements speciﬁ cations development by each car OEM’s are considered to be highly-conﬁ dential in-house solutions. The paradigms of using in-house solutions are copyright protected by every car manufacturer. Consequently in-house solution has made it very difﬁ cult to share the common designs and standards, which ultimately resulted with no cross-compatibility of modules across different car OEMs for the identical-set of functions. Restating in other words, this means that you could not replace an airbag module in an OEM ‘A” vehicle by removing an airbag module from the OEM ‘B’ vehicle or vice versa.  1.17     Modules Cross Compatibility  You must be thinking that if there is no cross-compatibility of modules by different car manufacturer then there must be a cross-compatibility within the frame-work of a typical manufacturer?  The answer is ‘yes’ and ‘no’.  The modules are not necessarily designed to keep the upward or downward com-patibility even in an identical vehicle platform. In other words, it means that you may not be able to replace an identical function module in an identical vehicle 1   Copy exactly is an Intel term used to describe a methodology that matches the processes; it is used here to make a point about dissimilar processes. 1 Vehicle Electronics Architecture19 platform owing to the differences incorporated due to the ‘model year’ changes or else . The differences could either be that the new model year had deleted, added or modiﬁ ed the hardware, software or a diagnostics feature. Nevertheless, exceptions are always possible—yet obviously dependent upon the vehicle manufacturer.  1.18     Integrating Dissimilar Functions  We now discuss some of the practical issues of combining the dissimilar functions at one common place in the vehicle by invoking some basic questions that will clarify the distributed functional needs and scope.  The questions come to mind:   Why can some of the multiple dissimilar functions not be combined?    Why can’t a universal solution be materialized by developing a common module?     To answer this, we take the example of two well deﬁ ned modules namely  ‘headlamp leveling module’ and the “airbag module”.  In case of module controlling the headlamp leveling tasks, it requires motor adjustment mechanism be installed inside the headlamp assembly and it is compul-sory that it must be located at the front corners of the vehicle. The installation location could not be compromised, so does the motor and electronics to control the move-ment of headlamps.  Now take the example of an airbag module, where, for all the good engineering reasons, airbag module must be mounted in the center of the vehicle chassis to assist accelerometers for precise measurements of vehicle “pitch”, “roll” and “yaw” atti-tude. So the electronics and processing must have to be placed inside the module. Furthermore there is another rule that must be applied here that the airbag electronics and its controller are highly safety critical functions which must not be inﬂ uenced by any other module. There is no room for any other function to be shared with the airbag module.  If you are convinced that these two dissimilar functions could not be combined to share installation location and electronics then you are correct in your judgment. And these are the basis on the decisive role for hardware, software, and mechanical dissimilarity in the module design. Therefore, it could be safe to say that  positional  sensitive non-identical functions are less likely candidates to become the functions of a universal module.  1.19     Integrating Identical Functions: A Universal Module  Now comes the next logical question—is it possible to design a single universal solution for identical functions? The answer is ‘yes’ and ‘no’ depending upon the response from academics verses industry. The current trend in the automotive 1.19 Integrating Identical Functions: A Universal Module20industry is that all the major players are busy developing in-house solutions to implement embedded functions. Consequently, there is no universal module that exists today for the identical functions where it could be used by other vehicle man-ufacturer—let’s say, just by changing the software code.  In the consumer industry, however, products have been developed to support universal solutions like USB, Wi-Fi, Bluetooth, or many other PCI based devices.  No such universal automotive module came to life to be known famously. However, there are consortiums exploring the possibility of common standards and practices to achieve a consensus on a common platform.  At this time, we hope that you must have already gotten the perception of ‘in- house’ solutions in the automotive industry. This paradigm, which had evolved for many years eventually had resulted non-compatibility of electronics modules across the board. The overall impact to the customer is parts availability from a limited source, and a redundant competition among OEMs. Custom design solutions are not easy to handle in the maintenance phase of the vehicles. Any module failure in the ﬁ eld requires real ‘genuine’ replacement due to lack of interoperability.  The upward or downward compatibility is a big concern if the repair and main-tenance model in the target market demands interoperability. The customer-base in North America or similar markets have much less worries about the interoperability of electronic control modules because they have the mind-set of going to the dealer-ship to ﬁ x any vehicle related issue. Therefore, the maintenance mechanism is pretty much transparent from the customer base. However, the mind set of going to the dealership is not entirely true for many different parts of the world and if you hap-pen to be residing in a place where cross-compatibility is a huge concern then you might want to develop a universal-module based on a pre-deﬁ ned set of interfaces, where a software change could add or delete the feature set, and the end-user will have the options to ﬁ t intended design with minimal interface changes. This could be possible by adapting to well-deﬁ ned standards that are agreed on by the industry, regulators and the major stake holders  1.20     Key-Off Load Current  As stated earlier, vehicle battery is the primary source of power feeding power to all the modules. Furthermore, the ignition switch is the primary switch to turn-on or turn-off the power to the modules. However, there are modules installed in any vehicle that are independent of ignition switch turn-on status—and these modules get power even after the ignition switch is turned-off. So, an added function in such type of modules is an electronic switch inside the module that can actually turn off the unnecessary battery drain when the intended function (s) is not needed. Nonetheless, to control the electronic switch inside the module, it is essential to keep the microcontroller powered up in sleep mode to continue functioning by 1 Vehicle Electronics Architecture21utilizing the relevant hardware. The terminology of ‘Keep Alive’ is used to deﬁ ne the hardware current consumption requirement to power-up the necessary hardware while performing ‘keep-alive’ activities of the operation. Modules, however, do consume power even when the ‘keep-alive’ hardware is active. The module current consumption while in this mode of operation is universally recognized as the key-off load 2  current (meaning that ignition key is OFF, but the module is ‘loading’). One of the critical performance measurements of today’s vehicle electronics archi-tecture is the total current draw when the ignition key is off. It is highly recom-mended that when the vehicle is parked for a longer period of time, for example, 30 days, then the battery must not drained itself completely past 30 days period rather it must be able to crank the engine even it had been loaded by the key-off current for 30 days duration of time.  Side Bar: The good design practice is to keep the KOL as low as possible. Assume a vehicle that is equipped with all the modules as shown in Fig.  1.9 . Let’s say that four (4) modules are required to be ‘kept alive’ at all times while each con-suming a key-off load current of 1 mA then the total current of 4 mA is the overall vehicle key-off load. Under this constant load of current if the battery can sustain 30 days of current drain then it is an acceptable design required by the Federal Motor Vehicle Safety and Standards (FMVSS). This formula of 30 days is one of the fac-tors used when calculating the size of the battery for a particular vehicle.    1.21     12V/42V Electrical Supply System  One of the serious concerns today is the size of the battery in terms of delivering power. Additional battery need had kicked off 42 V electrical supply system. A 42 V system is actually a topology of three batteries added in series to get 36 V. As every battery needs to be charged around 14 V, its charging system must deliver 14 multiplied by 3 = 42 V, the reason to call it 42 V system. A 12 V battery system likewise can also be called as 14 V system.  Added multimedia functions, family entertainment systems, high-torque motors and more functions are some of the motivators to add the extra power. There are companies doing business in the market that either has developed 42 V devices or in the process of acquiring this technology. The progress towards 42 V supply system has not been as enthusiastic as it was thought previously, some forums complained why an already established system of 12 V batteries and infrastructure allowed to be replaced?—But—it is still not completely off the table yet because electric and hybrid cars have merits for high electrical energy needs, and some are launched with 14 V/42 V electrical systems.  2   Key-off load current is also known as the dark-current in some target markets. The other names are quiescent current, or sleep current. 1.21 12V/42V Electrical Supply System221.22     Vehicle Input Sensors and Switches  A variety of sensors in a typical vehicle are used to transfer physical quantities into electronic quantities measurable by a computing node. For example, engine tem-perature, engine revolutions per minute, mass air-ﬂ ow, fuel quantity, vehicle speed, steering wheel position, wheel angular velocity, steering wheel tactile switches so on and so forth. Regardless of what type of sensors and technology is selected and used, the output to the microcontroller must represent a well-deﬁ ned voltage signal level either digital or analog. The signal must remain deﬁ ned throughout the varying vehicle environments in its well-deﬁ ned operational envelop. The vehicle external mechanical surroundings are largely classiﬁ ed as  N oise,  V ibration, and  H arshness (NVH). The NVH is the technical term used in the automotive industry to deﬁ ne effects of engine vibration, wind, road, and other mechanical parts that could cause unwanted noise and vibration onto the vehicle performance thereby impacting the overall vehicle performance. The vehicles are tested for noise, vibration and harsh-ness at extreme temperatures under varying operating conditions.  The signal representation of the physical quantity must demonstrate the repeti-tive transfer function over a well-deﬁ ned period of time. In case the signal accom-panies an electrical noise factor, it must be conditioned and ﬁ ltered to get to the best clean signal possible. If for any reason like temperature or intrinsic variations where the sensor transfer function is affected then the sensors have to have an offset cor-rection to the measured value. In such case the software based compensation method must be developed and implemented.  The conditioned signal should then be level shifted, and scaled to microcon-troller input ports—in case it is above and beyond the deﬁ ned range of the micro-controllers input ports. The module inputs pins must be protected from any short-circuit condition of the sensors, short to battery positive, negative terminal vehicle chassis. (Vehicle chassis is always fed to battery negative terminal)  If the excitation voltages of the sensors are above the safe operating limit of con-ditioner circuits, then the additional protection is required to safeguard the signal conditioning circuits. Every input signal to the module from the vehicle harness must be protected from the unwanted energy transients and spikes (Fig.  1.12 ).Excitation VoltageOptical Hall-EffectAnalog to Digital Conversion   Time Capture Analog to Digital Conversion     Digital Inputs/OutputsConditionerConditionerSoftwareProcessSwitch ConditionerMagneticConditioner  Fig. 1.12    Input sensors & switches interface        1 Vehicle Electronics Architecture23   The excitation voltage and current requirements depend on the type of sensors and conﬁ guration of switch. In some cases, switches do not require any excitation voltage rather are connected to ground or the negative terminal of the battery. The trick is to sense zero potential when the contact is closed.  1.23     Vehicle Output Devices  In a typical vehicle, variety of actuators has been used to actuate a device. An actuator could be a door-lock-solenoid, fuel-injector-solenoid, a dial-pointer, a relay or an ignition coil. Other types of output devices could be a stepper motor, servo driver, headlamps or a high-torque motor. The high power devices usually get direct battery feed through the fuse. If the device needs to be controlled by applying the battery positive terminal, then it requires a high side-driver (an electronic switch). If it needs to be controlled by applying the battery negative terminal (ground), then it requires a low-side driver (an electronic switch). The Fig.  1.13  shows an example where two unique devices are connected to be energized by a high-side switch and a low-side switch respectively independent of each other. Nonetheless, Device A gets power when the high side switch is placed in closed-position, and Device B gets power when the low-side switch is placed at closed-position. Both switches are under the control of a microcontroller digital port and all the switching actions are performed by a software process.   In the world of electronics, an electronic switch means a transistor conﬁ g-ured as a switch. The transistor could be of any type: Digital, Bi-Polar Junction (BJT), Field Effect Transistor (FET) or (MOSFET). The MOSFET switches are well known in industry for their high speed, low resistance, and high current switching characteristics. A TOPFET is a type of MOSFET with added features of ‘ T emperature and  O verload  P rotection’. A TOPFET by  Philips Semiconductor (now NXP)  is worth surﬁ ng the internet. The commercial-off-the-shelf (COTS) automotive devices are available from many different electronics design & semi-conductor manufacturing companies like  Texas Instruments, Inﬁ neon ,  Toshiba , B+High Side SwitchSoftware commandSoftwareProcedureLow side switchBatteryDevice ‘A’Device ‘B’MicroDigital Port  Fig. 1.13    High-side & low-side topology        1.23 Vehicle Output Devices24 Fujitsu ,  Fairchild ,  On-Semiconductor, International Rectiﬁ er ,  ST Microelectronics, Maxim Semiconductor, Microchip, ROHM,Intersil, Renesas, Linear Technology, Panasonic, Atmel, NXP and Freescale etc.   1.24     Vehicle Interior Lights Dimming  No modern vehicle today gets manufactured without the use of lighting system inside the cabin for switches, gauges, climate control knobs, radio functionality and many other human machine interfaces—herein referred as interiors lighting. A criti-cal feature of interior lighting is the dimming control for each light source. The most common technique used to regulate the light-intensity is to control the light-source- current by switching the applied electrical energy.  The switching method to provide the dimming function utilizes the pulse width modulation (PWM) technique. Every light source that requires dimming control must be switched using the PWM technique, either separately or in a group  In the PWM technique, the device receives energy from the battery passing through a switching circuit—controlled by a software procedure. In Fig.  1.14 , one such topology is shown where a lamp is connected to the battery through the elec-tronic switch. The electronic switch gets the switching-pulses controlled by the microcontroller’s PWM output channel by the aid of a software procedure. This is how the lamp dimming function in a typical vehicle is being performed.   The software procedure is used to toggle the electronic switch to transfer battery energy to the lamp. The pulse width determines the duration of time it takes for the energy to transfer to the lamp. When the switch is permanently ON, it equates to 100 % duty-cycle or full brightness. If the switch is toggling at 50 % duty-cycle then it is half of the brightness. Similarly a 10 % duty cycle means that the electronic switch is ON only for 10 % of the time and stays OFF for rest of the 90 % time as shown in Fig.  1.15 . At 10 % duty cycle we expect to see lower intensity level.B+SoftwareProcedureBatteryLampElectronic SwitchMicro PortPWM Channel  Fig. 1.14    Lamps or LED control & dimming        1 Vehicle Electronics Architecture25   In Fig.  1.15  (a) pulses are captured at the pulse width modulated output channel when the software is generating a 100 Hz pulse. The 50 % modulated pulse meaning the electronic switch is ON for half of the time or 5 ms.  Figure  1.15  (b) is captured when the pulse is modulated for 10 % meaning the electronic switch is ON only for 10 % of the time or a total of 1 ms. However the frequency of operation is exactly at 100 Hz, but the pulse-width has changed by the aid software inside the microcontroller.  The software can control the modulation from 0 % to 100 %, which equates to the brightness of LED from complete darkness to full brightness. Switching the frequency, and the modulation of pulse plays a vital role for the lamp brightness. Please note that the selection of 100 Hz frequency is for educational purposes only.  The light intensity and color control of LED’s and lamps plays a critical role in vehicle electronics architecture. A lighting harmony across the vehicle-interiors is required at all times from each light source on a ‘class A’ surface, where ‘class A’ surface is roughly deﬁ ned as the surface inside the cabin, seen and touched by the customer.  The dimming function is achieved by utilizing a single dimmer control switch. The dimmer control switch gets interfaced to the complex vehicle electronics archi-tecture by means of a hardwired circuit. The hardwired circuit must be capable of sending electrical signal to all the electronic circuits needed that information to control the light-intensity  By the virtue of the fact that vehicle electronics today is a distributed architecture where many modules are installed in a typical vehicle, each applicable module has to control the light-sources that are under its hardware control. Nevertheless, light sources are scattered all across the vehicle therefore, multiple pulse width modulated signals are generated by various dissimilar modules in order to drive the lamp or LED intensity. The PWM signal received by the relevant modules is further modiﬁ ed by each module to adjust the dimming. 10msONON                    T=1/f      1=1/100 = 10ms5ms(a) ON=50%, OFF=50% @100Hz          On Time = 5ms,             Off Time = 5ms(b) ON=10%, OFF=90% @100Hz      On Time=1ms,         Off Time=9msOFF           OFF  Fig. 1.15    Modulated pulses to the electronic switch        1.24 Vehicle Interior Lights Dimming26 By using the Foot Lambert (FT/L) light intensity scale verses the applied volt-age; intensity of light source is plotted on the graph. However an additional work is needed to re-deﬁ ne the steps of the dimming switch steps verses the percentage of pulse modulated signal. It is commonly referred as the dimming curve. The dim-ming curve gets stored in the relevant module memory as a look-up table.  The dimming switch-steps control must demonstrate harmonized intensity and color control throughout its operational envelop. Given the fact that there are vari-ations in lamps, LED’s, light-pipes, electronics, plastics, color, ﬁ lters, back-ground, and dimming curves, it is quite a challenge to harmonize the internal vehicle lighting system. Vehicle manufacturers spend time, energy and costly equipment to harmonize the vehicle lighting systems across all light-sources from different modules inside the cabin. It is a very lengthy process in vehicle studio, and suppliers have to achieve the certiﬁ cate of compliance for their products feed-ing the light sources before their products are allowed to be installed in the vehicle meant for public sale.  A typical in-vehicle topology of interior lights dimming control is shown in Fig.  1.16 . The dimming switch is the master-switch accessible for the customer, feeding electronics circuit and converting each dimming step as pulse modulated frequency duty-cycle. The PWM signal is fed to every module requiring that infor-mation. Furthermore to this, the PWM could additionally be converted to transmit as a CAN message available on the vehicle communication bus thereby eliminating the need of extra electrical wiring. An example of redundant dimming signal scheme is drawn where a CAN message as well as hardwired PWM signal is fed to the module D. As can be seen that vehicle CAN bus is receiving the dimming steps which could be used by other vehicle systems.1.25        H-Bridge Motor Driver  It is often required to spin a motor in both directions like the one that opens and shuts the vehicle door glass-window. To turn the motor in both directions (clock-wise, or anti-clockwise) an H-Bridge conﬁ guration is used. The H-Bridge conﬁ gu-ration is a set of 4-switches pre-arranged to switch the polarity of DC current motor as shown in the Fig.  1.17 . It shapes like the alphabetical letter ‘H’, and works like a polarity reversal switch by energizing the motor-armature in both directions. When switches F1 & F2 are placed in closed position the positive terminal gets connected to the motor brush ‘A’ and negative terminal to motor brush ‘B’. This turns the motor in forward direction. (Assume ‘forward’ just for the sake of understanding) and when the switches R1 & R2 are placed in closed positions, motor turns to the reverse direction. The ‘H’ bridge is a classic example of using high-side switches and low-side switches in a simple application; as you can note that F1 & R1 are high-side switches and R2, F2 are low-side switches. H-Bride driver circuits have been used in many automotive applications.   Headlamp leveling is another example of using motors to spin in both directions. The European regulation requires that headlamp leveling compensations must be 1 Vehicle Electronics Architecture27Vehicle CAN BusDimming Switch StepsModule APWM Duty-Cycle ConversionCAN Data ConversionLight Sources Group ALight Sources Group BLight Sources Group CLight Sources Group DModule BModule CModule D  Fig. 1.16    Vehicle level dimming topology       F1      R1A   R2F2BatteryDC MOTOR      Fig. 1.17    H-Bridge conﬁ guration         1.25 H-Bridge Motor Driver28exercised to offset headlamp beams aiming unnecessarily upward or downward—mainly due to uneven terrain or added trunk loading.  The embedded controller is used to apply corrections for the headlamp aiming based on the inputs received from the vehicle pitch-attitude sensors mounted in the vehicle suspension system. Another example where H-bridge conﬁ guration being used is seat adjustment motors and side view mirrors.  A commercial-off-the-shelf (COTS) H-Bridge integrated circuit  TLE 4206  developed by  Inﬁ neon —particularly for the headlamp leveler could be studied fur-ther to know more about this ‘cool’ device. The other semiconductor manufacturers like  Philips Semiconductor (NXP Semiconductor), Motorola (now Freescale Semiconductor), Intersil, Texas Instruments ,  On-Semiconductor, International Rectiﬁ er, ST Microelectronics, Fairchild, Linear Technology, ROHM, Fujitsu, Renesas, Microchip, and Atmel have  products in the market to support many similar or different types of automotive applications.  1.26     Communication Link  The integral part of overall electronics architecture of today’s automobile is the communication link that has experienced several historical evolutions. Automotive manufacturers spent time, energy and money to develop many different types of serial data communication buses mainly for two reasons:•    To share data among modules i.e. inter module communication or message passing  •   To transfer sensors data to the modules     Over the past several years, the efforts of automotive OEMs along with their supply-base partners have evolved many different buses. In order to give our valued reader a glimpse into the buses that have been developed for the automotive applica-tions; few are listed below:•    Standard Corporate Protocol ( SCP)   •   Audio Control Protocol  (ACP)   •   Motorola Interconnect  (MI Bus)   •   Distributed Systems Interface  (DSI)   •   Bosch-Siemens-Temic  (BST Bus)   •   Byte Flight  (SI –Bus)   •    Flex Ray   •   Domestic Digital Data Bus  (D2B)   •   SMARTwireX  •   IE Bus  •    LIN bus (Local Interconnect Network  )   •   Boeing Intellibus  •    CAN (Controller Area Network)   •   Time Triggered CAN (TTCAN)  •   ISO9141  •    GM LAN     1 Vehicle Electronics Architecture29 You must be wondering; why have so many buses been developed? Why couldn’t OEMs have developed just two universal buses, a  data bus  for data transfer among modules, and a  data bus  to transfer sensor information to the module?  The answers to this and for many other questions you might have over the buses are beyond the scope of this book. However, it is quite interesting to note that auto-motive sector was not able to develop a common standard platform for the vehicle data communication bus (unlike the PC world where USB is the de facto standard or unlike the Avionics design segment where ARINC 429 had established pretty strong foundation for a long haul of 25 years).  The ultimate result for not having a standard communication platform across the automotive OEM’s is not so very helpful to assist maintenance, repair and compat-ibility across the board; including but limited to similar set of tools and test  platforms. It is indeed an issue that had forced OEM’s to develop communication message-sets based on their unique requirements. The vehicle bus communication message-set compatibility across the board does not exist in the market today.  Every manufacturer develops and incorporates its own set of message set regard-less of common physical layers. The most common physical layer that continues to lead the automotive industry for the purpose of sharing data among the modules is Controller Area Network (CAN) with variety of ﬂ avors in data transfer speed. The sensors data transfer is being handled by single wire LIN communication. So, in the real world CAN and LIN are dominating the automotive market.  Controller Area Network (CAN), which was initially developed by Bosch is the growing trend in the automotive sector, primarily used to transfer data among  modules. It is mainly used as a half-duplex topology, and physically realized by using differential pair of twisted cable with  N on  R eturn to  Z ero (NRZ) encoding format. The access control is based on  C arrier  S ense,  M ultiple  A ccess with  C ollision  D etection (CSMA/CD). The bus voltage varies from 0 to 5 V max. The bus speed varies from 125Kb/s to 1 Mb/s. A typical vehicle may utilize multiple speed CAN nodes. The modules requiring high-speed message transfer-rate uses high speed CAN bus and the modules requiring medium-speed message transfer-rate uses the medium speed. In a typical vehicle, multiple backbones could be used to support overall communication architecture.  Side BarIn the consumer industry like personnel computer design space has been using a serial bus standard for many years commonly known as Universal Serial Bus (USB). Similarly, the Avionics industry has seen for well over 25 years a serial interface called ARINC 429 to transfer information between airplane comput-ers. Now at the writing of this book, the automotive industry looks settled on controller area network (CAN) communication bus where only the physical layer is universally recognized, but message formats, standard hand-shake pro-tocols, diagnostics and operational software interfaces are highly conﬁ dential.   1.26 Communication Link30 There are three major applications of serial data bus communication in a typical vehicle as listed below:•    Inter-module information sharing  •   Diagnostics and testing  •   Flash programming downloads    1.26.1     Inter-Module Information Sharing  The modules share information to help complement each other’s functional operation via serial data bus communication. An example is engine temperature—primarily a parameter computed by engine controller sensor. However, it is required that the engine temperature must be displayed by the instrument cluster to alert driver about the engine temperature. The Instrument Cluster rather than using an additional sen-sor to sense the engine temperature could actually request engine controller to release this information via inter-module communication bus. Another example is engine revolution per minute information from engine controller as shown in the    Fig. 1.13. The information is read by the instrument cluster.  Thousands of messages could appear on the communication bus at peak time while the vehicle is in full operational mode, and the information gets shared by different kind of modules. Messages like wheel speed, engine coolant temperature, door ajar, tire pressure and so on so forth.  1.26.2     Diagnostics and Testing  A “SERVICE ENGINE SOON” light (sometimes called Malfunction Indicator Lamp, MIL) when turned on in your vehicle indicates that the Instrument cluster had received a message from a module for an error condition related to the engine parameters. Your next step would be to go to a service center where the diagnostic tools can be used to read the diagnostics trouble code (DTC)—stored in the module memory—by connecting to the vehicle serial bus communication port via a diagnostics connector. The diagnostic tool can then tell you the speciﬁ c details about the type of failure (i.e. oxygen sensor, knock sensor, failed spark plug, etc.). The diagnostics trouble code is nothing, but a unique identity number expressed in hexadecimal format allocated to that particular failure, and gets logged into the module memory at the time of failure. Likewise an “ABS light” if turned on indicates some error conditions existed in ant-lock brake system, so and so forth  This method of storing these faults had been introduced in the early days of  automotive electronics; when the displays and the message-centers were not that 1 Vehicle Electronics Architecture31common in the vehicles. Today in the world of cutting edge technology it is possible to develop more elegant solutions; like for example an audible warning or a mes-sage displayed to alert the customer about the fault conditions or the most probable cause (s) of failure rather in addition to just logging the DTC codes.  Nevertheless, before you quickly jump to this conclusion, you must make sure that there are no regulatory compliance requirements to implement this topology.  In Figures  1.18 , we have shown how the modules of a typical vehicle could be accessed in a service center so that the diagnostics tool could read the DTC. The vehicle when parked in the service center must be connected to the diagnostic tool through the diagnostic port mounted inside the vehicle. Diagnostics port is the  physical connection, routed to the vehicle communication buses, battery power and the battery ground. Once the communication is established to any of the module, the DTC code from that module is pulled and read to get to the details of the failure. There is no mechanism inside a modern vehicle today to dump all the failures to a central storage area in order to ﬁ nd the DTC code. Consequently, each module must have to be accessed, one by one, to get to the fault code (s) by means of an external service tool. The diagnostics features discussed so far have been standardized by the Society of Automotive Engineer (SAE) as On-board diagnostics II (OBD-II); endorsed by California Air Research Board (CARB), and concurred by the Environmental Protection Agency (EPA). The main original theme of OBD II is to maintain a failure log and caution driver about the potential emissions issues to the vehicle. However, today the scope has been extended to almost every vehicle sys-tem; thereby enabling other system to take advantage of DTC strategy to log the fault codes (Fig.  1.19 ).RPM Message (…00 03 0A FF…….)ECMICHVACTPMSA...Z  Fig. 1.18    Messages on the communication bus        1.26 Communication Link321.26.3         Flash Programming and Data Download Features 1.26.3.1     Fault Code Data Storage  An important feature of a vehicle module is the requirements of using selected memory space in the module, so that it can be used as the storage for the diagnostics trouble codes. As explained earlier, diagnostics trouble code (DTC) is nothing, but just a binary code expressed in a hexadecimal format—the sole purpose is to record a system malfunction; detected by the module operational software. The module operational software always runs the system integrity tests in the background, and if at any time faulty conditions are detected; either permanent or temporary—the fault code gets stored in the module EEPROM. This is the basis of our actions performed in the vehicle service center explained in earlier    Sect. 1.1.5.  In essence, the module diagnostics software runs the memory read-write integ-rity tests, maintains log of information referred as diagnostics trouble codes. The module diagnostics software can also perform DTC read-write and erase operations as needed. A fault code log is maintained by the module diagnostics software. The logged DTC, erase-operation is required if the actual fault has been disappeared over a certain period of time, or if the service center has repaired the faulty system. When the fault is disappeared over a certain period of time—say for example a period of 80 ignition cycles, then the DTC gets erased by the module diagnostics software itself. However, if the fault has been repaired at the service center then the external tools must have to be used to erase the fault code.  Vehicle DiagnosticsConnectorModule AModule ZDiagnostics ToolVEHICLECUMMUNICATION BUS  Fig. 1.19    Access to the modules when the vehicle is parked at the service center        1 Vehicle Electronics Architecture331.26.3.2     Calibration, Conﬁ guration and Nomenclature Data Storage  In addition to a memory reserved area allocated for the DTC logs, a memory space is reserved to download (download means to put data or code into the module appropriate memory locations) conﬁ guration and calibration data into the module memory. Conﬁ guration data is required to conﬁ gure the module for its intended features and functions in a typical vehicle. Calibration data is needed to be stored in some modules to optimize control system performance associated with vehicle interfaces. Finally, nomenclature data must be stored for the module identiﬁ cation information. The mod-ule nomenclature data includes but not limited to manufacturing date code, part num-ber, software release date, and version. In all cases, information must be stored in the module memory by using a well-deﬁ ned software download procedure.  There are many ways to download the calibration, conﬁ guration and nomencla-ture data, but two common ways are listed below:•    Serial Communication Bus  •   Stand-alone Direct Processor Access     1.26.3.3     Serial Communication Bus Method  If the ‘downloads’ were to happen in a vehicle assembly plant; the serial bus is the preferred mode of operation. The vehicle serial bus is accessible through the diag-nostics receptacle—an essential part of every modern vehicle built today. The Fig.  1.20  is showing how the modules of a vehicle positioned in an assembly line could be accessed via the diagnostics port attached to the end-of-line (EOL) tester. EOL TESTERSerialCommunicationPCM IC ModuleVEHICLETPMS FileANTI SKID ModuleTCU ModuleDiagnosticsReceptacleDiagnosticsConnectorAIRBAG ModulePOWER ModuleHVAC ModuleTPMS ModuleHVAC File  Fig. 1.20    Vehicle in the assembly line receiving calibration and conﬁ guration data        1.26 Communication Link34Majority of OEM’s uses the download procedure to transfer calibration and con-ﬁ guration data only. The module program code download is carried out by the mod-ule manufacturing site at the time of module manufacturing. Occasionally it is required to update the software at the vehicle assembly plant as well.   The application software code gets loaded in the module manufacturing plant not in the vehicle assembly plant. A complete software-code downloading to the mod-ule rarely happens in the vehicle assembly plant, but there is always a possibility to do that for variety of reasons ranging from error corrections, bug ﬁ xes, improve-ments, robustness or a ‘killer application’ speedy launch. The main issue with the complete software download in the vehicle assembly plant is the manufacturing throughput. An addition time is required for the complete ﬂ ash-download, which will reduce the throughput to the overall productivity. However in an emergency situation where software update is highly needed the complete software code down-load could happen in the vehicle assembly plant.  In Fig.  1.20  the TPMS module is being highlighted while it was selected for the download from the EOL tester. However, other vehicle modules get connected to the end-of-line tester—selected one at a time and conﬁ gured by the software to get their share of information. The communication bus by the aid of network operating software helps to establish peer-to-peer connection to download the calibration and conﬁ guration data. Once the EOL tester veriﬁ es the data integrity of the down-loaded ﬁ les, it then relinquishes control back to vehicle modules.  1.26.3.4     Stand-Alone Flash Programming Method  If the downloads were to happen in a module manufacturing line then there are  different types of tools to program the microcontroller’s ﬂ ash memory.  If a low-volume is the desired-intention then the off-the-shelf programmers could be used to program the microcontroller. If high-volume is the desired- intention then sophisticated equipment is needed to program tens of thousands or millions of microcontrollers in a timely fashion.  An off-the-shelf ﬂ ash programming device is like a stand-alone programming sta-tion having the functionality of placing one or many microcontrollers on a row of sockets recognized as zero-insertion force socket (ZIF) sockets. The purpose of using the ZIF sockets is to install and remove the devices quickly from the programming sta-tion. The hardware inside the stand-alone station enables the external device to manage programming functions. The programming functions include, but are not limited to downloading and veriﬁ cation of object ﬁ le into the microcontroller memory. However, the ﬂ ash programmer itself connects to the external device using standard SCSI inter-faces like USB, RS232, IEEE-488 or else. Once the programming function is achieved, the microcontrollers could be removed to be used in the target module or systems.  Stand-alone type of programming is wide spread in the industry during the development phase in the research & development facilities. Nevertheless, it can also be used for a small scale proto-type production of the parts. There are compa-nies out there in the market who make their living by doing ﬂ ash programming as their core business. The Fig.  1.21  is drawn to show how this procedure works.1 Vehicle Electronics Architecture35PC/LAPTOPPC to TesterINTERFACEOBJECT FILEZIFZIFZIFZIFZIFZIFZIFZIFZIFPush Button to initiate programmingZero Insertion Force Socket to place ‘microcontrollers’  Fig. 1.21    Programming eight processors in parallel using gang programmer                 Salient Features of a typical programmer or burner •    Programming method turns logic 1 to logic 0  •   Object ﬁ le resides in the personnel computer or the laptop  •   Processors can be inserted into the ZIF socket eight at a time in this burner  •   After downloading the ﬁ le in the programmer/burner, the user can start program-ming using control switches  •   A program time of  x  seconds is needed to program all the micros  •   A bootstrap loader is not required in stand-alone programming.  •   A blank check by the ﬂ ash programmer means veriﬁ cation of all one’s  •   A blank processor means all ones in the memory locations. ($FF each location)  •   PC interface may be RS232C or USB or IEEE-488 (HPIB)  •   To change a memory location to ‘zero’ requires the application of a pre-deﬁ ned programming pulse, and a higher voltage level in a timely fashion while the address bus, data bus, and the memory enable lines are active.      http://www.aecouncil.com/AECDocuments.html      The Automotive Electronics Council mandates the semiconductor industry to follow AEC Q100 qualiﬁ cation process in the automotive design space. It is mandated across all semiconductors manufacturers to test and qualify semi-conductors used in harsh automotive environment in accordance with the added testing, validation and automotive qualiﬁ cation process. The detailed AEC documents details are linked to the following web-site. 1.26 Communication Link361.27     Microcontrollers Programming Options  The modules developed for automotive applications utilize microcontrollers with conventional features like: –   Instruction execution speed (MIPS)   –  An instruction set like Complex Instruction Set Computer (CISC) verses   –  Reduced Instruction Set Computer (RISC)   –  The size of RAM   –  Flash memory size   –  ROM size & functions   –  Number of digital and analog ports   –  Pulse width modulated channels   –  Timer ports   –  I 2 C, SCI and SPI buses.   –  CAN bus Protocol Controller   –  Harvard Architecture or   –  Von Neumann Architecture     Nevertheless, the unique additional feature of CAN bus protocol controller embedded in the microcontroller makes it very attractive for the automotive com-puting design space.  Irrespective of the features offered for a typical processor, one signiﬁ cant feature that stands out noticeably is how the internal programmable memory contents of the processor gets to store the program code?  There could be identical microcontroller-types with different memory variants available to write binary data into its non-volatile programmable memory addresses space as listed below:•    One Time Programmable (OTP) microcontrollers  •   MROM (Masked Read Only Memory) microcontrollers  •   Flash Memory microcontrollers  •   EPROM microcontrollers    1.27.1     One-Time-Programmable (OTP)  OTP type of processors only allow single memory write cycle, which means no room for error and mistakes, the software code must be released with high degree of conﬁ dence after a rigorous software veriﬁ cation and validation testing. The one-time- programmable processors can be ‘burned’ utilizing off-the-shelf programming devices. The data-write operation is similar to the Programmable Logic Array (PLA), where the fusible-links alters the binary-value changed from logic 1 to logic 0 and follows the data pattern as needed. Once the microcontroller is fully pro-grammed, it  cannot  be erased or re-programmed for any other application. 1 Vehicle Electronics Architecture37 The one-time programmable memories are also known as the Programmable Read Only memory (PROM). The trend to use OTP processors in the automotive industry is losing grounds in recent years due to the fact that rapid changes in the software functions require re-programming within a very short period of time and OTP processors are not the fastest way of achieving the task. Furthermore it is not a cost effective way to deliver the product in the market.  1.27.2     Masked Read Only Memory (MROM)  MROM type of processors requires that the software code must be released to the semiconductor manufacturing company no less than 4–6 weeks in advance. This lead time is required by the semiconductor manufacturing companies to mask the ROM code for that particular processor. The high-volume, cost-saving is the pri-mary enabler for this option. However, this option is not feasible in the current automotive marketing segment due to continually increasing challenges of software updates. The time plenty of 4–6 weeks leaves little,—or no room for additional software patch and has no ﬂ exibility of code change once the ROM code is masked.  Nevertheless if you have an application where the software code has been  veriﬁ ed, and validated, and the product has been functioning quite well over the years—as per needs and wants of the customer then it is worth spending time to prepare the business case to switch to MROM version of processor. The main deciding factor to switch to MROM version of the processor is the determination of the fact that the future code release has deemed unnecessary throughout the product lifecycle, and that the addi-tional cost saving could be achieved by switching to MROM version of the processor.  1.27.3     EPROM Microcontrollers  The EPROM (Electrically Programmable Read Only Memory) microcontrollers have EPROM space built-in for the programmable storage. These are  electrically  program-mable, but are  not  electrically  erasable  rather require erasing under the exposure of ultra-violet light source or the ‘sun-shine’. The word ‘sun-shine’ is intentionally used to describe the fact that ultra-violet light exposure is possible if these microcontrollers are exposed to sunlight for a longer period of time. It is for this reason that these microcontrollers’ glass-window must be covered with a black- tape after the ﬁ nal pro-gramming is done. In the real world the erase operation is performed by placing the microcontroller under the ultra-violet light source in an enclosed box.  The EPROM based microcontrollers are easily noticeable by the small-glass- window exposing the EPROM to the external world. Whenever it is desired to erase the memory contents, the glass window must be exposed under the ultra-violet light source for about 15–20 min. The erase operation erases the entire memory contents, all blocks, each and every memory cell, so there is no room for a partial, or selective 1.27 Microcontrollers Programming Options38memory-space erase. The EPROM based microcontrollers are not suitable as the ﬁ nal product to be delivered to the vehicles due to multiple erasing tasks, and extended time-consuming constraints. Imagine yourself in a situation where you have to upgrade a module software operating in EPROM installed in a vehicle. It would be very difﬁ cult to remove processors from the systems already installed in the vehicles and perform a lengthy procedure like removing the module, opening up the electronics board, unplugging the EPROM, placing it under the UV source light and wait for 15–20 min to perform the erase-operation. And ﬁ nally, it requires reprogramming each processor with a programmer. This is a time consuming pro-cess not aligned very well with the automotive design space.  1.27.4     Flash EEPROM Microcontrollers  The most commonly used microcontrollers in the automotive electronic space are integrated with the Flash EEPROM. The Flash,  E lectrically  E rasable  P rogrammable  R ead  O nly  M emory does not require ultra-violet light source to erase the memory cells rather consumes electrical energy to perform the quick erase.  The process of erasing is so fast that it is analogous to the speed of a camera-ﬂ ash as envisioned at the time of invention in Toshiba Semiconductor Company. It is truly the reason that had inﬂ uenced the inventor to call it ‘Flash Memory’. The functional behavior of ﬂ ash memory is similar to the Electrically Programmable Read Only Memory (EPROM)—But, by the advantages of ﬂ oating-gate and control- gate MOSFET transistor technology the program-cycle, and erase-cycle is simple. The ﬂ oating gate transistor has galvanized the memory industry. The Fowler-Nordheim electron-tunneling method of current ﬂ ow is the key-enabler while the erase-cycle is realized by applying the electrical energy. Moreover at the time of write-cycle, channel hot-injection method is utilized that changes the transistor- cell state to a logic-one 3 .  Furthermore to this, the memory cell topology allows the memory-block access thereby achieving faster erase cycles, which is a great advantage to reduce the pro-gramming throughput in the ﬁ eld. It is by the far the  best option for the automotive computing design space , and has been widely used across the board.  The microcontrollers that have been utilizing ﬂ ash memories for the program storage could be labeled as the ‘FLASH’ processors (although it is not the ofﬁ cial name). Flash processors, are more expensive than their OTP, MROM or EPROM counterparts; however, they have the huge beneﬁ t of re-programming the software- code pretty quickly without removing the automotive modules in the ﬁ eld. The pro-gramming could be done while the systems are already installed in the vehicles, which makes it a very attractive choice in the automotive embedded software down-loads. Flash programming the microcontroller at the last minute is like a dream come true for the embedded software developers.  3   Roberto Bez et al., ST Microelectronics Proceedings of the IEEE, Vol. 91 no. 4, April 2003 1 Vehicle Electronics Architecture391.27.5     Stand-Alone Non-Flash Type EEPROM  The subject of programmable memories will stay incomplete without introducing the role of stand-alone  non-ﬂ ash  type EEPROM. We have to introduce this concept due to a fundamental design principle related to the usefulness of non-ﬂ ash type stand-alone EEPROM in an automotive module. Recall that ﬂ ash-type memory works on the  block-write  when the write-cycle is executed, which is quite an advan-tage for fast erase and program blocks of data. Yet, there are occasions in the operational- life of an automotive electronics module where a byte of data or word of data write-cycle is necessary on a  single-memory  location in a timely fashion—contrary to  block-memory  access where data-write to a  block-size  is more advantages. The best option to write quickly, and efﬁ ciently –a single location—is by utilizing a non-ﬂ ash type memory to achieve single-location, read-write operation. A quick example of such scenario is to record a diagnostics trouble code that must be placed in the EPROM as a single-write.  The organization of non-ﬂ ash type EEPROM places two transistors per memory cell-structure to achieve the task of write, and erase cycles electrically. The biggest advantage of non-ﬂ ash EEPROM is the ability to write and erase a single memory location, which has an essential use in the automotive modules. Although the non- ﬂ ash type stand-alone EEPROM’s are slow, not so compact, and rather expensive compared to ﬂ ash-type EEPROM, the use in automotive electronics is inevitable for many good engineering reasons (Table  1.2 ).1.28         Vehicle Programming  Flash programming using the vehicle network bus has gained momentum lately; in fact it is in full motion, and has solid footing in the industry today. The idea is to download the entire module application code into the microcontroller’s ﬂ ash mem-ory by utilizing the network communication bus.  Well! How the network could function if there are no program instructions stored in the microcontroller memory? –   A blank microcontroller with no program instructions in the memory could not function at all!   –  So, what is the solution?       Table 1.2    Automotive modules programmable memory types    Memory  Programming  Erasable  Automotive use  Technology  Flash  Electrical  Electrical  High  1 ﬂ oating-gate transistor/cell  EEPROM  Electrical  Electrical  High  2 Transistors/cell  EPROM  Electrical  UV Light  Rare  1 Transistor/cell  PROM  Fusible link  No  Very Low  1 Transistor/cell  ROM  Masked  No  Rare  1 Transistor/cell 1.28 Vehicle Programming40 How about a microcontroller that has already been loaded with a tiny program stored in its memory locations?  Yes—it is called a bootstrap loader! Bootstrap loader is a small piece of code required to instruct the instruction execution unit of a typical computing engine to execute the series of tasks that assists the computer to ‘boot’. The word ‘boot’ is used to deﬁ ne the operational phase of a computer when it performs the task of load-ing the operating software. Your personal computer or laptop boots the operating system from the hard disk, or CD-ROM after invoking a short program stored in the non-volatile memory or stored in the hard drive boot-sector.  In the early days of computers, the external ‘bootloader’ was used to load the monitor program, kernel or a device driver in the form of a binary code; read through the paper-tape reader into the computer memory (the paper tape had been used to store the binary code; quite interesting isn’t it?) There had been other ways as well like magnetic tape, magnetic drum or magnetic memory. The technology of mag-netic tape, drum memory, magnetic memory, and magnetic ampliﬁ ers had been core building blocks of many ‘miracles’ of systems in the early days of computing. 1.28.1     Embedded Systems Booting  In today’s world of embedded systems; different type of booting methods are employed. An I 2 C bus boot, SPI bus boot, Ethernet bus boot, CAN bus boot, USB bus boot, UART bus boot, so on and so forth. The automotive industry, however has preference over CAN-bus-boot as the accepted candidate to perform variety of tasks related to modules re-programming. The CAN bus boot thus far has proved out-standing success over the past so many years.  It is important to understand that the boot-code and module application-code are two separate and distinctively isolated programs stored at two separate address- space in the microcontroller’s memory. The boot-code remains completely inert, untouchable and write-protected while module performs its routine operational tasks. The boot-code never gets executed until the ‘reset vector’ is modiﬁ ed. The modiﬁ cation to the reset vector requires control instructions to be issued to the mod-ule by an external device via a proper handshake (a computer or a hand-held device).  Furthermore it is to clarify that “booting” has a slightly different meaning in computer industry compared to embedded systems of automotive industry.  In the computer industry, booting is executed to attain a high-level of operational intelligence from a low-level of machine-level intelligence like for example loading the operational software, operating software, kernel, monitor or some form of a driver into the memory storage area. However in the realm of automotive computing it means loading utility software, which helps to download the new code through serial means and eventually programs new or updated operational software in the module memory.  In short, we can re-deﬁ ne a two stage booting ﬂ ow for a vehicle module:•    Boot to establish contact with the external device deﬁ ned as primary bootloader  •   Boot to write program code in the ﬂ ash memory deﬁ ned as secondary bootloader     1 Vehicle Electronics Architecture411.28.2     Primary and Secondary Boot Methods  Primary bootloader (PBL) and the secondary bootloader (SBL) are two important executable codes required to work through the process of vehicle module program-ming. The  primary bootloader  hereby referred as CAN bootloader establishes the communication to the external tool. In short it is a network device-driver meant for a particular processor’s communication node. Accordingly, when the primary boot-loader is executed; it uses the module communication channel to download a sec-ondary program called the secondary-bootloader. The secondary-bootloader is an another short-program comprises of tasks related to memory read, write, erase, and verify operations in order to self-program the module ﬂ ash memory application code. Both bootloader are depended upon the type of microcontroller, its instruction- set, and memory address space.  The primary bootloader is always stored in the microcontroller’s “protected boot-sector’ memory in order to safeguard it from an accidental eraser. Nevertheless, whenever it is desired to execute the tiny program, it would ﬁ rst access the network channel to communicate with the external intelligent device, completes the handshake, reads the secondary bootloader, and stores it in a temporary location of module random access memory. Once the secondary bootloader gets completely loaded into the random access memory, it is activated to assist performing ﬂ ash memory read, write, and erase operations—consequently downloading the entire software code into the module memory from the external device through the CAN commu-nication channel.  Needless to say when this capability is achieved then the external device or test equipment can download the entire software code into the module memory with ease of operation. Such an incredible feature could have a profound impact at the following locations:•    Module manufacturing assembly line  •   Vehicle manufacturing assembly line  •   Vehicle service centers  •   Module test and upgrade centers  •   Research and development facilities  •   Warranty and repair service centers  •   In-vehicle software upgrading     Irrespective of ﬂ ash programming locations, the external device or computer must have to access the module ﬂ ash memory by means of a network physical layer. The physical layer is the CAN interface between the module and the external device. The module must keep optimum intelligence to send and receive digital data through the physical layer. At the other end, the test station must be able to initiate dialog between the corresponding modules. Once the handshake is established, the test station could then download the object ﬁ le into the module memory. A zoom view of ‘A’ module is shown here, which is connected to end-of-line tester. The test sta-tion connects through the vehicle, diagnostics port connecter as shown in Fig.  1.22 .1.28 Vehicle Programming42   The sequence of operation depicted in Fig.  1.22  listed below:•    External tester send command to stop operational code execution  •   External tester send command to execute PBL program  •   PBL execution loads the SBL into the microcontrollers RAM space  •   PBL and SBL functions together to begin Flash memory blocks access  •   PBL and SBL ﬁ nishes the erase/write operations to all blocks  •   External tester send command to reset the module  •   Module begins operational code execution     1.28.3     Vehicle Modules Programming  The vehicle module programming for an urgently needed software patch, or an extremely important software upgrade or bug ﬁ xes to an existing software has caught serious attention by vehicle OEM’s and suppliers. It had cost time, money and delayed deliveries due to an urgently needed upgrade to the vehicles parked at the outside lot of vehicle assembly plants. The method of programing by physi-cal connection to the OBD II connector requires 100’s of laptops and work force Protected Memory SpaceSecondary bootloaderCodeRAM SpaceFlash Memory SpaceCAN Physical LayerRx                       TxOBD IIConnectorObject FileCAN InterfaceTest Station or EOL MicrocontrollerInterrupt VectorsPrimary bootloader CodeReset VectorApplication CodeOperationalModeProgrammingMode  Fig. 1.22    Module connected to the external device to get the software download        1 Vehicle Electronics Architecture43to re- program vehicles. This mode of manual vehicle programming operation is not so, clearly deﬁ ned, and does not have strong business case for a permanent solution. Alternately, OEM’s are positioning themselves to add Wi-Fi connectiv-ity to the vehicles in order to re-ﬂ ash the module through the internet and get it ﬁ xed for a long haul.  In short, the modules installed in vehicles, programmed by the following methods:•    Direct physical access to the module CAN bus through the OBD II Connector  •   Direct physical access to the module through the USB bus if available  •   Wi-Fi installed gadgets installed on to the OBDII connector  •   Wi-Fi installed vehicles     1.28.4     Generalized Programming Procedure  The generalized programming method of direct physical access deﬁ ned as a typical programming procedure to download data into the module:•    Invoke software user interface to talk to the vehicle communication bus  •   Establish communication with the vehicle bus.  •   Establish communication with the module needed to be programmed  •   Select software download menu  •   Select module identiﬁ cation and enter security code  •   Select appropriate secondary bootloader  •   Select the applicable object code ﬁ le  •   Initiate programming sequence  •   Request to enter in the programming mode  •   Request to access ﬂ ash memory blocks  •   Erase the memory blocks that needed reprogramming  •   Re-ﬂ ash the memory blocks, and continue until ﬁ nish  •   Prepare checksum, or cyclic redundancy check and store results  •   Request to terminate programming mode  •   Initiate module reset to execute the new code by entering in operational mode (Fig.  1.23 )1.29            Software Download Time  Before you get too excited with this ‘cool’ feature, it would be worth stating that the software download in any manufacturing line consumes time eventually reducing the overall throughput to the assembly process. Indeed, if the modules were pro-grammed right before it reached to the assembly plant then it would be a great 1.29 Software Download Time44saving of time. However, based on the business case and the availability of engi-neering tools the module microcontrollers can be ‘ﬂ ashed’ before shipped to the module manufacturing location. Flash programming the microcontrollers before kicking off the module manufacturing line is faster than programming the micro-controllers while in the module manufacturing process. Additional time in seconds or minutes is needed to program a microcontroller. Overall time consumed for a single module, multiplied by the number of modules produced equates to a Establish Vehicle BusCommunication  Invoke Programming ApplicationCommunication EstablihedSelect Software Download MenuSelect Module Enter Security CodeLoadSecondary BootLoaderLoadObject FileSecondary BootLoaderObject FileInitiate Programming Enter Programming ModeAccess Flash Memory BlocksErase Memory BlocksWriteMemory BlocksAre all blocks done?Prepare Checksum Store ChecksumExit  Programming ModeEnter  Operational ModeEndSoftwareControlsManualControlsNoYesYesNo  Fig. 1.23    A typical ﬂ ow chart to ﬂ ash module memory blocks        1 Vehicle Electronics Architecture45signiﬁ cant time factor in an overall productivity of the assembly line. However, this time plenty has one big advantage over the fact that the late software changes can be implemented at the last minute thereby shortens the time-to-market the product, which keeps the embedded software team happy and smiling.  The software development, testing, validation and veriﬁ cation are some of the critical components of modern  AUTONICS  systems (The term derived from  auto- motive electro nics).  Today, the goal of automobile OEM’s is to download the entire application software code in every module using the serial communication link. This gives many advantages including quick software updates, new functions, service updates, and late software releases.  1.30     Vehicle Operating Software  The software development is not the core business of automotive manufacturers; however, strategically important software development of engine and transmission controllers have kept many manufacturers busy developing complex algorithms to edge competitive advantages over the engine and power train performance. Unlike aerospace and defense industries, where software development standards like DOD-STD- 2167A and likewise are part of the culture, automotive software developers are still catching up to sound software engineering principles. The MISRA (Motor Industry Software Reliability Association) is one good step to standardize the pro-gramming aspects of software development processes within the automotive indus-try. Capability Maturity Model (CMM) levels, and SPICE (Software Process Improvement and Capability Determination )  have also been introduced in the auto-motive software development space.  Distributed processing in a vehicle does not come with a distributed vehicle operating system. In fact, no such thing exists today like a universal vehicle oper-ating system. There is no equivalent of Microsoft windows existed to be called as “Automotive Modules Operating Software”. The embedded software develop-ers have traditionally relied on their own version of kernels, task-schedulers, and background/foreground loop techniques. A recent addition of Microsoft embed-ded Operating Software introduced by Ford Motor Company has been focusing mainly around multi-media, which includes but not limited to speech recognition, Bluetooth connectivity, and many more cool features. There are some general pur-pose embedded systems real time operating systems like QNX, ThreadX, VxWorks, Nucleus RTOS, RTLinux, uITRON and Android to support many similar or diversi-ﬁ ed applications.  There have been discussions, platforms, forums and consortiums to develop standard operating software architecture; so that a common operating system could efﬁ ciently function in an automotive environment . One such example is OSEK.  The OSEK is an open architecture for the automotive distributed operating sys-tem; introduced in 1993 in Germany. The OSEK German acronym has the English translation “Open Systems and the Corresponding Interfaces for Automotive Electronics". 1.30 Vehicle Operating Software46 Many automotive embedded software developers claim that their software is OSEK compliant.  A quick Google search on OSEK is pasted below: 1.30.1     OSEK  From Wikipedia, the free encyclopedia   OSEK  ( O  ffene   S  ysteme und deren Schnittstellen für die   E  lektronik in   K  raftfahrzeugen ; English: "Open Systems and their Interfaces for the Electronics in Motor Vehicles") is a standards body that has produced speciﬁ cations for an embedded operating system, a communications stack, and a network management protocol for automotive embedded systems. It has also produced other related speciﬁ cations. OSEK was designed to provide standard software architecture for the various elec-tronic control units (ECUs) throughout a car.  OSEK was founded in 1993 by a German automotive company consortium (BMW, Robert Bosch GmbH, DaimlerChrysler, Opel, Siemens, and Volkswagen Group) and the University of Karlsruhe. In 1994, the French cars manufacturers Renault and PSA Peugeot Citroën, which had a similar project called VDX (Vehicle Distributed eXecutive), joined the consortium. Therefore, the ofﬁ cial name is OSEK/VDX.  OSEK is an open standard, published by a consortium founded by the automo-bile industry.  OSEKtime speciﬁ es a standard for time-triggered real-time operating systems.  Some parts of OSEK are standardized in  ISO 17356 .  AUTOSAR introduced just recently is the next step towards the standards.  1.30.2     AUTOSAR   From Wikipedia, the free encyclopedia    AUTOSAR  (Automotive Open System Architecture) is open and standardized auto-motive software architecture, jointly developed by automobile manufacturers, suppli-ers and tool developers. It is a partnership of automotive OEMs, suppliers and tool vendors whose objective is to create and establish open standards for automotive E/E (Electrics/Electronics) architectures that will provide a basic infrastructure to assist with developing vehicular software, user interfaces and management for all application domains. This includes the standardization of basic systems functions, scalability to different vehicle and platform variants, transferability throughout the network, integra-tion from multiple suppliers, maintainability throughout the entire product lifecycle and software updates and upgrades over the vehicle's lifetime as some of the key goals.  The AUTOSAR consortium re-uses the OSEK speciﬁ cations: the operating sys-tem is a backwards compatible superset of OSEK OS.  1 Vehicle Electronics Architecture471.30.3     Automotive Operating Systems  Every operating system comes with a well-deﬁ ned memory space requirement and in the domain of automotive distributed computing it has to reside in the module memory. Module developers, who have simple and less complex functions to imple-ment, do not see any major beneﬁ t to keep the copy of a real time operating system (RTOS) in the module memory. Rather, they worry about overheads like licensing fee, memory usage, compatibility issues and additional software overheads to pro-tect the operating software code safe, and guarded.  The only exception to this paradigm is Network Operating System (NOS), which is a mandatory requirement to run a successful network-node to share and distribute criti-cal operational and network integrity messages on to the communication link. The most well-known network operating software is based on Vector CAN operating system. Across the board every car OEM uses the similar network operating system with differ-ent names by tweaking needs and wants of the OEM. By far it is the most successful network mechanism ever introduced in automotive industry. The success story rests on Vector Company http://vector.com/ as well, who has a very strict quality and operational procedures in place before accepting any changes or tweaks to their systems.  QNX http://www.qnx.com/ real time operating software is another bright star making its place in the automotive design space; the QNX RTOS has successfully been launched by some major OEM’s incorporating the richness of QNX features in multimedia and human machine interface.  ITRON http://www.ertl.jp/ITRON/home-e.html and micro ITRON (uITRON) is another real time kernel originated in Japan, and has a very strong foundation in embedded design segment. It is a de-facto standard in Japanese market and claimed to be the most popular worldwide. Renesas Semiconductor Company, which has strong presence in auto-motive industry, offers computing architectures supporting uITRON kernel globally.  Irrespective of how the different RTOS have been developed or in the process of being developed, a comprehensive solution similar to one offered by Bill Gates or Steve Jobs to the computing industry does not seem to be on the radar screen. One of the biggest drawbacks that automotive hardware is not common across the board could be used as the primary reason, however there are other issues like multiple computing nodes of a vehicle distributed architecture, and an extremely determinis-tic approach to perform real time tasks in an orderly, and timely fashion . Nevertheless, it seems that Apple Computer Company or Microsoft have not devel-oped or paid serious attention in developing a comprehensive real time operating system based on automotive modules distributed architecture.  In one case, however, Microsoft partnered with Ford Motor Company and devel-oped a solution mainly based on multi-media architecture, like USB audio, radio, navigation, speech recognition, cell-phone pairing with a user display to provide customer visual and touch screen interactions. Microsoft utilized the real-time oper-ating system namely Windows CE to develop the application.  General Motors have introduced “MYLINK”, and Daimler Chrysler introduced “UCONNECT as similar products using real time operating system, but not utiliz-ing the Microsoft CE operating system.   1.30 Vehicle Operating Software481.31     High Level Software Context Diagram  A context level DFD-0 (Data Flow Diagram– 0) is shown in Fig.  1.24 . Ignition switches and the battery monitoring processing are common for every module. The sensors, actuators, lamps, relays and motors are speciﬁ c to a particular module. The software procedures are required to control lamps, relays, heaters, motors, solenoids and actuators. A modular approach has always its advantages over integrated approach. The feedback circuits are mainly for control loop feedback; however, in some cases it could be for the self-test channels to do diagnostics.   In the following section we will review how each process is expressed as data ﬂ ow diagram. 1.31.1     DFD Ignition Processing  In Fig.  1.25 , some of the functional partitioning of overall software architecture of a typical module is shown. As can be seen that ignition key switch inputs (OFF, RUN/ACCESSARY, START) requires a software process to monitor the key posi-tions on timely basis as appropriate for the module operations (P.1.0.0).Drivers CircuitsBatteryFeedbackIgnition SwitchApplicationWatchdog TimerSensorsNetwork PhysicalLayerSoftware InterfaceNetwork Operating Software(NOS) Network PhysicalLayerOutgoing messagesIncomingmessages  Fig. 1.24    Software context DFD-0        1 Vehicle Electronics Architecture491.31.2        DFD Battery Processing  The battery monitoring requires a software process to measure the battery voltage to stay operational as long as the battery voltage stays in between a safe operational window (P.1.0.1) (Fig.  1.26 ).   Battery and ignition key switching processes are required for every module.  1.31.3     DFD Abnormal Shutdown  In the event of sudden power loss an abnormal shutdown process (P.1.0.2) should be invoked to save critical system status information in a non-volatile memory (Fig.  1.27 ).Ignition Switch PositionsRunAccTrueP.1.0.0Ignition  ProcessingStartTrueIgnCycles  Fig. 1.25    DFD-0.1 (Ignition)       Battery VoltageBattVoltMaxP.1.0.1BatteryProcessingBattVoltNomBattVoltMin  Fig. 1.26    DFD-0.2 (Battery)       BattVoltMinSysStatusP.1.0.2Abnormal ShutdownProcessingMicroRegistersFaultCode  Fig. 1.27    DFD-0.3 (Shutdown)          1.31 High Level Software Context Diagram501.31.4        DFD Switch De-Bounce  Input sensors processing varies by each module depending upon the type and num-ber of sensing circuits. Each process veriﬁ es the functionality and validity of the incoming data. A typical example is switch verses temperature sensor. A switch requires de-bouncing process (P.2.0.1) and a temperature sensor requires A/D read-ing process (P.2.0.2) (Fig.  1.28 ).1.31.5        DFD Temperature Sensor  Temperature sensor requirements are pretty common in many different automotive systems and many modules utilizes single or multiple temperature sensor (s). A typical DFD is shown in Fig.  1.29 .1.31.6        DFD Communication Bus Activity  In some cases of module, waking up by communication bus activity (which is another form of input sensing), a separate process (P 2.0.3) is required to do the tasks it needed to do, after the bus wake-up. It includes, but is not limited to, mes-sage recognition, message task execution and bus activity monitoring (Fig.  1.30 ).Door SwitchDoorOpenP.2.0.1Switch De-bounceProcessingDoorClosed  Fig. 1.28    DFD-0.4 (Switch De-bounce)       Temperature SensorSensorFaultP.2.0.2A/D Channel ProcessingSensorValue  Fig. 1.29    DFD-0.5 (Sensor)         1 Vehicle Electronics Architecture511.31.7        DFD: Watch Dog Timer  How good the embedded software would be if it does not know about its own health? You would say no good!—To monitor the software health, the watch-dog- timer has been used in almost every critical real-time application, and of course, automotive software design is no exception. Unlike windows based computers; automotive design engineers do not have the ‘luxury’ to ask their customer to press  Ctrl ,  Alt  and  Delete  to ‘reboot’ the ‘vehicle engine’—rather than they rely on the watch dog  timers. The only way to get out of any software ‘runaway’ is to keep ‘bugging’ the microcontroller. The watch-dog-timer keeps on sending an interrupt signal to the micro-controller (just like asking: how is going?) and the microcontroller keeps on responding by resetting a ﬂ ag bit in the watchdog timer circuit (just like saying: it’s going all right).  If the ﬂ ag bit does not get reset within a pre-deﬁ ned time interval then it is a ‘software runaway’ condition and the watchdog timer issues a hard reset to the microcontroller (P.3.0.0) (Fig.  1.31 ).   Another way of monitoring the software is to monitor by inserting a software procedure within a main process. The procedure ﬁ rst set a bit in a register to enable a software interrupt. If the monitored processes fail to reset the bit in a well-deﬁ ned time interval then it is a ‘software runaway condition’ and a  soft-restart  should begin at this point (Fig.  1.32 ).Bus ActivityMsgRecogP.2.0.3Bus Off/On ProcessingBusAwakeMsgDirective  Fig. 1.30    DFD-0.6 (Bus)       Hard ResetWatch Dog TimerWatchEnableP.3.0.0Watch DogProcessingHow is going? SetFlagTrueGoing all right?SetFlagFalse  Fig. 1.31    DFD-0.7 (Watch Dog Timer)         1.31 High Level Software Context Diagram521.31.8        DFD Internal Self-Test  Additional internal self-tests like integrity of RAM/EEPROM, code check-sum, memory block protection are some of the processes always included in almost every embedded design; let alone automotive software design (P.4.0.0) (Fig.  1.33 ).1.31.9        DFD Output Driver  Figure  1.34 .1.32         Background/Foreground Loop  As mentioned earlier, the majority of embedded software runs under background/foreground loop architecture. An example (Fig.  1.35 ) of one high-level diagram is shown. A background loop runs some tasks, but when polled-input signals invoke a task, it executes the high priority task inside the foreground loop. The foreground loop has preemptive priority scheme meaning that the highest priority task runs ﬁ rst. An example of highest priority interrupt in the I/O domain is a sudden battery volt-age drop.Finish your job in 10msI/O ProcessMain ProcessI am done. Please, do not restart.  Fig. 1.32    ‘Software Watch’       CodeCheckSumP.4.0.0Internal Self-testProcessingRamStatusTestFlagBit EEStatus  Fig. 1.33    DFD-0.8 (self-test)         1 Vehicle Electronics ArchitectureDriverTurnOnSensorValueP.4.0.0DriverProcessingDriverTurnOffSensorFaultDriverFault  Fig. 1.34    DFD-0.9 (output drive)       Background LoopInitializationInternal Self TestsEnable Software InterruptsResetPolled Input SignalsInput Signal Active?Process Input SignalDetermine Task PrioritySchedule TaskExecute TaskAll Tasks Executed?Foreground LoopYesNoNoYes  Fig. 1.35    Background/foreground loop architecture         541.33        Modules Physical Placements  In the previous section, the electrical layout of the module interconnects were depicted in Fig.  1.9 , which is the representation of how the modules are electrically interconnected in a typical vehicle. In this section we will try to give you a brief summary about where the modules are physically installed at different mounting locations and how the modules are connected through the harness and connectors.  A vehicle module is normally attached to the vehicle body or chassis or to the vehicle cockpit by a mounting scheme. The mounting scheme may or may not use a bracket depending upon many factors i.e. space, weight, function and mounting location. An air suspension module, for example, can be attached to the vehicle body by using a bracket; however, an airbag must not be attached to the vehicle body rather it has to be attached to the vehicle chassis directly. Instrument panel on the other hand must be ﬁ tted inside the cockpit, visible to the driver at all times and the engine controller must have to be ﬁ tted inside the engine compartment to gain all the electrical advantages.  We now review some of the modules locations in a typical vehicle. 1.33.1     An Airbag Module  An air bag module, for example, must be rigidly attached to the vehicle chassis and does not require any bracket attachment. The module electronic circuits are mounted inside a safe-casing comprises of a cover and the housing. The cover and the housing must be made up of metal or rigid material to get the accurate vehicle movements.  Plastic material could also be used on a simple rule: if the module is installed inside the passenger cabin or inside the trunk. It is safe from the external environment (dust, dirt, water, chemicals, and large variations of temperature), then it can be encapsulated in a plastic cover. However, this is just one key factor, and there are many other factors that need to be considered before deciding about the type of casing.  An example of airbag module is shown in the Fig.  1.36 . The airbag module is rigidly attached to the chassis because the accelerometers that are mounted inside the module demand accurate readings of vehicle movements. The module installa-tion location and x, y, z directions are highly critical for the crash impact detection, and measurement. The module connector mating harness is  not  shown for the sake of clarity.1.33.2        An Instrument Cluster  The instrument cluster is installed in the instrument panel (IP) with the aid of mounting screws or by other mechanical means or by a well-deﬁ ned mounting scheme. The instrument cluster is located in front of the driver. However, in 1 Vehicle Electronics Architecture55recent years, some manufacturers have tried to shift the instrument cluster towards the center of the cockpit. Nevertheless majority of vehicles still have instruments clusters installed in front of the driver. Irrespective of where you place the instrument cluster, the basic philosophy is to show the clear display of critical vehicle parameters. The Fig.  1.37  shows the Instrument Cluster com-prises of engine temperature indicator, engine revolutions indicator, Fuel tank indicator and Odometer clearly placed right in front of the driver. If the vehicle is driven by right-hand rules in the target market then all the instruments must follow right-hand rules of the cockpit.1.33.3        Multimedia, Location  The radio, cassette, compact disc, USB or any other audio related functions are grouped as multimedia components. The multimedia components are generally mounted in the center of instrument panel near the center pedestal. The basic Direction of ImpactMating ConnectorDirection of ImpactAirbag ModuleDirection of Impact                                Vehicle ChassisTop View  Fig. 1.36    Airbag module installation location       MULTIMEDIARPM       SPEEDTEMP.  FUELHVAC CONTROLSMessage Center  Fig. 1.37    Cockpit or instrument panel ( front view )         1.33 Modules Physical Placements56philosophy of the installation location is to have easy access by the customer for the display and the controls (Buzz word → HMI→ meaning human Machine Interface). In    Fig.  1.37 , the multimedia components are placed to the center of the cockpit  1.33.4     Climate Controls  The heating ventilation and air-conditioning (HVAC) controls are mounted to the center of the cockpit or closer to the center pedestal. Again, the basic philosophy of the installation location is to have easy access by the customer for the display and the controls (Fig.  1.37 )  1.33.5     Engine Controller  The  engine controller  is typically installed in the engine compartment—a location very well-justiﬁ ed for many reasons, and has proved that the location closer to the engine makes it closer to sensors & actuators which are critical for many engineer-ing underlying principles. For example, a shorter distance to the controlling and sensing mechanism shortens the overall wiring lengths, increases the efﬁ ciency for the high current switching with better controls and electro-magnetic compliance performance. The location of engine controller shown in the Fig.  1.38  is one exam-ple. However, the location varies as per needs and wants of the design and develop-ment team. No matter where the ﬁ nal location could be selected by the OEM for a vehicle platform, the engine controller resides inside the engine compartment (under the hood). The functions and features governing the ﬁ nal decision to select the loca-tion are governed by the technology, engine type, and physical-size, wiring and real state in the compartment.1.33.6        Anti-Lock Brake (ABS) Module  The anti-lock brake electronics module is frequently married to the hydraulic- assembly that is attached to the pump-motor. The pump-motor generates the necessary brake ﬂ uid pressure transfers through the hydraulic lines to the hydraulic valves, which acts as a gateway to the ﬂ uid dynamic forces to operate on individual wheel-braking mechanism. The preferred installed location ought to be closer to the brake-booster and master-cylinder (Fig.  1.38 ).  1 Vehicle Electronics Architecture571.33.7     Power Steering Module Location  The electrical steering assisted electronics-module is typically placed next to the steering control assembly, thus making it easy to connect to the high-current motor to a shorten the electrical distance, which is a great beneﬁ t for the high current power devices. As mentioned earlier, the steering system still keeps the mechanical linkage to the wheels; however, the electrical motor is used to assist steering efforts. In Fig.  1.38  the steering control module is shown mounted on top of the steering assist motor—clearly showing the steering wheel mechanically connected to the steering system as well. Failure to the motor or the electronics may cause extra efforts needed to steer the vehicle, but total system failure would not occur.   1.34     Vehicle Harnesses  The conduit of electrical signals among the modules is the wiring. The wiring route around the vehicle consequently shapes, and forms the harnesses. The harness with the aid of mating connectors connects to the electronic control modules with the rest of the vehicle electronic components. The components include, but not lim-ited to, sensors, actuators, solenoids, lamps, battery, fuses and switches. The mat-ing connectors are required for an easy installation and removal of the modules, components, and other essentially attached devices. Furthermore, it is helpful to do  maintenance, repair, troubleshooting and replacement of the faulty components. The harnesses and wirings are tailored-made to size, dimensions, and routing- shapes be Engine ControllerABS Module    MSteering Control ModuleSteering Assist MotorSteering Wheel EEC  Fig. 1.38    Engine compartment ( top view )        1.34 Vehicle Harnesses58governed by the geometry of the intended area. The overall routing, shapes, and mating connectors of the harnesses are depended upon the vehicle dimensions, installed modules, possible-routing-schemes and the number of electronic systems installed. Harnesses are developed, tested, and veriﬁ ed in advance—long before the ﬁ nal assembly process of the vehicle begins. In the early stage of vehicle prototype builds, the harnesses are attached, routed, and mated to the vehicle chassis, and body to verify the correct functional operations and testing.  The connectors to each component are carefully designed and chosen to avoid wrong mating connections. A possibility of human error could happen, while the mating connections are being laid out in the vehicle manufacturing operations. There is a preferred method of using connector keying scheme throughout the industry in order to avoid wrong mating connections. The connector keying scheme allows only the correct mating connections be made possible and prevent incorrect mating. An incorrect mating connection may cause damage to the system or  malfunction to the vehicle electronic devices. A term “poke-yoke” is often used to describe the actions needed to be performed to avoid error conditions.  1.35     Overview Layout of Harnesses, Devices and Modules  A general vehicle overview of the harnesses, modules, and electronic devices of some of the installed systems are shown in Fig.  1.35 . The electronic components mounted at the door require either one or more mating points preferably a connector to be connected with the rest of the vehicle harness. Similarly, wiring harnesses within the cockpit are routed together and mated with the rest of the vehicle wiring. The cockpit in itself is made and wired as a separate assembly. The cockpit wiring includes, but not limited to, many electrical devices. For example, glove compart-ment lamps and switches, steering control switches, turn signals, steering wheel position sensor, radio, airbag ﬁ ring squibs, radio and multimedia controls, instru-ment cluster, and so on so forth.  The vehicle wiring and routing shown in the diagram looks so straight is not ‘that straight’ and must be laid out after a careful planning. The harness length measure-ments, routings, attachments to secure the harnesses, design, and testing of each electrical contact have now turned into an automotive discipline needed great deal of attention before the vehicle electrical systems are ﬁ nally put in place. The overall cost and weight of the harness and connectors plays a signiﬁ cant role on the reli-ability and robustness of a typical vehicle electronics architecture. The purpose of showing some of the installed locations is to give the reader a general idea how the different devices could be placed in that particular region.  It is no way a representation of the entire electrical systems; however it tries to open up a general awareness of components, devices and their installed locations in that particular area in a typical vehicle.  It is interesting to note here that module installation locations, wiring, connec-tors, functions and pin assignments varies from manufacturer to manufacturer and, 1 Vehicle Electronics Architecture59even sometimes, varies within the similar vehicle type due to the features and functions offered to the market.  Vehicle wiring, harnesses, connectors, and mating pins must be robust enough to withstand harsh vehicle environments., vibration, heat, dust, snow, salt, or chemi-cals, water-ingress, oil, grease, temperature variations, thermal expansion, contrac-tion, pull-off force, stress, so on and so forth  Wirings and harness development are not the core business of car manufacturers. They are usually handled by the outside companies. The system level testing and veriﬁ cation is done by the respective car OEM’s (Fig.  1.39 ).1.36        Case Study Nissan Quest., Mini Van Modules  In this section we will review the electronics architecture of Nissan-Quest minivan to learn more about the nomenclature, functions and systems. However, in this section we will restrict ourselves to non-audio applications—intentionally avoid-ing multi-media components. Information presented here is purposely modiﬁ ed to familiarize the reader with the industry. However the topology and theme was originated from the Nissan service manual and meant strictly for educational pur-poses. Each module’s functionality has been redrawn with a simple block diagram to get the reader’s attention; however the Nissan’s actual nomenclature has been retained. In case of errors, omissions or conﬂ icts, the Nissan manual supersedes all information presented here. Refer to Nissan Quest 2004 maintenance & repair procedures manual # SM4E-1V42UO published by Nissan North America Inc., Technical Publication Department Gardena, California, USA; for any clariﬁ cation or further explanation. 1.36.1     Intelligent Power Distribution Module (IPDM)  This module is ‘jammed-packed’ with relays, fuses, and electronic-switches (relay drivers) controlled by a microcontroller. The relays are the part of several vehicle systems and are designed to be controlled by the applicable modules, but integrated into the IPDM fuse/relay box. The IPDM along with its microcontroller and embed-ded software can actuate any relay provided the appropriate command is issued by the ‘needy’ module. The ‘needy’ module can issue the appropriate command by sending a CAN message on to the vehicle multiplex bus. The CAN message thus acts like a request to turn-on or turn-off the corresponding relay.  The fuses are also integrated into the IPDM feeding several vehicle systems. Quite interestingly, the only input interface to IPDM is the CAN bus, however,  outputs are many, and gets interfaced to 16 relays—driven by low-side drivers. A simple block diagram of the IPDM is depicted in Fig.  1.40 .1.36 Case Study Nissan Quest., Mini Van Modules60HeadlampsHeadlampAnti-skidControllerEngineControllerFire WallMultimediaInstrumentClusterHVAC MotorsSwitchesActuatorsCockpit or Instrument PanelMotorsSwitchesActuatorsAirbagModuleDoor. Door.Wiring & HarnessesMotorsSwitchesActuatorsMotorsSwitchesActuatorsDoorDoorMotorsSwitchesActuatorsHeatersTail lampsBatteryFuse box  Fig. 1.39    Vehicle overview showing logical placements       Batt +FusesCAN BUSVehicle CAN Bus BackboneRelay CoilsRelay  ContactsSeveral SystemsCAN Physical LayerPROCESSINGRELAY DRIVERS 1Contacts   Fig. 1.40    Intelligent power distribution module block diagram         1 Vehicle Electronics Architecture61   The nomenclature of each relay is tabulated in Table  1.3 . The relays are mainly controlled by engine control computer, and by the body control module. The inter-nal IPDM diagnostics functionality is performed by IPDM itself.1.36.2        ABS/TCS/VDC Control Unit  The main function of Anti-lock Brake System (ABS) is to countermeasure wheel- lockup conditions while brakes are applied, so it is accomplished by releasing brake pressure from the respective brake-pad thereby selecting the appropriate solenoid valve. The rotational wheel-speed is monitored by the wheel-sensors installed at each wheel. The motor works as a pump to generate hydraulic pressure available to the system.  The traction control systems (TCS) function kicks in when potential wheel- spinning is detected by the module software fed back by the appropriate wheel- sensor. The corrections are applied to mitigate wheel spinning by modifying the brake pres-sure, throttle & fuel control and by sending appropriate messages to the respective modules. The vehicle dynamics control (VDC) monitors the steering wheel  position, and vehicle yaw-rate accelerometer to determine its roll attitude. The embedded functions are designed to counter measure vehicle instability conditions by control-ling the brake system hydraulic valves via vehicle dynamics control solenoids. The VDC functions could only manage vehicle stability in a well-deﬁ ned operational envelope bearing in mind that vehicle dynamics control cannot defy the laws of physics. A simple block diagram is depicted in Fig.  1.41    The sensors, switches, motor, relay and solenoids are listed in Table  1.4 1.36.3        Supplemental Restraint System (SRS)  The SRS is meant for airbag deployment. All of its sensors and accelerometers are used to monitor vehicle dynamics, and occupant’s safety. In the event of a crash, the airbag ﬁ ring-circuit triggers the squib that eventually deploys the airbag. While    Table 1.3    List of relays controlled by different vehicle systems    CAN messages  Relay coils  Originating from different vehicle systems  01: AC relay  02: Starter relay  03: ECM relay  04: Cooling fan relay #1  05: Fuel pump relay  06: Throttle control relay  07: Cooling fan relay #2  08: Cooling fan relay #3  09: Tail lamp  10: Front wiper Lo RELAY  11: Front wiper Hi relay  12: Headlamp Lo relay  13: headlamp Hi relay  14: Cornering lamp LH relay  15: front Fog relay  16: Cornering lamp RH relay 1.36 Case Study Nissan Quest., Mini Van Modules62the airbag is being deployed, the module turns on the airbag fault indicator lamp located inside the combination meter. In Fig.  1.42 , sensors, and output devices are shown connected to the processing engine, however, please note absence of com-munication bus that makes it less depended on any other vehicle resources thereby decreasing the risk of SRS failure.   The seat sensors monitor the occupant’s seat-belt buckle-position, seat-belt ten-sion, occupant’s weight, and position. The crash sensor monitors the crash event, and when activated enables one of the logic needed to take ﬁ nal deployment deci-sion. The accelerometers are used to determine the vehicle acceleration. When all the pre-requisites to the ﬁ ring-logic are satisﬁ ed the occupant’s seat-belt webbing gets automatically tightened by means of a pre-tensioner mechanism to overcome CAN BUSVehicle CAN Bus BackboneSwitches (brake,VDC,Fluid)Steering Angle SensorPROCESSINGSLIP Indicator CAN Physical LayerVDC Solenoid ValvesWheel Solenoid ValvesMotor & RelaysDriversDriversDriversSteering Position SensorYaw Rate SensorWheel SensorsLevel ShiftLevel ShiftLevel ShiftLevel Shift  Fig. 1.41    ABS/TCS/VDC block diagram          Table 1.4    List of vehicle interface to ABS/TCS/VDC module    Sensors  Switches  Motor  Relay  Solenoids  Yaw rate  Stop switch  ABS motor  ABS relay  FL IN  Steering angle  Brake level  FL OUT  Wheel # 1  ASCD  FR IN  Wheel # 2  VDC on/off  FR OUT  Wheel # 3  RL IN  Wheel # 3  RL OUT  RR IN  RR OUT  HSV1  HSV2  USV1  USV2  1 Vehicle Electronics Architecture63the seat-belt slack in order to tighten the positions of passenger or the driver. After ﬁ nishing these tasks the airbag ﬁ ring mechanism triggers the sealed inﬂ ator to ﬁ ll nitrogen gas inside the airbag (Table  1.5 ).1.36.4        Body Control Module (BCM)  Door locks, switches and window-glass motors are the primary features for this module (Figs.  1.43  and  1.44 ). However, BCM gets augmented by power drive units to serve its functionality. The power drive units are power window con-trol units, sliding door control units, and back door control. Furthermore it c ontrols the lamps inside the cabin.1.36.5         Sliding Door Control Unit (SDCU)  The mini-van sliding door are controlled by the processing inside the BCM. Both sliding door control units gets the control signals to move the sliding door as shown in Fig.  1.44 .  1.36.6     Engine Control Module (ECM)  Engine functionality on one hand requires input sensors to sense engine parameters like critical temperatures, crankshaft position, and vital pressures during engine crank, start and run phases. On the other hand, it sprays fuel by the aid of fuel injec-tors, burns fuel on thereby transferring high energy to the spark plugs, and uses several solenoid valves to monitor and control engine timing (Fig.  1.45 ) (Table  1.6 ).Airbag with sealed inflatorPre-tensioner Crash SensorPROCESSING DriverAirbag Lamp Airbag Firing Circuits DriverAccelerometersSeat senosrs  Level ShiftLevel ShiftLevel Shift  Fig. 1.42    SRS Block diagram         Table 1.5    List of vehicle interface to airbag module   Sensors  Drivers  Lamp  Accelerometer  Pre-tensioner  Airbag  Crash  Squib  Seat buckle  1.36 Case Study Nissan Quest., Mini Van Modules6455CAN BUSVehicle CAN Bus BackbonePower Window Control Unit (LH)Power Window Control Unit (RH)Door Lock MotorsFront Door Lock Assembly Back Door Control UnitControl SignalCAN Physical LayerH-BridgesControl SignalUser SwitchesCombination SwitchesAutolamp SensorProcessingLevel ShiftLevel Shift  Fig. 1.43    Partial BCM block diagram       55CAN BUSVehicle CAN Bus BackboneCombination SwitchesCAN Physical LayerSliding Door Control Unit (LH)User SwitchesControl SignalSliding Door Control Unit (RH)Sliding Door SwitchesProcessingH-BridgesSliding Door Lock ActuatorLevel ShiftLevel Shift  Fig. 1.44    Partial BCM block diagram       CAN BUSVehicle CAN Bus BackboneCAN Physical LayerEngine Sensors RelaysControl SwitchesPROCESSING DRIVERS Solenoid ValvesCruise Control SwitchesCritical SensorsFuel InjectorsThrottle Control MotorLevel ShiftLevel ShiftLevel Shift  Fig. 1.45    Electronic engine controller          1 Vehicle Electronics Architecture651.36.7         Automatic Drive Positioner Control Unit (ADP)  This module is designed for the embedded functions required to assist the driver for remote operations of side-view mirrors, accelerator and brake pedal positions. It is also connected to a separate module called driver seat control unit to assist motor-ized seat-position adjustments. In realistic terms, functionality of both modules is to adjust driver’s driving position. The DSCU and ADP talks to each other via UART (Universal Asynchronous Receiver Transmitter) channel dedicated to share infor-mation. Seat Memory switches are used to recall previously stored settings, up to two settings could be stored & recalled. Door mirror switches are use to adjust both side-view. The pedal adjustment switches are interfaced through the Driver Seat Control Unit (Fig.  1.46 ) (Table  1.7 ).1.36.8         Driver Seat Control Unit (DSCU)  Driver Seat Control Module is designed to adjust driver seat positions by controlling the “slide”, “recline” and “lift” motors. In addition to that DSCU is connected to the pedal adjustment switches to read the switches status, translates in the digital for-mat, and sent in digital format on a UART channel to feed Automatic Drive Positioner (Fig.  1.47 ) (Table  1.8 ).   Table 1.6    List of vehicle interfaces to ECM    Engine sensors  Switches  Motors  Relays  Solenoids  Cam shaft position 1  On/off  EGR control valve  Cooling fan 1  Fuel injector 1  Cam shaft position 2  Cancel  Fuel pump  Cooling fan 2  Fuel injector 2  Crank shaft position  Set/coast  Throttle control  Cooling fan 3  Fuel injector 3  Intake air temp.  Resume/accel.  ECM relay  Fuel injector 4  Mass air ﬂ ow  Park/neutral  Ignition relay  Fuel injector 5  Knock sensor  Fuel pump  Fuel injector 6  EGR temperate  Ignition coil 1  Air/fuel ratio 1  Ignition coil 2  Air/fuel ratio 2  Ignition coil 3  Heated oxygen 1  Ignition coil 4  Heated oxygen 2  Ignition coil 5  Engine coolant  Ignition coil 6  Power steering press.  VIAS valve  EVAP control press.  EVAP valve  Refrigerant press.  Intake valve 1  Accelerator pedal 1  Intake valve 2  Accelerator pedal 2  Throttle position 1  Throttle position 2 1.36 Case Study Nissan Quest., Mini Van Modules661.36.9         Front Air Control Unit (FACU)  The HVAC functions are achieved by sensing the exterior temperature, interior tem-perature, user requests and then using the embedded controller to adjust the required temperature settings. The hot/cold air is mixed by an air-mixture valve controlled by the actuator motor. The actuator door-motors are used to direct air to the respective outlets selected by the user. The blower motor is used to re-circulates the air. Door Mirror SwitchesDoor Mirrors (RH)UARTDriver Seat Control UnitSeat Memory SwitchesPadel MotorPROCESSING DRIVERSDoor Mirrors (LH)Level ShiftLevel Shift  Fig. 1.46    Automatic drive positioner block diagram         Table 1.7    Automatic drive positioner control unit vehicle interface   Switches  Motors  Memory recall 1  Pedal adjust  Memory recall 2  Up/down motor [LH]  Set memory  Left/right motor [LH]  Mirror left  Up/down motor [RH]  Mirror right  Left/right motor [RH]  Mirror up  Mirror down F1F1F2F2F3F4F3F4CAN BUSVehicle CAN Bus BackboneCAN Physical LayerAutomatic Drive Positioner  Control.. Padel Adjustment SwitchesMotor Position FeedbacksSliding MotorReclying MotorLifting Motor (RH) DRIVERSPROCESSINGPower Seat Control SwitchesLifting Motor (LH)UARTLevel ShiftLevel Shift  Fig. 1.47    Driver seat control module block diagram         1 Vehicle Electronics Architecture67The air-conditioning compressor motor is required to compress the Freon refrigerant in order to obtain cooler air. The compressor motor is mechanically driven by the engine, however the engage & disengage clutch (a solenoid coil) is controlled by an A/C relay (Fig.  1.48 ) (Table  1.9 ).  Table 1.8    DSCU switches and motors   Switches  Motors  Pedal adjust forward  Slide  Pedal adjust backward  Recline  Seat slide forward  Lift front  Seat slide backward  Lift rear  Seat recline forward  Seat recline backward  Seat lift front up  Seat lift front down  Seat lift rear up  Seat lift rear down  Park CAN BUSVehicle CAN Bus BackbonePosition SensorsRelaysCAN Physical LayerActuator Door MotorsUser ControlsPROCESSING DRIVERSBlower MotorTemperature SensorsLevel ShiftLevel ShiftLevel Shift  Fig. 1.48    Front air control unit block diagram          Table 1.9    Front air control unit interface    Sensors  Switches  Motors  Relays  Ambient temperature  7-Position rotary (front)  Blower motor (front)  Blower relay (F)  Intake temperature  5-Position rotary (rear)  Blower motor (rear)  Blower relay (R)  Defroster motor  A/C relay  Intake (driver)  Intake (passenger)  Mode door motor  Air mix motor  Heater motor  1.36 Case Study Nissan Quest., Mini Van Modules681.36.10         Transmission Control Unit (TCU)  Automatic gear transfers are performed by an electro-mechanical hydraulic unit controlled by electronics and embedded software. The electronics and the embedded controller are housed in a separate package, and installed near the hydraulic assembly unit. Few sensors are hardwired directly to the embedded controller, but some are shared by the aid of engine control module, and com-bination meter via the CAN message scheme. The block diagram is shown in Fig.  1.49 .   The sensors, switches, solenoids and other modules required for the automatic gear transfer function are listed in Table  1.10 . The engine revolutions sensor, throt-tle position sensor, vehicle speed sensor, stop-lamp switch, and overdrive switch are connected to engine control module and combination meter, however, sensor information is shared by the transmission control unit by utilizing CAN bus mes-sages. The accelerator pedal position, transmission ﬂ uid temperature, engine revo-lutions and throttle position are critical sensor requirements for the automatic transaxle operation.CAN BUS        Vehicle CAN Bus BackboneSwitchesControl SolenoidsSystem SensorsPROCESSING DRIVERSPosition SensorsCAN Physical LayerECMCombination MeterLevel ShiftLevel ShiftLevel Shift  Fig. 1.49    Transmission control unit block diagram          Table 1.10    Transmission control unit interface    Sensors  Switches  Solenoids  Sensors/signals—(source)  Acc. Pedal Pos  Park/neutral  Line pressure  RPM—(ECM)  Fluid temp  Overdrive  Torque clutch  Throttle position—(ECM)  RPM  Overrun clutch  Stop lamp switch—(CU)  Throttle  Shift valve A  Overdrive switch—(CU)  Shift valve B  Vehicle speed—(ECM)  1 Vehicle Electronics Architecture691.36.11        Combination Unit (CU)  The combination unit interacts with the driver. It houses all the conventional gauges like speedometer, tachometer, engine temperature, fuel quantity and different sys-tems status indicator-lamps sometimes called telltales. The calibrated gauges are frequently driven by the stepper motors, but they may be driven differently.  An interesting feature of the combination meter is its unique ‘self-contained’ functionality of displaying information to the driver without requiring any external device be controlled outside the module; the dial pointers and indicators are self contained inside the unit. There are many vehicle input signals needed by the com-bination unit to perform its functionality. Several input signals are hardwired directly, but some are available on the CAN bus by the courtesy of IPDM, ABS, ECM and BCM. Also notice that steering angle sensor sends steering angle infor-mation onto the CAN bus (Fig.  1.50 ). In Table  1.11  sensors & signals, the origin of signal is listed as source like BCM, ECM & CU.CAN BUS        Vehicle CAN Bus BackboneGeneratorPROCESSINGSwitchesLED DriversFuel Level SensorDriverLED IndicatorsSRS ModuleStepper Motor DriversBuzzerCAN Physical LayerSteering Angle SensorIPDMABS ModuleOil Pressure SwitchBody Control ModuleDoor SwitchesEngine Control ModuleLevel ShiftLevel ShiftLevel ShiftLevel Shift  Fig. 1.50    Combination unit block diagram          Table 1.11    Combination unit vehicle interfaces    Lamps  Switches  Sensors/signals—(source)  Lamps  Fuel  Stop lamp switch  Oil pressure switch—(IPDM)  Security  Oil  Brake ﬂ uid level switch  Wheel sensors—(ABS)  Tire pressure  Cruise  Parking brake switch  Sliding door switch RH—(BCM)  O/D off  Set  Seat belt buckle switch  Sliding door switch LH—(BCM)  Pax airbag off  Washer  Washer ﬂ uid level switch  Front door switch LH—(BCM)  ABS  Charge  A/T device switch  Front door switch RH– (BCM)  VDC off  Brake  Generator  Fuel level sensor—(CU)  SLIP  Service  Airbag fault signal—(SRS)  Belt  Airbag  Diagnostics messages—(ECM)  Door  Right turn  TCS off  Left turn  High beam  1.36 Case Study Nissan Quest., Mini Van Modules701.36.12         Input and Output Devices Audit                          ECU  Switches  Sensors  Relays  Solenoids  Motors  Lamps  CAN  Micro  ECM  5  19  6  16  3  3  1  1  TCU  2  4  0  5  0  2  1  1  FACU  12  2  3  0  8  4  1  1  CU  2  0  0  0  0  22  1  1  DSCU  11  0  0  0  4  4  1  1  BCM  39  1  0  0  5  1  1  1  SRS  0  3  0  0  0  2  0  1  ABS  4  6  1  12  1  2  1  1  IPDM  0  0  16  0  0  2  1  1  SDCU  1  0  0  0  2  1  0  3  ADP  7  0  0  0  5  1  1  1  Total  83  35  26  33  28  44  9  13 Side barCost is a primary consideration factor in every discipline of automotive engi-neering and automotive electronics is no exception. Total Quality Cost Management (TQCM) is a quality discipline used to kick-in, whenever a cross-functional team meets and brainstorm opportunities, risks and risks- mitigation in order to reduce parts count to save cost. The real driving force for this effort is to reduce cost & parts complexity. As an example, if a unit production volume is 2 million per annum then a cost cut of 3 cents per unit is a saving of $60K.      Side bar  A very important concept of veriﬁ cation and validation used in the indus-try is simply explained below:  Veriﬁ cation: “Are we building the product right  Validation: “Are we building the right product”     1 Vehicle Electronics Architecture711.37     Exercise     Q1: Which module is the most logical candidate to embed cruise control functions?    Engine related control functions are embedded in engine control computer. Since cruise control features require using engine RPM, throttle position, vehicle speed and gas-pedal position to acquire the cruise control functionality, it is pretty logi-cal to integrate cruise control functions in the engine control computer.    Q2: Draw a simple block diagram of cruise control functions showing all sensors and control devices?    Q3: What is required to enhance the cruise control functional block as depicted in Fig.  1.51  to make it an adaptive cruise control?     In order to add adaptive cruise control functions, it is essential to monitor the speed of the vehicle moving ahead of the subject vehicle in the same lane. The speed sensing mechanism required to do the embedded function uses two methods:    1.    Radar Detection      2.    Image Capture  In order to enhance the simple cruise control system, added detection and control functions are needed to achieve the level of adaptive cruise control.        Q4: Modify the high level vehicle electronics architecture below by adding a power supply module feeding all modules from the vehicle battery. Show all the dele-tions and additions as necessary. PROCESSINGThrottle DrivePedal PositionThrottle PositionEngine RPMVehicle SpeedControl SwitchesBrake Switch  Fig. 1.51    Cruise control functional block        1.37 Exercise72   Q5: What are the advantages & disadvantages of a central load dump topology?    Q6: Why the ignition switch is connected to every module in a distributed vehicle architecture?    Q7: Write down the path to transfer a program ﬁ le into the module memory from an end-of-line tester being utilized in a vehicle assembly plant?    Q8: How would a defective electronics module is detected in the vehicle assembly plant—if it gets faulty while the vehicle is rolling off the assembly process?  IGNITION SWITCHFUSEFUSEFUSEFUSEFUSEFUSEFUSEKEY:Network Operating SoftwareModule Application SoftwareModule  BATTERY ( B+ )COMMUNICATION LINK  Sensors, Switches Actuators, LampsEngine ControllerTransmission ControllerInstruments & DisplaysTire Pressure MonitorVehicle Body FunctionsHVAC Controls & DisplaysAirbag Logic & DriveAntiskid Logic & ControlsPower Steering Assist A  A  N N   A  N   A  N   A  N   A  N   A  N   A  N   A  N   A  N  1 Vehicle Electronics Architecture73  Q9: If you were to make a decision on the vehicle battery size (amps/hour), what engineering factors would you consider to ﬁ nalize the size of the battery?    Q10: What options a module manufacturer could consider when developing the module operating software?    Q11: List a few advantages of a universal airbag module?    Q12 List few common hardware and software parameters that can be realized in a universal airbag module?    Q13: What has been the progress on 42 V vehicle electrical system?    Q14: What are the enablers to drive more electrical energy?    Q15: Compare and contrast the ‘embedded’ verses ‘straight-wire-switch” topology?    Q16: What is the main assignment of a watch dog timer?    Q17: What is the relationship between the “Watch-Dog-Timer” and the “Reset” to a microcontroller?    Q18: List some of the module nomenclatures used by Nissan Quest.    Q19: Are the nomenclatures used in the industry vary by each OEM?    Q20: What is the common conduit in a distributed module processing to share information?    Q21: Deﬁ ne a Bootstrap loader?    Q22: Deﬁ ne a Primary Boot Loader (PBL)?    Q23: Deﬁ ne a Secondary Boot Loader (SBL)?    Q24: Explain the use cases of MROM, EPROM, EEPROM and Flash Memory type microcontrollers in an automotive engineering design?    Q25: What is a real time operating software?    Q26: Explain the difference between Complex Instruction Set Computer and Reduced Instruction Set Computer Architectures?    Q27: Why a RISC processor is a better selection for a real time operating software?    Q28: What are the different sets of harnesses used in a typical vehicle?    Q29: What is the difference between vehicle chassis and vehicle body?    Q30: What is the difference between “unibody” verses” ‘body-on-frame” vehicles?    Q31: If the automotive module is equipped with a ﬂ ash memory space within the microcontroller then why it is critical to use an external EEPROM space as well?    Q32: If two dissimilar microcontrollers have different memory address space, can there be an identical secondary bootloader?    Q33: If two dissimilar microcontrollers have different CAN interfaces, can there be an identical primary bootloader?       Q34: Draw a simple analog radio diagram          1.37 Exercise75© Springer International Publishing Switzerland 2015 N. Zaman, Automotive Electronics Design Fundamentals, DOI 10.1007/978-3-319-17584-3_2    Chapter 2    Fundamental Module Blocks 2.1                              Introduction  An electronics control module in a typical vehicle is dependent upon the vehicle battery for its power requirements. The battery power  must not  be applied to the module electronics without passing through the safety and protection electronics, which is the ﬁ rst line of defense against unwanted energy transients, and battery inadvertent operations from the vehicle electrical systems. The safety and protec-tion circuits are mandatory requirements for an electronics control module designed for motor vehicle applications. It essentially shapes the ﬁ rst block of any vehicle electronics module.  The following fundamental hardware blocks (Fig.  2.1 ) typically reside in an automotive control module. However, some exceptions do apply when the module design-scope and functions are initially deﬁ ned.     1.    Safety and Protection      2.    Switched Battery      3.    Power reservoir      4.    Power supply      5.    Ignition switch ‘Start’ position interface      6.    Ignition switch ‘Run and Accessory’ interface      7.    Speciﬁ c Input function Interface      8.    Processing engine      9.    Reset and watch dog timer      10.    Program storage      11.    Critical data storage      12.    Flash programming port      13.    Speciﬁ c output function driver      14.    Communication node    76   12VOffRun            P4SENSORSSWITCHES  P3x1x2           P2  P1LAMPS  RELAYSMOTORS SOLENOIDSLxRxMxSxKEY:FIRMWARESOFTWARE DRIVER        24.CAN BUSHARDWARE BLOCKSOFTWARE REQUIREMENTTWISTED PAIR CAN BUS28.DIAGNOSTICS CONNECTORPROCESSING POWER VEHICLE INTERFACEPOWER FEED23.Vehicle Specific, Output Functions  08.PROCESSING POWER  13.SPECIFIC FUNCTION DRIVERS31.Developement toolsDevelopmental Phase Only 20A:Relays,Solenoids               14.COMMUNICATION NODE  03.POWER  RESERVOIR     02.SWITCHED BATTERY  22.Ignition Switch  09.RESET & WATCHDOG TIMER  04.POWER SUPPLY     27.VEHICLE MODULE 'N'    25.VEHICLE MODULE 'A'    26.VEHICLE MODULE 'B' 20B:Vehicle Battery  06.RUN/ACC INTERFACE  07.INPUT INTERFACE CIRCUITS  05.START INTERFACE  12.FLASH PROGRAMMING PORT  10.PROGRAM  STORAGE  01.SAFETY & PROTECTION  20C:Alternator  12V - 14V DC29 Service Tools (Downloads, Diagnostics, Secondary bootlaoder)   FUNDEMENTAL MODULE BLOCKS  20D:Starter Motor21.Vehicle SpecificInput Functions  11.CRITICAL DATA STORAGE17.RTOS, Kernal,FOREGROUND/BACKGROUNDLOOP15.APPLICATION SOFTWAREMIPS18.NETWORKOPERATINGSOFTWARE16.PRIMARYBOOTLOADER30.SECONDARYBOOTLOADER FuseStartAcc  Fig. 2.1       Module hardware and software architecture with interfaces        2 Fundamental Module Blocks77  In an embedded design space, hardware blocks without the software controls could not furnish the intended functions. So, in order to intelligently use the hard-ware blocks, the following fundamental software components exist inside the mod-ule memory:•    Application Software  •   RTOS, or Kernel, or Foreground/Background Loop  •   Network Operating Software (NOS).  •   Primary Bootloader     In order to understand the true picture of a module, it is indeed necessary to review the vehicle environments where the module needs to be installed. The vehi-cle environments play a vital role to the design of the modules. The interfaces of module in a vehicle environment are listed below:•    Battery  •   Alternator  •   Relays  •   Solenoids  •   Starter Motor  •   Ignition switch multiple positions  •   Vehicle speciﬁ c input devices  •   Vehicle speciﬁ c output devices  •   Vehicle communication connectivity     An external world of connectivity, where some are used at the vehicle level and one at the module level are listed below:•    Diagnostics or OBD II connector  •   JTAG or serial bus or UART—(module level)  •   Service Tools  •   Secondary Bootloader     A very interesting feature that may be noted is that a few blocks do not require any software component needed for their operation like:•    Safety and protection block  •   Power supply reservoir block  •   Hard Reset     The safety and protection is purely a hardware block that requires no software controls due to its unique function of using the passive electronic components against electrical noise factors. The power supply reservoir block is another hard-ware block that needs to support the back-up processing for the short-term power needs of the electronics and the processing engine in the event of a sudden power failure.  The hard reset input is purely a hardware input required to signal the processing engine to begin executing the machine code from the ﬁ rst instruction of the program stored in a memory space; pointed to by the reset vector. 2.1  Introduction78 Another form of reset called software reset needs a software component. It is used in conjunction with an external interrupt-port of the microcontroller—conﬁ g-ured to act like a non-mask-able interrupt. The interrupt service-routine directs the program ﬂ ow to follow it from the known section of the program by modifying the interrupt vector.  2.2     Module Hardware Block 1: The Safety and Protection  As can be seen from the module hardware and software interaction diagram, Fig.  2.1 , the vehicle battery power is the only source of power when the engine is not running. However, additional charging energy is available when the engine is running, eventually turning the rotating magnetic ﬁ eld of the alternator. Once the alternator is up and running, the voltage rail hits 14 V—thereby starts charging the battery, and in parallel feeds safety and protection block of every module in the vehicle.  It is extremely important to safeguard module electronics from electrical noise factors emerging from other devices connected in parallel with the battery power- feed like alternator, relays, solenoids, and starter motor (Please refer to Blocks 20A, 20C, 20D)  The other electrical devices shown in Block 20A, C and D are the source of some unwanted electrical disturbances such as low-to-high energy transients, over- voltage electrical stresses, and high-current switching. These disturbances could prove det-rimental to the module hardware if the modules are not appropriately designed in advance to get ‘immune’ to the disturbances originating from the vehicle electrical systems.  The need to ‘immunize’ the modules, and protect modules from the external unwanted electrical disturbance mandates the requirement of adding the safety and protection circuits. The safety and protection circuits have dual roles to play. On one hand it protects the module components against unwanted electrical disturbance originating from the vehicle electrical system, and on the other hand; it guards the module electronics from inadvertent battery connections. The inadvertent battery connection could be deﬁ ned as a condition where the battery terminals may get con-nected to the vehicle electrical system in reverse polarity. The reverse polarity applied to the module may cause catastrophic damage to the sensitive electronic devices inside the module if not carefully protected.  Furthermore in this scenario another inadvertent battery connection is a ‘double’ battery connection that could cause serious damage to the module electronic devices. Double battery is a condition where two batteries electrically connected in-series are unintentionally connected to the vehicle electrical systems. This usually hap-pens when people try to jump start a dead-vehicle battery by connecting an external battery terminals—either by utilizing an additional battery or get assistance of other vehicle battery.  2 Fundamental Module Blocks792.3     Module Hardware Block 2: The Switched Battery  The switched-battery block 2 is deﬁ ned as an electronic switch that is used to trans-fer battery voltage to an external device or devices as shown in Fig.  2.1 . The solid line drawn out from the switched-battery block 2 to the speciﬁ c function drivers block 13 emphasis the fact that function drivers get the power feed from the battery through this switch.  It is always useful to have this battery-switch under the control of application software, so that an application code may turn-on or turn-off in the event of the fol-lowing scenarios:•    Software has detected a failed operational condition of an external device and it is wise to turn-off power to the external devices to stay safe.  •   Software has determined that there is no need to power up the external devices, so it is wise to turn-off the power to avoid unnecessary battery drain.  •   Software has detected a need to turn-on the external devices.     Some modules where pre-deﬁ ned functions, and design scope does not have the need to energize the external devices by the vehicle battery, the battery switch- circuit is not required at all. A good example of one such module is Instrument Cluster where all of its switched-loads like stepper motors, lamps, light emitting diodes, liquid crystal TFT displays are kept inside the module.  2.4     Module Hardware Block 3: The Power Reservoir  The power reservoir is an optimal size energy storage reservoir to hold electrical energy to power-up critical components when a sudden loss of battery power has occurred. This helps to maintain the processing engine stay ‘alive’ for a period of time usually lasts few seconds to complete executing critical software tasks—like storing important information into the processor registers and memory. A good example is the airbag module, where an accident impact could cause sudden discon-nection of battery terminals that may render all the safety related features com-pletely useless. Such a sudden loss of power to the airbag module demands a short-term back-up power supply to allow critical electronics, and the processing engine be kept alive to continue computing for the extended period of time. This extended period of time enables the software to continue executing safety algo-rithms to furnish the critical tasks. The highest priority task for the airbag module at this critical stage is to trigger the ﬁ ring squib to deploy the airbag for a lifesaving event. To augment this event, an additional back-up power supply within the module is also needed to energize the ﬁ ring squibs.  This is just one example of an air bag module. However, a majority of other modules may utilize different mechanisms of energy storage to let the processing engine running the critical features of that particular module in the event of a sudden battery failure. This includes energy storage capacitors, for example.  2.4  Module Hardware Block 3: The Power Reservoir802.5     Module Hardware Block 4: The Power Supply  The power supply fulﬁ lls the voltage requirement to start-up the electronics, com-prises of analog and digital circuits, fundamental processing block, memories and the communication node. Generally, off-the-shelf switching or linear regulators are used to convert battery voltage, which is stepped-down to the required level of oper-ation needed for digital, analog or discrete components.  In distributed architecture of vehicle electronics, power supply block is the inte-gral part of every electronic module installed in a typical vehicle. In other words if a vehicle is equipped with ten distinct modules installed at ten different locations then each module will have its own power supply—a total of ten separate power supplies.  It can be seen from the module hardware and software interaction diagram (Fig.  2.1 ) that the circle drawn inside the power-supply is also dotted-lined to the application software. The dotted-line signiﬁ es the importance of a software compo-nent needed to execute various tasks related to module power-supply to conserve vehicle batter energy, and execute module power management algorithm. An addi-tional feature of power regulators integrated circuit offered by Semiconductor Companies for the automotive design segment are the integrated features of reset, and battery voltage threshold monitoring to ease up module design.  2.6     Module Hardware Block 5: The Ignition Switch, Start Interface  The ignition switch has multiple-switched connections inside the ignition switch assembly. The most commonly known detent positions are “RUN”, “START” and “ACC”, where “ACC” stands for accessory. Depending upon the type of module one or more positions are required to be recognized by the appropriate modules. The “START” connection when made by the ignition-switch actually cranks the engine by utilizing the starter motor.  However the starter motor is an extremely powerful motor, and requires a current in excess of 100 A. In order to provide such a high-current the battery-feed must be provided directly to the starter motor, so in real world, it is powered by the aid of a starter-relay that energizes a very powerful solenoid mounted on to the starter motor. The combination of relay contacts, switching the powerful solenoid kicks off the starter motor to crank the engine. In addition to the function of ‘START’ connection made inside the ignition-switch-assembly to crank the engine, it is also required by the modules needed that information for functions attributed to the design.  In Fig.  2.2 , an ignition switch start interface is shown with a broader picture to show all the critical interfaces.   2 Fundamental Module Blocks812.7     Module Hardware Block 6: The Ignition Switch Run and Accessory Interface  As explained earlier, ignition switch assembly has multiple outputs, so in this case the “RUN” is a connection made inside the assembly, indicates that the engine has already started and running normally. Few modules wanted to know the status of the engine in order to execute critical software functions. But few uses that position to turn the internal module power supply—indeed it is another use of ‘RUN’ position to actually turn on the module power.  Furthermore, the ignition switch assembly has one more contact output namely ‘ACC’ or accessory. The accessory contacts are used when the engine is turned-off and the customer wanted to use the few electrical loads inside the vehicle cabin like radio, fan, window glass and many more to continue functioning.  2.8     Module Hardware Block 7: Input Interface Circuits  The vehicle speciﬁ c inputs are dependent upon the type of function a module has to perform. For example, in an electronic controlled suspension system the processor must know the height of the vehicle; so module input interface circuits must be con-nected to the height-sensors positioned at pre-deﬁ ned locations. Likewise in the instrument cluster the processor should constantly receive the vehicle-speed infor-mation or in case of anti-lock brake module, processor must be able to know the rotational speed of each wheel—just to name a few. To ModulesOFFACCRUNSTARTP4P3P2P112VDCGND+12VGNDBATTERY STARTER RELAYSOLENOIDSTARTER MOTOR  Fig. 2.2    Ignition switch “START” interface feeding modules        2.8  Module Hardware Block 7: Input Interface Circuits82 The input interface circuits are level translators with a proper protection mecha-nism to safeguard the microcontroller inputs. The input vehicle interfaces fed to the analog to digital converter, digital ports, and timer capture ports are required to be scaled accordingly before each input is fed to the microcontroller. The signal condi-tioning is the core theme of the input interface circuit where level, scaling and pro-tection must be designed in accordance with the vehicle level noise sources likely to be inﬂ uenced by the sensors. Every input inside the module is fully protected for shorted, inverted and overvoltage connections inherent in the vehicle systems.  2.9     Module Hardware Block 8: The Processing Power  The processing power of every module is dependent upon the type of microcon-troller and its ability to execute millions of instructions per second (MIPS). Semiconductor manufacturers like Panasonic, ROHM, NXP, Renesas, Freescale, Maxim Semiconductor, ST Microelectronics, Inﬁ neon, Siemens, Fujitsu, Texas Instruments, Microchip, NXP, Toshiba, Atmel, Silicon Labs and many more have already developed line of processors primarily meant for the AEC Q100 qualiﬁ ed automotive applications. Renesas and Freescale Semiconductor (formerly Motorola) have captured the biggest market share of automotive microcontrollers.  In Fig.  2.1 , the processing block is drawn separately from the memories, but in real world, a major share of microcontrollers keeps the program storage of code and critical data inside the microcontroller (RAM, EEPROM and Flash EEPROM). The types of microcontrollers used in the industry are optimally packaged for hardware and software features. There is a trend of integrating more and more functionality be packaged inside the silicon chips. More functionality with less pin count means added software commands to conﬁ gure the ports properly before the intended fea-ture is to work in a typical microcontroller. Majority of microcontrollers share com-mon pins to allow multiple functions.  Computing architectures like Von Neumann, Harvard or modiﬁ ed-Harvard with pipelining, multi-stage pipelining or no-pipelining have been used in automotive computing.  As a brief note to the current trend in the industry, some of the salient functions and features of a typical automotive computing architectures and resources are listed below:•    Von-Neumann Architecture, Freescale STAR12, Fig.  2.3    •   Von-Neumann Architecture, Renesas R32C Family, Fig.  2.4    •   Modiﬁ ed-Harvard Architecture, Microchip PIC18F Fig.  2.5       In terms of computational speed, a mission critical control computer like elec-tronic engine controllers must be fast enough to compute: Proper operational func-tions; process background self-tests for the system integrity—and must maintain active communication link with vehicle modules connected to system interfaces like sensors and actuators. The core operation of engine controller is to calculate best 2 Fundamental Module Blocks83fuel-to-air mixture ratio, and an intelligent ignition-ﬁ ring-algorithm for the optimal engine performance under varying vehicle power, and load-demands—at all times—in all weather conditions. The secondary operational features of engine computing node are to monitor, and control the battery charging by controlling the alternator magnetic ﬁ eld strength—with added energy management tasks. Last, but not the least it maintains a proper handshake with safety and security electronics mechanism to permit or prohibit an engine start sequence.  It has been recognized that engine controllers require higher computational needs compared to any other real-time application installed in a typical vehicle. However, this excludes the multi-media components not discussed so far. DEEPROM=4KAFlash=256KRAM=12KClockWDTResetPWM(5)ADC(8)I2C bus (1)SCI (2)SPI bus (3)Timers (8)CAN bus (5)Von Neuman ArchitectureCISC Instruc(cid:2)onsProgram CounterInstruc(cid:2)ons & DecodeArithma(cid:2)c & Logic UnitStatus Register Ports & serial busesFreescale Star12 CPU  Fig. 2.3    Freescale 16 bit STAR12       DROM=8KAFlash=640KRAM=48BClockWDTDAC (2)GPIO (24)ADC (34)I2C bus (7)ResetSPI bus (7)Timers (11)CAN bus (1) Ports & serial busesRenesas R32C Von Neuman ArchitectureCISC Instruc(cid:2)onsProgram CounterInstruc(cid:2)ons & DecodeArithma(cid:2)c & Logic UnitStatus Register  Fig. 2.4    Renesas R32C Family CISC Processor         2.9  Module Hardware Block 8: The Processing Power84 Another good example to recognize the signiﬁ cance of computational power is the functions of an airbag module—a safety-critical computer, which requires an extremely fast processing speed to execute an inevitable algorithm to safely, and rapidly deploy the airbag (s). Such a fast demand of program-instructions execu-tions is needed during the event of an imminent vehicle crash, where an airbag computational node is forced to do extensive decision-making algorithm within a short duration of time in order to deploy the airbag (s). The event begins when the vehicle crash-sensor gets triggered; and from that point onwards a short-window of time is available, where the module processing node has to execute the most sophis-ticated algorithm of ‘its life time’ to take the airbag deployment decision—in an attempt to save an occupant’s life.  Another semiconductor company named Microchip has developed line of micro-controllers suited for automotive applications that uses Harvard architecture offer-ing Reduced Instruction Set Computer (RISC). A similar set of resources are available like the one Renesas and Freescale microcontrollers offers, but offered with Harvard architecture where data-memory, and instructions-memory are sepa-rately accessed. In some cases multi-stage pipeline computing is also offered. However multi-stage pipeline computing in real-time applications require thorough review of architecture to meet the worst case deterministic tasks scheduling risks, and risks mitigation due to inherent perils of pipeline hazards like stalls, and data- dependencies. Smart compilers can take care of many issues, but not always; all use-cases could be tested and comprehended in real-time dynamic challenges of distributed vehicle processing. DDAAFlash= 96KFlash=3KClockWDTI2CTimers (4)ECAN (1)PWM (4)ResetGPIO (30)ADC(11)SPIHarvard ArhitectureMicrochip PIC18F4685EEPROM=1KArithma(cid:2)c & Logic UnitStatus RegisterInstruc(cid:2)ons & DecodeProgram CounterRISC Instruc(cid:2)onsPipelining Op(cid:2)on Ports & serial busesInstruc(cid:2)onsMemory (Bytes)Data Memory(Bytes)  Fig. 2.5    Microchip PIC18Fxx        2 Fundamental Module Blocks85 It is important to understand the distinction of two similar names by learning their simple attribute namely  MIPS architecture , and  MIPS performance .  The MIPS stands for “ M icroprocessor without  I nterlocked  P ipeline  S tages” based on the hardware architecture originally pioneered in 1980s by Stanford University; the elegance of MIPS is based on a single-cycle machine with Reduced Instruction Set Computer (RISC). The RISC instruction set means less-numbers, and simple type of instructions compared to more-numbers and complex-type,  C omplex  I nstructions  S et  C omputer.  RISC architecture is recognized as ‘load’ and ‘store’ architecture as well, where simple instructions are required to execute complex operations like multiplication of 2 × 4 could be achieved by adding 2 + 2 + 2 + 2.  A quick example of 75 instructions in PIC18F verses well over 200 instructions of R32C or STAR12   MIPS performance  measurement matrix is completely a different parameter. It is a method of evaluating speed of the processing architecture based on a simple cal-culation, where number of instructions are divided by the execution-time and then multiplied by million. So, if a CPU is executing one million instructions per second then it could be deﬁ ned in MIPS term as MIPS rated speed of 1. Likewise a CPU executing one thousands instruction per second means it is at MIPS rated speed of 0.001. So, the MIPS stands for Million Instructions per Second.  In the domain of automotive computing, where real time tasks are essential and at times critical for the module operational needs many factors govern the comput-ing performance. These factors include an architectural difference of Harvard verses Von Neumann, pipelined verses no-pipelining, CISC verses RISC, RTOS verses no-RTOS, and range of many other software architectural design factors that makes a difference in the overall throughput of computing.  So, keep in mind that MIPS measurement-matrix is not the true measurement criterion across all platforms of microcontrollers; rather it is just one factor that could be counted. 1   2.10     Module Hardware Block 9: Reset and Watch Dog Timer   Hardware Reset Block 9 is extremely critical input to any microcontroller, it is an interrupt that cannot be ignored, and it means ‘start-all-over-again’. The Reset cir-cuit when tested in controlled environments like stabilized power-source at room temperature, free of electrical, magnetic, and high-current surges—works perfectly ﬁ ne. But in the realm of automotive harsh electrical environment this means lots of detailed analysis before a robust reset circuit could be designed. Over the past many 1   Computer Organization and Design by Hennessy & Peterson, Morgan Kaufman Publishers, Inc. 2.10  Module Hardware Block 9: Reset and Watch Dog Timer 86years ﬁ eld and warranty issues in the automotive electronics design segment have been attributed to the short-comings in the reset circuit design across the board.  Semiconductor companies have developed highly robust and specialized circuits meant solely to perform hardware reset under a well-deﬁ ned operational envelop. However it is the job of automotive module design team to make sure that reset circuit does not falsely triggers when subject to supply voltage ﬂ uctuations, radiant energy inﬂ uences, and vehicle electrical and magnetic interferences. Power-On- Reset (POR) is he term used when the module is ﬁ rst powered up and gets the hard- reset. A POR could happen when the battery is ﬁ rst-time connected to the vehicle electrical system in the vehicle assembly line.  A hard reset could also be initiated by the watch dog timer external circuit. There is no such thing like reset-switch used in automotive environments, so if you were required to reset a particular module installed in a vehicle, you need to pull fuse for that particular module. Alternately you can disconnect and reconnect battery to reset each and every module in the system.  Watch Dog Timer (WDT) or interchangeably called Computer Operating Properly (COP) is essential for an error free operation of software; it is a ‘must- have’ component that is needed to monitor the software activities for ‘run-away’ conditions. A ‘run-away’ scenario could be deﬁ ned as a condition where the microcontroller- software enters in an endless loop or start executing the instructions making no sense to the intended application with unpredictable results. Recall your experience with a personal computer when it freezes—frustration of no response—ﬁ nally you press “Ctrl, Alt and Del” to invoke task manager or at times turn-off power to do restart. The watch-dog timer does the similar task automatically by sending a hard reset to the processor while detecting a software anomaly—However it, does it in an automatic fashion without needing any human intervention.  The watch dog timer is physically a hardware timer, keeping an eye on the soft-ware activities of the processor for any abnormal operation. The abnormal activity detection is made possible by monitoring a known software response from the microcontroller to constantly trigger the watch dog timer to get it reinitialized on regular basis. In the event of any abnormal software condition, the WDT never gets initialized in-time thereby forcing the WDT to issue a hard-reset to the microcontroller  The majority of the microcontrollers today also support the features of watch dog timer as an  internal function  to initiate reset internally but an  external hardware  watch dog timer has its own advantages. In Fig.  2.6 , one such watch dog timer made by Maxim Semiconductor is shown connected to a microcontroller.   In essence microcontroller sends a periodic signal to the watch dog timer using one of its port-bit, connected to WDI input of MAX 6369. In return for this ‘favor’ Max 6369 never reset the microcontroller. However, if this ‘favor’ is not received by the WDT in a pre-deﬁ ned interval of time, WDT sends a hard-reset to the microcon-troller. The pre-deﬁ ned period of time is adjustable by the set inputs labeled S1, S2 and S3 of MAX 6369, and is depended on the embedded software tasks timing and scheduler.  2 Fundamental Module Blocks872.11     Module Hardware Block 10: The Program Storage  It is the essential section of the memory space required to get ﬁ lled with the applica-tion code. Depending on the type of processing architecture, it may or may not be resident to the processing engine. However, the majority of the microcontroller architectures like the one shown earlier namely Reneses R32C family or STAR12 CPU or Microchip PIC18Fx have the capacity to store application program internal to processor.  The program code can be ‘ﬂ ashed’ either before building the modules or during the process. If it is preferred to ﬂ ash the parts during the module manufacturing process than it must be ﬂ ashed through the JTAG or equivalent communication bus by using the external tools and pin jig probing. If the primary bootloader is already stored in the microcontroller then the CAN bus download procedure may be per-formed to download the program load. However this procedure will immediately add up time that could make manufacturing team not so happy.  2.12     Module Hardware Block 11: The Critical Data Storage  It is the portion of EEPROM where calibration data, fault code data, and critical data may get stored. It is a prudent for some type of modules to utilize an external memory rather than using internal processor memory to store the diagnostics and critical data. The purpose of this guideline is to have a robust design where the mod-ule internal contents could be read even if there is a catastrophic damage to the processor. Generally the safety critical modules must follow this guideline.  Some microcontrollers like Freescale STAR12 offer on-chip non-ﬂ ash EEPROM to allow critical data storage, however if on-chip non-ﬂ ash EEPROM is not avail-able to the preferred choice of the microcontroller than off-chip EEPROM could be utilized. One such example of off-chip non-ﬂ ash EEPROM space is BR24L02 man-ufactured by ROHM.  WDIHard RESET WATCH DOG TIMERMAX 6369MICROCONTROLLERSET INPUTS S1, S2, S3((cid:2)me)  Fig. 2.6    External Watch Dog Timer used to reset the Microcontroller        2.12  Module Hardware Block 11: The Critical Data Storage882.13     Module B Hardware Block 12: The Flash Programming Port  The ﬂ ash programming port is the direct connection to the microcontroller pro-gramming ports. It is the “umbilical cord” of the module electronics while it is being developed. However in place of ‘food’, it gets binary code that goes in microcon-troller’s memory space. In majority of the cases the “umbilical cord” is the serial or UART or JTAG connectivity on the printed circuit board. It is physically realized by placing a mini-connector or header-pins on the board, which goes directly to the microcontroller serial, or JTAG ports or equivalent UART ports. This method of feeding the ‘food’ is well suited until the ‘baby’ has grown enough to have a decent intelligence.  JTAG or any serial port like I 2 C, SPI or UART allows the external device to get connected to the microcontroller programming session to download the program in binary code format into the well-deﬁ ned memory locations. It is a physical connec-tion to the microcontroller hardware directly onto the printed circuit board for the external software development system. Depending upon the preference of develop-ment team, ‘in-circuit’ emulators could also be used to kick-off the development process. In-Circuit emulator is a method of ‘emulating’ the embedded computing engine by the external software run through the personnel computer.  During the development process a separate mini header connector could sufﬁ ce on the board. However, while going through the module manufacturing assembly line, bed of nails could be attached to the board to access the ﬂ ash programming pins of the microcontroller.  2.14     Module Hardware Block 13: Speciﬁ c Function Drivers  The Vehicle-speciﬁ c Output Functions are depended upon the type of functions module has to perform, like for example a suspension module must control power actuation devices to adjust the height of the vehicle by the aid of hydraulic pump if the system is based on hydraulics—or by the aid of an air-compressor if the system is based on pneumatics. In the example of instrument cluster, the instrument cluster must have to move a pointer either by actuating a coil or by using a stepper motor. Similarly in an antilock brake module the output driver could be a solenoid actuated valve meant to control the brake ﬂ uid direction.  Function drivers electronics are usually installed inside the module; however the devices like motors, solenoids, and heaters are carefully placed outside the module at the required locations.    Please review the Fig.  2.7 , where an example of transmis-sion control module is sketched to show the output function drivers and the solenoid loads used in a typical vehicle.   2 Fundamental Module Blocks892.15     Module Hardware Block 14: Communication Node  Modules are installed at different mounting locations across the vehicle. Some are placed far or short distance with each other. The communication bus is required among the modules to share information to augment each other and satisfy the needs of system design. The serial communication standard like controller area net-work (CAN) have gained leading role in automotive vehicle networks. It has suc-cess storied over the past so many years of experience. It has surpassed the usage-factor over and above all other serial data buses introduced earlier in Chap.   1    . A physical layer of integrated circuit is required to get to the vehicle bus to have proper operational electrical characteristics. A protocol controller mostly resides inside the microcontroller.  The communication node block 14 connects the module with other modules installed at different locations in a vehicle like module ‘A’, to module ‘B’ to module ‘N’ by incorporating the Controller Area Network (CAN) bus. Theoretically a total of 110 nodes could be connected to the bus; however, due to the bandwidth issues it is less likely to have a vehicle that even utilizes 50 nodes on a single backbone. The number of modules in a typical vehicle varies from OEM to OEM.  The high-speed bus speed operates at 500 kb/s, but in a network with so many modules on a single-backbone the overall throughput determines the actual operat-ing speed of message transfers among the modules. Theoretically, the CAN bus architecture is divided into multiple speeds: low, medium and high. Yet, realisti-cally, the chosen speeds are medium and high unless there is a genuine need to add a low speed bus. A typical vehicle would use multiple-speed networks, which clearly divides the vehicle modules as medium and high speed nodes.  In order to realize the implementation of buses, it requires two different back-bones, and two separate physically laid-out twisted pair of cables—running across the vehicle harness scheme. Some modules communicate on medium speed, and some on high speed. In addition to that many OEM’s still have merits to use the carry-over proprietary serial buses, which may perhaps have been used by the OEMs in the past for one reason or other. Summarized in a nutshell the communication Microcontroller PortsFunction DriversLine Pressure Solenoid ValveOverrun Clutch Solenoid ValveShift Solenoid  ValveTorque Converter Solenoid ValveShift Position Drive  Fig. 2.7    Transmission Control Module Output functional drivers        2.15  Module Hardware Block 14: Communication Node90architecture today uses the CAN communication bus as the de facto standard, but also keeps some additional buses—if needed by the OEM.  As shown in Fig.  2.8 . CAN bus physical connections runs all across the vehicle to connect every module with its appropriate bus, and then gets terminated with the termination resistors at the farthest points on both ends. The CAN bus termination requires 120 Ω resistor needed to counter bus reﬂ ections to sustain proper opera-tional characteristics. The bus termination resistors (Fig.  2.8 ) are shown electrically placed outside the modules, in real world; the bus termination resistor for each bus is installed in one of the module corresponding to that bus. The value of the termina-tion resistor for other types of bus depends upon the electrical speciﬁ cations for that particular bus.   As explained earlier vehicle network architecture can have multiple bus back-bone as shown in Fig.  2.8 . Each bus physical connections must have to be carried out at the diagnostic port (OBD II receptacle) to gain access to the external hand- held service tools for diagnostics, trouble-shooting, and software download pur-poses. Also note, how the modules I, J, and K are connected to high-speed CAN bus, and the modules A, B, C, D, and E are connected to the medium-speed CAN bus. Similarly the module Y is connected to an OEM bus (a proprietary bus standard). Module E(MS-CAN)Module A(MS-CAN)Module B (MS-CAN)Module C(MS-CAN)Module D(MS-CAN)Diagnostics ConnectorModule I(HS-CAN)Module J(HS-CAN)Module K(HS-CAN)Module XGateway Module Y(OEM BUS)Module Y(OEM BUS)CAN High SpeedCAN Medium SpeedTermination** Termination ResistorsTermination*Termination*Termination*Termination*Termination*  Fig. 2.8    Vehicle communication backbone        2 Fundamental Module Blocks91 Interestingly the most important thing to note is that the Module X is connected to all three buses i.e. medium, high and an OEM bus. Thus the module X has the ability to talk to any other module on three different buses, and act as a facilitator to let all other modules to get information from each other, and that is why it is catego-rized as the gateway module.  2.16     Module Software Component 15: Application Software  The Application Software is the intelligence of module stored in ﬂ ash memory as per module functional design-intent. The intelligence of a module is initially written by a human programmer—almost certainly using C language using an appropriate C compiler. The module intelligence includes the set of tasks required to keep the functional integrity of the module within its operational envelop and maintain com-munication link with other vehicle module—while performing background diag-nostics, and functional integrity tests. The diagnostics software performs the tasks to detect the failed conditions of module, and its interfaces. When the failed condi-tions are detected, the job of the application software is to mitigate the severity and impact of the operational functionality that are challenging the module integrity. Nonetheless once the failure has been detected, the application software must store the failure code into the module memory for diagnostics and troubleshooting pur-poses by the service centers. The portion of the software code added to the applica-tion code to help maintain the diagnostics features is commonly referred as diagnostics software. Diagnostics tasks could either be requested by the user or runs in the background automatically.  2.17     Module Software Component 16: Primary Boot Loader  It is a small piece of pre-programmed software code stored inside the processor’s protected memory space to enable the external device to download the application program code. The purpose of this code is to read the source ﬁ le and self-program program-memory contents. The self-programming is assisted by the secondary bootloader depicted in Block 31  2.18     Module Software Component 17: The Real Time Operating System (RTOS)  It is normally used in complex applications where hundreds of challenging real- time tasks are required to be scheduled, monitored and executed in a deterministic fashion. Many such applications need not only the real time operating system, but also the powerful processing architecture where enough memory space is available 2.18  Module Software Component 17: The Real Time Operating System (RTOS)92to keep a copy of the RTOS in the memory address space. The majority of vehicle modules today are not using commercial-off-the-shelf (COTS) real time operating system rather rely on their own version of software solutions. Modules manufactur-ers may have variety of reasons to defend themselves for not using the RTOS; how-ever two important such factors are—cost and memory size. Simpler applications mostly use Foreground-background loop architecture, round-robin time-sliced task- scheduling or could utilize rate-monotonic system. 2   2.19     Module Software Component 18: The Network Operating System (NOS)  Network Operating System is the backbone of any vehicle multiplex bus communi-cation, and it is the essential software component for modules required to get con-nected to the vehicle bus. The CAN (Controller Area Network) bus protocol operates under the management of network operating system (NOS). The network operating system must be integrated with the module application code to enable the modules to talk to each other with network management protocol. Automotive OEM’s have modiﬁ ed the CAN operating system software using core CAN network operating system initially introduced by Robert Bosch in 1986.  2.20     Vehicle Interface 20C: Vehicle Alternator  A vehicle alternator is a high-current DC generator meant for battery charging, where the connection to the battery makes it an automatic connection to each elec-tronic module. A notable negative impact to the electronics inside the module is a scenario when the alternator is charging the battery, and a sudden disconnection of the battery terminal occurs. This sudden disconnection of battery terminals causes high-voltage spike to inject unwanted energy to the module electronics. The techni-cal term to describe the scenario is called ‘load dump’. Here load means the ‘battery as the load to the alternator’, and ‘dump’ signiﬁ es the fact that the high-energy tran-sient must be ‘dumped’ safely by the electronics devices connected to the battery.  2.21     Vehicle Interface: 20A Relays and Solenoids, 20B Battery, and 20D Starter Motor  A vehicle battery is the primary source of power available in every vehicle when engine is not running. A starter motor is the motorized way to crank engine for a successful engine start up sequence. Only a single starter motor is utilized in a typi-cal vehicle. 2   Real-Time Systems, Design and Analysis (Philip A. Laplante by IEEE Press 2nd Edition). 2 Fundamental Module Blocks93 Relays and solenoids are used extensively in every modern vehicle today, so does the motors. Across the board, one thing is common; an inductive loading in the form of relay coils, solenoids and motor windings. In-rush current of inductive loads requires counter-measures; likewise a relay-coil collapsing magnetic ﬁ eld needed a reverse polarity diode to counter energy barrier threats to the module junction devices.  All devices except the battery are the source of electrical noises, where a low-to- high-energy transients are detrimental for the module electronics if not properly counter measured.  2.22     Vehicle Interface 21: Vehicle Speciﬁ c Input Functions  The input interface for any particular module can have variety of sensors, and switches as tabulated in Fig.  2.1 . It is marked as ‘x1’ and ‘x2’, where ‘x1’ stands for the number of sensors and ‘x2’ stands for the number of switches attached to the module essential for the module functionality.  To get a better insight about how the sensors are being used in the industry, we present an example of engine related sensors, and switches used by Nissan, Quest Mini Van. The sensors and switches portion of the engine control module is re- drawn with added information for the purpose of education (Fig.  2.9 ). Each sensor Signal ConditionersMicrocontrollerAir Fuel Mixture Sensor Heated Oxygen SensorIntake Air TemperatureSensorThrottle Position SensorCoolant TemperatureSensorFuel Temperature SensorPark/Neutral SwitchEGR Temperature SensorMass Airflow SensorCamShaft Position SensorKnock SensorSteering Position Switches  Fig. 2.9    Engine controller switches and sensors        2.22  Vehicle Interface 21: Vehicle Speciﬁ c Input Functions94and switch must pass through the signal conditioning network to condition the  signal level, safety and timing as per microcontroller ports hardware and software interface speciﬁ cations.   2.23     Vehicle Interface 22: Vehicle Ignition Switch  Vehicle Ignition key is a single-pole, multi-contacts rotary switch. The possible sequential combinations are tabulated as P1, P2, P3, P4, and P5 in Fig.  2.1 . However for the sake of clarity, it is zoomed-in with switching-contact details (Fig.  2.10 ). The ignition switch—though a simple device—has been a primary source of malfunc-tions in many vehicle electronics systems. We must pay careful attention to the ignition switch characteristics and its interfaces to other modules when designing module electronics. It has caused lots of engineering failures resulting vehicle recalls in recent history. A quick Google search will give you some scenarios related to the ignition switch recalls. Google keyword ‘ignition switch problems’   Ignition switch failures may happen due to the variety of reasons. Some could be afﬁ liated to wrong engineering estimates about the switch, and its interfaces or because of a faulty switch-design or by the virtue of faulty switch itself. Nevertheless, it can be stated here with caution that ‘low-tech’ switches could not ‘get along’ very well with ‘high-tech’ vehicle electronics architecture—unless the system interactions of hardware, software and electrical interconnections are fully understood and applied correctly. Unfortunately sometimes simple details in automotive electronics design segment are often ignored—that leads to failures, and ultimately costly recalls.  A typical ignition switch possible contact with its design intent is shown in Fig.  2.10 .  The key-switch rotations connect the contacts at  Run ,  Accessory , and  Start  posi-tions when placed in the appropriate position. The key-switch disconnects all connec-tions when placed at  off  position. The battery line feeds the common terminal P5, so when the switch is placed at position ‘ACC’; it transfers battery voltage to P2. Similarly it transfers power to P3 and P4 respectively upon actuation. Bear in mind that it is physically designed in a way that it does not break the contacts from the previ-ously held positions except when it is in ‘ OFF ’ position. The ignition switch is inter-nally mounted to the steering column using a sturdy mounting. In the new generation of advance vehicles the mounting holds the passive anti-theft electronics to handshake AccessoryOffRunStartP4P3P2P1P5 -12VDCTo engine start system &few modulesTo accessary control systemTo modules  Fig. 2.10    Ignition switch positions        2 Fundamental Module Blocks95with the ‘smart keys’ to enable vehicle starting system by the engine control module. It is practically impossible in the presence of passive anti-theft electronics that wires are shorted to battery-power, and start the engine as can be seen in movies.  2.24     Vehicle Interfaces 23: Vehicle Speciﬁ c Output Functions  Vehicle speciﬁ c output functions are depended upon the type of functions module has to perform. For example a suspension module must control power actuation devices to control the height of the vehicle by the aid of hydraulic pump or an air compressor. An instrument cluster must to move a pointer either by actuating a coil or by using a stepper motor. Similarly in an antilock brake module the output driver could be a solenoid actuated metering device meant to control the brake ﬂ uid direc-tion. Functional driver electronics are usually installed inside the module. But the devices like motors, solenoids, and heaters are carefully installed outside the mod-ule. In case the high-current switching inside the module is an issue then different methods are being utilized.  Please review the earlier Fig.  2.7 , where an example of transmission control module is sketched to show the output function drivers and the solenoid loads used in industry.  The output interfaces shown as speciﬁ c function drivers are driving the vehicle loads are tabulated in the Fig.  2.1 . The table actually represents the vehicle-speciﬁ c output functional devices. The devices can be categorized as lamps, relays, motors, and solenoids connected to a particular module, and are marked as ‘Lx’, ‘Rx’, ‘Mx’, and ‘Sx’ respectively. The functionality of a module determines the number of out-put devices needed for that particular module. An example is the airbag module where only two main output devices (ﬁ ring squibs) are required to deploy the driver and passenger side airbags. In the example of engine control module twenty four (24) device drivers are required by the engine controller to control variety of output devices in a six-cylinder fuel-injected gasoline engine. However this is just an example for the sake of education.  Another example (Fig.  2.7 ) of transmission control module requires ﬁ ve (5) dis-crete output devices to assist carrying out automatic transmission functionality. Please note that output devices tabulated as Lx, Rx, Mx and Sx when referring to Fig.  2.1  are the representation of lamps, relays, motors and solenoids. Since Sx represents solenoids therefore Sx equates to 5 are the number of solenoids, trans-mission control module is controlling.  2.25     Vehicle Interfaces 25, 26, 27: Vehicle Modules  The modules are abundant in a modern vehicle today, so are the communication nodes to share information among modules. The number of total modules ‘A’, ‘B’ to ‘N’ depends upon the features and functions offered for that particular vehicle. 2.25  Vehicle Interfaces 25, 26, 27: Vehicle Modules96The total number of modules in a typical vehicle rests on the vehicle platforms, model year built and the target market needs and wants as envisioned by the manu-facturer’s marketing group.  2.26     Vehicle Interface 27: Diagnostics Connector  Diagnostic port is a receptacle installed under the dashboard towards left side of the driver. It is well known in the industry as the OBDII connector, a common provision across the automotive domain to attach external service tools to connect to the vehi-cle CAN buses, +12 V and battery power. The service tools, a computer or a hand-held device are mainly used to read the diagnostics trouble codes to view the vehicle malfunctions, however it can also be used to re-ﬂ ash a new program using CAN bus conduit available at the diagnostics port. A photograph of an OBDII connector is shown in Fig.  2.11 .   2.27     Outside World 29: Service Tools  On the one hand, the service-tools are used by the dealership after the vehicle is built and available for customers in order to furnish many tasks related to the vehi-cle electronics system faults and troubleshooting. On the other hand, the service tools have also been utilized for software-downloads diagnostics and debugging. The software-downloads includes, but not limited to software-patches, upgrades, and module calibrations.  Vehicle development is not a one day job. It takes well over 18 months to develop a new vehicle. While the vehicle is in the phase of development, the development tools could perform system level integration testing, validation and new code development.   Fig. 2.11    OBDII Receptacle under the dashboard        2 Fundamental Module Blocks97 During the time of vehicle development stage, when the modules have already been installed and operational, the external tools can also be used to test and moni-tor the vehicle communication bus for variety of reasons like supporting the vehicle network messaging or to download a revised code, or to write a calibration ﬁ le or to upload the diagnostics information via wireless connectivity. Furthermore, at times it is required to log and store the critical message-bus-log, where a storage device could be connected to the OBDII connector to store the bus-log to analyze the data for later review. A specialized device like a GPS locator could be attached to OBD II connector to track the vehicle location for ﬂ eet test planning. A Wi-Fi adaptor could also be attached to upload newly developed software within the range of pro-totype build stations.  However, once the vehicle has been fully built and it is in the hands of the end- user, the maintenance phase kicks-in. From that point onwards; service tools have been used to run the diagnostics, download calibration-data, read fault codes and monitor bus communication activity for the troubleshooting purposes.  2.28     Outside World 30: Secondary Boot loader  The secondary bootloader is a software component typically not stored anywhere in a typical module, this is why; it is shown as a separate component ‘outside-the-box’ to emphasis the fact that it gets loaded through the external tool meant to upgrade a new code into the module memory. The secondary boot loader is used in conjunc-tion with primary load loader as explained earlier in Block 16-primary boot loader  2.29     Outside World 31: Software Development Tools  It generally means an external computer along with integrated development environ-ment (IDE) used by the software team to develop a new code. The software develop-ment team also uses IDE to download the test code by utilizing the software drivers that downloads the program code into the module memory reserved for program storage. In some instances it can be used to download test and debugging cases to verify the program code integrity with the system interfaces. By and large this feature is utilized while developing test code during the development phase of the module.  Once the hardware and software integration process gets furnished and the mod-ule is up and running at each design phase then the external test program jigs and associated on-board hardware could be removed to optimize cost, and part complexity.  A high-performance embedded workshop (HEW) developed for Renesas line of processors is an example of a classic integrated development environment. MPLAB is the example of IDE developed for Microchip processors, and likewise CodeWarrior IDE is offered by Freescale. 2.29  Outside World 31: Software Development Tools98 Salient features of integrated development environments are listed below:•    An editor to write high level source code  •   A compiler to generate machine level object code  •   A debugging method to ﬁ nd and remove software bugs  •   A method to download the executable code into the target processor  •   A method to store multiple ﬁ les as a project  •   A method to view processor registers, and memory contents  •   A method to transfer object code into the microcontroller ﬂ ash memory.  •   A Graphical User Interface running under windows to provide all the features     2.30     Summary  The electronic control module in a typical vehicle comprises of many hardware blocks like safety and protection, power supply, processing-engine, ignition switch interface, communication node, and variety of interfaces connected to different types of inputs and outputs. Module functionalities determine the number of sen-sors, and actuators required for the intended operation. Ignition key switch is the most critical input to the modules. Some modules process ignition switch as a signal input and others used it as a switch to apply and remove power to the module.  Almost every hardware block in a typical module requires a software control to perform its functionality—except power-reservoir, the safety block and power-on- reset. An application code, a network operating software, a primary bootloader are the essential software components needed for module operational functionalities. A diagnostics software code is part of every module.  Modules installed in a typical vehicle are of two types—some always gets power from the battery regardless of ignition switch position, and others get power only when the ignition switch is turned-on. Ignition switch has many positions and each position has an assigned role. Module internal power supply essentially requires additional safety and protection mechanisms to protect the electronics inside the module. The safety and protection systems safeguard the module sensitive electron-ics from unwanted disturbances of vehicle electrical systems.  Programmable memories; commonly integrated inside the microcontroller are used to store program, data and calibration ﬁ les. A method of programming is used to program ﬂ ash-EEPROM or non-ﬂ ash EEPROM. An application code could be executed under a real time operating software or by incorporating non-RTOS based embedded tasks scheduler. Modules are installed across the vehicle at different locations, and talk to each other by utilizing a serial bus. The growing established trend in the automotive industry is Controller Area Network (CAN) serial bus. In order to efﬁ ciently use the message passing through controller area network, net-work software is being utilized. Network Operating Software is the software back-bone of network systems. A typical vehicle could have multiple backbones of different CAN speeds. An OBD II connector accesses the CAN buses for variety of reasons like for example development, testing, troubleshooting and software programming. 2 Fundamental Module Blocks99 An integrated development environment is used to develop code for the intended module design. An IDE consists of computer, appropriate microcontroller compiler, and access to the target-board hardware to download, and run the test codes. In some cases an in-circuit emulator could be exploited to run software by emulating the actual processor. In such a case, the target-board does not require a real proces-sor, but rather an in-circuit emulator pod on the empty socket of the processor.  2.31     Exercise      1.    What are the critical noise factors in a typical vehicle that could impact module electronics?      2.    What is the function of ignition switch?      3.    What are the types of microcontrollers used in automotive industry?      4.    What is the importance of AECQ100 qualiﬁ cation?      5.    Compare and contrast primary bootloader and secondary bootloader?      6.    If primary boot loader gets corrupted, how would you repair it?      7.    Compare and contrast RISC verses CISC based architectures?      8.    What is the function of a watch dog timer?      9.    What are the functions of OBD II connector at different vehicle built stages?      10.    Why there is a need to add non-ﬂ ash EEPROM?      11.    What additional resources are required to house real time operating system?      12.    Why it is needed to provide load dump protection?      13.    How many different network speeds are possible in a vehicle network system?      14.    What is the function of Network Operating Software?      15.    What is the distinction between MIPS Architecture and MIPS Performance?      16.    What are the advantages of ﬂ ash EEPROM memory storage?      17.    What is the difference between power-on-reset (POR) and an external watch dog timer reset?      18.    Why there is a need to have “switched-battery” controlled by the software?      19.    What are the reasons that a back-up power supply is required in a typical module?      20.    Deﬁ ne and explain battery inadvertent connections?        2.31  Exercise101© Springer International Publishing Switzerland 2015 N. Zaman, Automotive Electronics Design Fundamentals, DOI 10.1007/978-3-319-17584-3_3    Chapter 3    Fundamental Blocks Topology 3.1                               Introduction  In this chapter, we will explore the internal topology of each fundamental block we studied in Chap.   2    . In addition, we will study two additional blocks, namely battery voltage monitoring, and abrupt power shutdown, which we had intentionally avoided to keep the chapter 2 simpler.  3.2     Safety and Protection  As stated earlier, safety and protection is required for the safety of the sensitive devices inside the module including power supply itself. Always keep in mind that before you ﬁ re up module electronics by the help of power supply regulators, you must protect and safeguard power supply, and module electronics with some well- known unwanted conditions inherently existed in the vehicle environment. These unwanted conditions, if not properly counter-measured, could prove detrimental to the entire module design. These unwanted conditions are categorized as  high-energy transients ,  reverse battery connections , and  double battery conditions . If any of such events come to pass, catastrophic damage could occur to the module electron-ics. Consequently, it is mandatory, and absolutely necessary to add protection cir-cuits to safeguard the module power supply and electronics from the catastrophic damage. The essential protection circuits needed to do the job are shown in the shaded portion of    Fig.  3.1 , and listed as follows: •    Load Dump Protection  •   Reverse Battery Protection  •   Dual Battery Protection    102 The safety and protection block input is connected to the vehicle battery through a fuse. The output of safety and protection block is connected to the module power supply. Finally the output of the power supply is delivered to the module electron-ics, and the processing engine. The shaded portion is the zoom view of safety and protection blocks.  The power supply of the module and its electronics with processing engine are shown in the diagram to give our reader high-level perspective of the vehicle and module interfaces. However, bear in mind that the safety and protection block is part of the module itself.  The rationale behind each protection block is stated as follows:•    A load dump protection is required to safeguard the module electronics from high energy transients. These are caused by the sudden removal of the battery terminals when the alternator is running. The high energy transient could cause serious damage to the module sensitive semiconductor devices. The protection could just be an electronic component that can limit and absorb unwanted tran-sient energy to a safer level. The term ‘dump’ points towards the fact the high energy catastrophic impacts are safely dumped by the protection device (s).  •   A reverse battery safety protection is required to protect the module power supply and electronics against inadvertent reverse battery connections. The protection could just be a reverse current blocking diode or an alternate path to open-circuit the pre-deﬁ ned weakest link in the system like a fuse. A blown fuse actually opens up the circuit, thereby protecting the electronics; however it must act fast enough to open up the weakest link at the appropriate required current within a pre-deﬁ ned time.  •   A dual battery voltage (24 V) protection is required to protect the module power supply and electronics against accidentally applying dual battery in-series (12 + 12 = 24VDC), which could cause serious damage to the sensitive devices. This usually happens when people try to jump-start the vehicles using additional external battery either separately or by using another vehicle.     Please note that there is no software component used or needed for the safety and protection block.  Vehicle Resources MODULE ELECTRONICS &PROCESSINGREVESRSE BATTERYPROTECTIONDUAL BATTERYPROTECTIONFUSELOAD DUMPPROTECTION VEHICLE BATTERY POWER SUPPLY  Fig. 3.1    S   afety and protection block        3 Fundamental Blocks Topology1033.3     Power Supply  In the distributed processing architecture, every module requires a built-in power supply block residing in the module. The power supply topology presented here applies to all modules installed in a typical vehicle. The module power supply inter-nal functional topology, with interface to vehicle battery and module electronics is depicted Fig.  3.2 .   Please note that the battery and the fuse are outside of the module. The shaded portion is the zoom view of the power supply functional block. Also note that the power supply gets the power after safety and protection functional block as explained in Sect.  3.1 , and then delivers power to the module electronics and processing block. As stated earlier, the power supply is integral part of the module. The essential and optional power supply blocks are listed as follows:•    Software Controlled Switch (S1)  •   Low Pass Filter (LPF)  •   Regulator  •   Power Reservoir  •   Power-On-Reset pulse (Optional)  •   EMC Filters  •   Software component             SOFTWARE COMMANDPath BPath A      RESET (POR)Vehicle ResourcesSAFETY & PROTECTIONELECTRONICSWITCH S1 EMC FILTERSREGULATOR (S) VEHICLE BATTERY FUSE MODULE ELECTRONICS &PROCESSINGPOWER RESERVOIRLOW PASSFILTERApplicationSoftware  Fig. 3.2    Power supply essential blocks shown with vehicle battery and fuse        3.3  Power Supply104 All functional blocks listed above are applicable to the modules that needed power be always available irrespective of vehicle ignition switch positions. On the contrary, a module that gets power from the ignition switch does not need an S1 switch and corresponding software to control that switch.  The microcontroller hardware reset signal—power on reset (POR)—is also a feature that is available in some power supply regulators. However, it is an option not always found in every commercially available off-the-shelf regulator. The off-the- shelf regulator, such as Inﬁ neon TLE4470G, is an example of one having the power-on reset feature.  Starting from the vehicle battery the power is fed through the fuse to the safety and protection block of the module, which then feeds two different parallel paths:•    Low-Current Path B  •   High-Current Path A     The Low-Current Path B is meant to provide biasing to the software-controlled electronic switch, and a minimal power to the essential processing block. The pur-pose of this scheme is to execute the power management software algorithm to do module power-on or power-off command by controlling the S1 switch. This soft-ware algorithm is very useful in order to help switch the module in different opera-tional modes that are needed while the modules are installed in the vehicle.  The Low-Current Path B is also used to apply power to the circuits that are required to be kept energized in order to control the ‘S1’ switch. These essential circuits are occasionally referred as the ‘keep-alive’ circuits; like for example—in this particular case—the microcontroller along with the electronic switch (S1) with proper electronic switch biasing.  The Low-Current Path B remains active throughout the entire period of the vehi-cle life-cycle as long as the vehicle battery is fully operational and connected. If your vehicle is equipped with a 48 months maintenance-free battery then a Low- Current Path B would stay active for 48 months irrespective of ignition switch on and off toggling.  Consequently, it is critical in terms of energy consumption and vehicle safety that Low-Current Path B must be designed carefully by analyzing every detail of vehicle interfaces, wirings, printed circuit board traces, and every component that is placed in the path of keep-alive circuit. A quick proverb could be quoted here that when designing the keep-alive circuits—“Make sure i’s are dotted and t’s are crossed”.  Another interesting thing to note is that the continuous battery energy consump-tion is more commonly called out as the key-off load current, which is actually the current passing through the Low-Current Path B. Nevertheless, there are many dif-ferent alternate technical terms used for the key-off load current like quiescent- current, Q-current, dark-current, sleep-current, and leakage-current.  The High-Current Path A is meant to actually deliver power to the module. The real operation of the module begins when the power is available through S1 switch. The power gets ﬁ ltered by a low-pass ﬁ lter, thereby releasing undesired transient energy to the ﬁ lter, which is required to smooth-up the incoming noise, and an in- rush dc current. After getting through this ﬁ ltration circuit, the incoming voltage is now available to the voltage regulator (s). Notice that up to this point the battery 3 Fundamental Blocks Topology105voltage is still not up to the required level to energize the module electronics and processing components.  An off-the-shelf voltage regulator at this stage now gets the power and converts the safely-protected battery voltage to the required level of module operation. It then delivers power to other module blocks like the communication node, process-ing engine, active components biasing-circuits, and rest of the electronics. In addi-tion to delivering power to the module functional electronics, the regulator output also feeds the energy storage devices to store energy for an emergency use. It is prudent for the application software to add and compensate stabilization time for every device under its control not just S1 switch as shown in Fig.  3.2 .  Following is the quick summary of each individual sub-block: 3.3.1     Electronic Switch S1  The software controlled electronic switch is the entry point of the external power source—by now—safely protected by the protection block, and is controlled by the processor to switch power input to the power supply regulator.  3.3.2     Low Pass Filter  A low frequency  ﬁ lter  is required to absorb low frequency switching transient and instantaneous change originating from power-on switching. It can be realized just by adding a simple LC ﬁ lter.  3.3.3     Regulators  The regulator is the actual hardware used to convert battery voltage to the desired volt-age levels (+5, +8.5, +3.3, +1.2 are some of the options). The standard off the shelf voltage regulators have been used in the industry, however, it is always an option, where possible, to design a voltage regulator using discrete electronic components.  3.3.4     Power Reservoir  A power supply reservoir is an energy storage device, which holds limited power to drive critical circuits for short period of time in order to manage emergency shut- down procedures. Microcontroller is the primary device needed this sustained power. It is important to compute the total execution time with enough margins before backup energy ramps down to absolute minimum rating of the microcon-troller operation.  3.3  Power Supply1063.3.5     EMC Filters  The  Electromagnetic Compliance  is a regulatory requirement to fulﬁ ll and comply with the electromagnetic interference (EMI) limits set forth by Federal Communications Board (FCC) of United States of America. The purpose is to pro-tect Continental United States Radio Frequency Spectrum from the harmful radiant energy imparted by any newly developed electronic device, furthermore FCC also expects that any newly developed electronics device must not negatively affected by the existing radiant energy imparted by US frequency spectrum,—and off course, automotive modules are no exception.  When developing a system or sub-system to be used in United States of America, the developers should make sure that their product is in compliance to FCC regula-tions. Developers in Canada, Europe, Japan, Asia Paciﬁ c, Australia, Korea and else-where over the globe must have to follow their regulatory requirements to comply with their standards. Homologation is the term used in automotive design space to comply with the regulatory requirements of a particular region or area or country, it applies to all aspects of design not just the EMC compliance.  Vehicle OEM’s have successfully deﬁ ned and speciﬁ ed the EMC guidelines, and test requirements for the automotive electronic modules. The test limits governing the ‘Fail and Pass’ criteria resides well within the FCC guidelines.  The EMC ﬁ lters shown in Fig.  3.2  are not just limited to ﬁ lters only, rather a reminder to the reader that lots of upfront design work is needed to comply with electromagnetic interference (EMI). It is not an easy affair and requires analysis at an overall design topology, selection of components, switching frequencies, pulse shapes, pulse rise and fall times, printed circuit board layers, component place-ments, copper density, traces and layout.  The EMC compliance is not just limited to power supply rather it applies to entire module design. But the bus does not stop here, in the nutshell the entire vehicle electrical vehicle requires to comply with the regulatory requirements. The overall compliance includes radiant and conducted energy emissions from the source (power supply, module or vehicle). In addition to that the source (power sup-ply, module or vehicle) must be able to immune themselves from the external noise sources either conducted or radiated. We will discuss more details about all these deﬁ nitions and requirements later.  3.3.6     Software Component  The S1 switch is required to be controlled by the software. In order to assist soft-ware to control S1, the software must monitor the battery voltage, ignition key posi-tions, and ignition-cycling in order to properly manage the S1 switch connect-disconnect sequence. Furthermore the software also maintains proper mod-ule operating-mode. 3 Fundamental Blocks Topology107 Power supply development requires lots of upfront design work. Careful design assumptions must be made when doing sleep and operating current calculations. The fusing strategy is critical for the module power supply current consumption. Vehicle OEM’s usually not always allocate separate fuse for every module rather share common fuse for certain group of modules. If a fuse is common for two or more modules then it is labeled as a ‘shared’ fuse.  If a fuse is dedicated to a module then it is called a ‘dedicated’ fuse. When reviewing module fuse requirements, we must pay careful attention to the module fusing strategy, and sizing.  Modules are sometimes required to blow the fuse while an overload condition exists in a predeﬁ ned time—if that is the design intent—then the power supply design must assist the vehicle fuse to blow within the well-deﬁ ned time duration.  The interaction of vehicle wiring and other interfaces with module power supply needs testing and validation at all design levels. The proper testing and evaluations to the battery conditions, vehicle harnesses, fuse ratings, printed circuit board trace widths, temperature variations are required to be reviewed by the design team. A computer aided electronic design automation (EDA) software tools have been used to simulate normal and extreme value analysis to determine the operational envelop of a particular design. A common engineering term worst-case-circuit- analysis (WCCA) is expressed to classify such efforts.  The protection devices used in the extreme condition designs like MOV (Metal Oxide Varistor), TVS (Transient Voltage Suppressor) or Zenor diodes must be carefully selected by paying careful attention to the incoming electrical over-stress voltage proﬁ les, safety component data-sheets and its operating conditions.  A bad protection circuit design in an automotive module could easily ‘toast’ the printed circuit board trace, and trace may act like a ‘fuse’.   3.4      Battery Power Switching  When the engine is not running (i.e. alternator is off) the vehicle battery is the pri-mary source of power in a typical application, so it is truly required to conserve that energy, and it must only be used when it is necessary. The fundamental principle applies to the automotive module design states that “ Apply power to the intended loads when needed ”. The switched battery topology is based on this principle. The block diagram of battery power switching, comprises of an electronic switch that needed a microcontroller port bit to control the electronic switch. The overall pic-ture is shown along with relevant interface to the vehicle and the module is shown in    Fig.  3.3 . Please note that vehicle battery through the fuse is feeding the safety and protection block.   Here is how the operation takes place—the output of safety and protection is available at the input of electronic switch S2. The switch S2 is controlled by module microcontroller port digital output (D.O.) 3.4  Battery Power Switching108 Once the software task ‘BattSwitch’ is executed, it can either turn the switch to open position or in closed position as needed. So when the switch is in a closed posi-tion, the battery power is applied to the vehicle loads (motors, relays, solenoids, actuators, heater, lamps etc.). The software task can also remove power when it is no longer needed. Please note if the digital output port bit (D.O.) is set to logic one, it can turn the S2 switch to closed position. However, when it is set to logic zero it ulti-mately turns the S2 switch to open position; eventually turning off the vehicle loads.  The vehicle battery power is fed to the safety and protection block and then is available to the electronic switch S2. The S2 switching is based on the software task ‘BattSwitch’. It can either apply or remove the battery power to the vehicle load using the digital output port (D.O.) of the microcontroller. If the vehicle loads, and the S2 switch are pretty robust against unwanted disturbance from the vehicle elec-trical then a direct battery feed could be connected to the S2 bypassing safety and protection element.  3.5     Sensor Power Switching  A slight variation of this concept is quite practical when power is needed for active sensors required by some modules to perform their functions. The similar battery switching block explained in the preceding example could be utilized to do the job, however with minor changes—to apply and remove sensor power. The only differ-ence is the regulation of the battery voltage down to the required operating voltage of sensors needs to be converted by the sensor power regulator.  Figure  3.4  illustrates the concept, here the sensor regulator provides the sensor voltage and then applied to the electronic switch S3. The electronic switch S3 trans-fers sensor power to the active sensors, once the software task ‘SenPower’ is  executed with appropriate digital output.  D.O.VEHICLE BATTERY & FUSEVEHICLE LOADSMODULE MICROSAFETY & PROTECTION  ELECTRONIC SWICTH S2SoftwareTask BattSwitch  Fig. 3.3    Battery power switching to the loads        3 Fundamental Blocks Topology109 Assume logic ‘zero’ is required to turn on the S3 switch, so when the software task ‘SenPower’ is executed it changes the corresponding port bit to logic ‘zero’, thereby turning on the S3 switch. The switch S3 input is connected to the sensor power regulator and the output goes to sensors, eventually energizes the sensors.  The sensor regulator is shown connected to the safely protected power feed which is getting power from the battery; however, it could also get the power from the module internal power supply if we chose to do so. Bear in mind if sensors are mounted far from the module installed location then the voltage drop across the vehicle harness scheme should be computed in all design iterations.  3.6     Ignition Switch Interface  Ignition switch is a rotary three-in-one switch, commonly referred as  Start ,  Run  and  Accessory  input positions. Each input if required to be sensed by the module must pass through the protection mechanism, level shifter, signal conditioning, signal scaling and then to the microcontroller before any software procedure could even begin to monitor the input lines. The software procedure either poll the input for a pre-deﬁ ned period of time or may use an interrupt driven procedure to invoke the interrupt service routine; to determine the status of the line.  Figure  3.5  shows one typical circuit, which can be used for the single-position detection like for example,  Start . The level shifter translates the +12VDC to the required level (+5, +3.3 or else), and generates the necessary transients response (rise or fall time i.e. Schmitt trigger) for the digital circuits inside the microcon-troller input port to operate correctly. The protection devices are pretty standard practice to safeguard the microcontroller ports and level shifter from external unin-tended electrical stress in the form of high energy transients or short to battery conditions. Similar topology could also be used for other switch positions like  Run  and  Accessory  inputs. A signal scaling is required to establish a voltage level.   D.O.SAFETY & PROTECTION VEHICLE BATTERY & FUSEELECTRONIC SWICTH S3 SENSOR REGULATORACTIVE SENSORSMODULE MICROSoftwareTaskSenPower  Fig. 3.4    Active sensors power regulation and switching        3.6  Ignition Switch Interface1103.7     Input Interface Architecture  Depending on the module functionality, a variety of sensors could be attached with appropriate interfaces to the module processing node. Sensor inputs are ﬁ rst trans-lated to the required level of voltages with signal conditioning to get into the micro ports. Discrete, analog, and pulsed type signals could be connected as shown in Fig.  3.6 . The relevant ports can then be used to process the information originating from the sensors. The software task ‘Conversion’ performs the signal processing from the corresponding interface port. The analog to digital processing is required to sense and understand the external signal by plotting a transfer function. The soft-ware task ‘Status’ is to make sure that the sensor is intact and sensor data integrity is not compromised, i.e. its sensor information is well within the speciﬁ ed range.   3.8     Speciﬁ c-Function Driver  Depending on the module function, a variety of output devices could be connected through the appropriate interfaces to the module processing node, so to speak, the microcontroller input and output ports. These ports could either be used as digital or analog input or output. 12VDCPROTECTIONSIGNAL SCALINGSIGNAL CONDITIONIONERIGNITION SWITCH START LINELEVEL SHIFTERMODULE MICROSoftware  Task StartSwitch  Fig. 3.5    Ignition switch start line interface        3 Fundamental Blocks Topology111 The microcontrollers today use fewer I/O pins with added functionality, which means that ports can be conﬁ gured by the application software for the appropriate conﬁ guration. The block diagram drawn in Fig.  3.7  is using a single bit of an 8-bit digital port of a typical microcontroller conﬁ gured as the Digital Output (D.O) to control the high-side driver. The high-side driver input is connected to the S2 switch, which is getting power from the battery through safety and protection block. The output of the driver is connected to the vehicle speciﬁ c function load.   The speciﬁ c load in this topology could be a relay, a solenoid, a heater or a lamp. For the sake of clarity, all other interfaces are also shown, mainly battery transfer electronic switch S2, safety and protection block, battery and fuse. Software task ‘status’ has conﬁ gured a single bit to read as an status in an additional port namely  VEHICLE SENSORSMODULE MICROCONTROLLER PORTS LEVEL TRANSLATORS PROTECTIONSSoftware Task ConversionSoftwareTaskStatus  Fig. 3.6    Sensors interface to the microcontroller       STATUS        D.I  D.O.VEHICLE-SPECIFIC FUNCTION LOADVEHICLE BATTERY HIGH SIDE DRIVERMODULE MICROCONTROLLER PORTSFUSE              S2           D.O.SAFETY & PROTECTION SoftwareTask BattSwitchSoftwareTaskStatusSoftware Task Toggle  Fig. 3.7    An output load with a high-side driver         3.8  Speciﬁ c-Function Driver112Digital Input (D.I) to check the status of the high side driver switch.    Software tasks ‘status’ require an extra hardware to monitor the switch operational condition, which is extremely important in many critical real time systems.  The battery electronic switch S2 as explained in Sect.  3.4  is primarily used to switch the battery power to the appropriate load by utilizing the microcontroller digital output (D.O.), thereby executing the software task ‘ BattSwitch ’. This is the ﬁ rst task the software has to do before it attempts to turn on the intended load. Please bear in mind that at this time load is ready to get energized but is still not energized yet, because path to ground through high-side driver is not complete. Nonetheless the path to ground may only be completed when the high-side driver is turned on. This happens when the software task ‘ Toggle ’ is executed by sending microcontroller digital output port (D.O.) to logic-zero or logic-one (depending upon the hardware design). The vehicle-speciﬁ c function load, now, eventually gets energized at this point.  The question is how the microcontroller software would know that the operation had successfully executed? In order to validate the correct switching operations exe-cuted by the software it is essential to monitor the switch-status to detect any unsuc-cessful operation. To achieve the capability of switch-status monitoring, additional hardware must be added to the high-side driver to get to the status-line output.  The status-line output is then translated to the desired digital input level where it is read by the microcontroller to determine if the intended switching operation was indeed successful. The software task ‘ Status ’ gets executed to read the feedback status from the high-side driver feedback loop by the application code to also deter-mine if the operation was successful.  If for any reason the switch status does not come out ‘true’, meaning, the opera-tion was not performed as intended, then the operational code logs the fault and stores it as a diagnostics trouble code.  3.9     Low-Side Driver  The preceding example has shown a high-side driver to drive a load. A similar topology with a minor change could be used for a low-side driver as shown in Fig.  3.8 . The software tasks are pretty much alike; however, hardware uses a differ-ent type of switch. The switch is connected to the load and when actuated, it pro-vides a ground path to the load current, thereby enabling the device to become energized.  Notice the difference of ground, and battery plus (+) line placement between the two different topologies:•    In high-side applications, the High-side driver switches the battery plus (+) to the load (Fig.  3.7 ).  •   In low-side applications, the Low-side driver switches battery (−) to the load (Fig.  3.8 ).     3 Fundamental Blocks Topology113 The ground placement plays an essential role in any electrical system, so a low- side driver switch is no exception. In low-current applications where the vehicle speciﬁ c load does not consume heavy current, the majority of the drive circuits could operate by wide margins of voltage tolerances. However, when the high- power device gets energized by the low-side driver, a potential drop across the ground path could reduce the overall operational envelop, so, it is an issue that must be resolved with careful design considerations to the voltage-drop across the low- side driver and the ground return path. The voltage across the ground return path has to be minimal to ensure that the intended load is getting required operating power at all times in extreme circuit value conditions considering temperature, heat, humid-ity, and component tolerances. In the next chapters we will present one such topol-ogy for a worst case circuit analysis.  3.10     Pulse Width Modulated Driver  PWM controlled driver is a combination of a switch (either high-side or low-side), and a pulse-source to generate duty-cycle modulated pulses. The pulse source must be able to change its duty-cycle. The duty-cycle determines the time to open and close the switch to transfer energy to the load.  For the sake of simplicity we present an example of a lamp driven by the PWM controller. In other automotive applications PWM controlled drivers are also uti-lized to control fan blower motor speeds. As stated earlier, the microcontroller today support embedded PWM controller channel embedded inside the microcontroller, so in order to use his feature, all you need to do is to conﬁ gure the PWM channel port, select the PWM frequency and adjust the duty-cycle (Fig.  3.9 ).  STATUS                D.I.  D.O.VEHICLE BATTERY VEHICLE-SPECIFIC FUNCTION LOADLOW SIDE DRIVERMODULE MICROCONTROLLER PORTS              S2           D.O.SAFETY & PROTECTION FUSESoftwareTask BattSwitchSoftwareTaskStatusSoftwareTask Toggle  Fig. 3.8    An output load with a low side driver        3.10  Pulse Width Modulated Driver114 Once the appropriate frequency is adjusted usually in the range of 100–200 Hz, the switching transistors starts toggling at that rate, however dimming is not entirely managed by the switching-frequency rather it is the duty-cycle that must be varied to control the dimming—a standard practice in electronics design segment across-the- board. The duty-cycle is supervised by the software task ‘dimming’. The dimming task depends on many other factors like type of lamps used, peak applied voltage, mounting locations, plastics, light pipes and variety of other mechanical factors.  It is an open loop system, meaning, the ﬁ nal determination of dimming cannot be measured by the human eye. It is an issue for many good engineering reasons. So, in order to solve this unknown factor of human eye perception, state of the art light measurement equipment has been incorporated by the automotive car manufactur-ers to ﬁ nalize the dimming controls inside the cabin. As a customer who buys the vehicle, it is a simple dimming switch, but for a manufacturer who builds the inte-rior design of the car, it is phenomenal job. The OEM studio issues a certiﬁ cate of compliance after a dimming and color harmony goals and objectives are achieved to all the stake holders. ‘Great Achievement’ and ‘Job well done’ are the words come out at that occasion.  3.11     Watch Dog Timer  In Chap.   2     we introduced an external watch dog timer. We now look into the internal watch dog timer. An external WDT is an external hardware; however, the majority of microcontroller today also supports the features of an internal watch dog timer as well. Internal WDT works in the similar fashion like the external hardware WDT, yet each have its own pros and cons. The major difference is internal clock depen-dency for the internal WDT verses no dependency on microcontroller clock by the external WDT.  The internal watchdog timer works on the principle of digital counting by an internal counter-timer by the support of software commands, where a timer-counter is programmed to work as an elapsed timer. When the time expires, an internal reset PWM OUTPUTFUSEVEHICLE BATTERY ProgramPWM ChannelMicrocontroller              S2HIGH SIDE DRIVER           D.O.SAFETY & PROTECTION LAMPSSoftwareTask BattSwitchSoftwareTaskDimming  Fig. 3.9    Lamps driven by PWM dimming procedure        3 Fundamental Blocks Topology115is issued to the microcontroller. The main job of the module operational code is never to allow elapsed timer to expire its pre-programmed time, and it does that by sending a reset command in the embedded code (CLRWDT instruction in PIC pro-cessor) to the elapsed timer or watch dog timer. The process of resetting the WDT is hereby stated as servicing the WDT. If, for example, the embedded software is utilizing foreground-background loop architecture then the foreground loop could service the WDT at the completion of each foreground loop. 1   The topology of internal WDT analogues is like software watching the software, so it could be a possibility that both could malfunction, meaning an ‘overrun condi-tion’ of main program could ‘over-run’ the watch dog software code as well. Therefore, it could be stated here with caution that the software watch dog timer is less reliable than the external hardware WDT. 1   An interesting elegant detail explained by Maxim Semiconductor in its applica-tion note 4229 released on June 5, 2008 presents a scenario of failure mechanism of ﬂ ash memory, where an electromagnetic interference could cause memory bit- errors, cascaded to program code eventually executing operands instead of op-codes thereby rendering entire processor execution unintelligent, endless and useless. Such a condition warrants a timely fashion recovery of the processor to gain control back to a known default state, a compelling justiﬁ cation of having a WDT to invoke an automatic correction of the system software.  By looking at the automotive module system software design, however, there could be many different types of reasons that may make module operational software to go on a ‘wild goose chase’. 2  However one of the reasons is memory soft- error that could be introduced by a strong electromagnetic energy pulse imparting radiant energy on to the module memory instigating a soft-memory error. Depending upon the memory data being corrupted by the soft-memory error, harmful or harmless scenarios could arise. Nevertheless, if this happens, a customer in a vehicle could experience a strange behavior subject to the system and its operational features.  A vehicle could see strong radiant energy either by its own malfunctioning elec-trical systems or by the radio frequency transmitting towers, cellular phone towers, repeaters, and ground-based radar systems installed near or around the airports, defense installations, research centers, so on and so forth.  3.12     Reset Topology  Hard reset and soft reset are two options available for any vehicle electronic mod-ule. Generally there are no manual methods to reset the modules. Nevertheless, occasionally a speciﬁ c system needs that option for long-term maintenance reasons, which could be treated as a system reset. In principle there is no manual reset switch required or opted for any of the module. 1   Maxim Semiconductor, Application Note 4229, June 5, 2008. 2   A pursuit of something unattainable or non-existent. 3.12  Reset Topology116 Many different methods are utilized to reset a module, these are listed below, and are shown in Fig.  3.10 : •    Power-on Reset (POR)  •   Hardware watch dog timer Reset  •   CAN command Reset  •   Interrupt Reset  •   Software watch dog timer Reset     The two options  POR  and Hardware  WDT  reset falls in the category of hard- reset meaning all program execution terminates—all running threads stops, and pro-gram counter loads the default reset vector. Furthermore all registers, stack-pointer, other memory pointers and ALU condition code ﬂ ags are initialized at their default values. After that embedded code begins execution from the beginning of code pointed to by the unmodiﬁ ed reset vector. A typical module performs system initial-ization routine to start all over again.  The CAN command reset, and interrupt reset are controlled resets meaning embedded code has control over the program code execution after modifying the interrupt vector register. In other words software could adopt a strategy best suited to the application to execute section of the program code deemed critical, addition-ally soft reset has control over all registers and pointers, where it may or may not perform the system initialization routine.  Power-On-Reset (POR) is a hardwired reset circuit connects directly to the hard reset-line of the microcontroller or microprocessor. It works when the power is ﬁ rst applied to the module and POR circuit senses the incoming power and then gener-ates a well-deﬁ ned reset output with perfect timing cascaded to the microcontroller reset hardware pin. Some of the off-the-shelf power regulators do support the power-on reset output by embedding the function within the regulator. However, it is an option not always supported by all the voltage regulators. SOFTWARE WDT RESETPOWER ON RESETRESETINTERRUPT PORTINTERRUPT RESETWDT RESETFreeScale CPU12.CAN PROTOCOL CONTROLLERCAN TRANSCEIVERCAN RESET  Fig. 3.10    Reset options in a typical module        3 Fundamental Blocks Topology117 WDT Reset is generated by the external watch dog timer hardware chip, and executes the microcontroller reset utilizing the hardware reset line. The effects and execution of external WDT is exactly the same as the power on reset.  The software reset could be achieved in many ways across platform of micropro-cessor and microcontroller. But by the token of vehicle module a reset command over the CAN bus is a pretty common scenario  3.13     Digital Communication Architecture  In the world of digital electronics serial buses are ubiquitous. These have been used in variety of applications. In the early days of microprocessors when Intel 8085, Motorola 6800, Zilog Z-80 and Advanced Micro Devices 6502 were ﬁ rst introduced, the Universal Asynchronous Receiver and Transmitters (UART) were commonly available in the digital market segment to support serial bus communication. In the beginning of that era the option was offered mostly as stand-alone controllers. But, later the function became integral part of many microprocessors and microcon-trollers as well.  Today the guts of serial communication within the automotive electronics mod-ules largely rest on the following buses with variety of speeds and types:•    SPI bus (Serial Peripheral Interface bus)  •   SCI (Serial Communication Interface)  •   I 2 C bus (Inter Integrated-Circuit bus)     SPI bus, developed by Motorola (now FreeScale) mainly for the microcontroller applications, it is a four-wire bus (MOSI, MISO, SS, and SCLK) operates in full- duplex mode, and could operate up to 10 MHz bits per second. Nonetheless, the speed of the SPI bus is contingent upon the type of computing architecture offered to the customer. Another version of SPI has been recognized as Quad SPI or named Queued SPI. It has gained extensive usage to interface with external serial ﬂ ash memory to improve memory cycle time throughput. Dual channel or quad channel could be exploited to improve the memory read and write cycle operations.  SCI is a UART protocol mainly embedded in the microcontroller as a general purpose serial transmission port. Free scale 68HC11 processor data-sheet deﬁ nes it as a two wire (TxD, RxD) half-duplex serial bus. The speed of transmission is based on the baud rate selected by the user after proper conﬁ guration to the UART control registers.  I 2 C is a two-wire (SCK, SDA) half-duplex bus with most commonly recognized speed of 100 kHz bits per second. NXP (formerly Philips), who developed the I 2 C bus standard, also offers 400 kHz bits per second and 3.4 MHz bits per second ver-sions of I 2 C. Yet, 100 kbps dominates in automotive modules. Historically, it was developed by Philips for the TV set application where it was realized in the digital- section where it required talking to integrated logic circuits for the TV set electron-ics. At present it has been recognized and being utilized in the digital industry across 3.13  Digital Communication Architecture118the board. It has two signals, namely Serial Clock (SCK) and Serial Data (SDA). Single or multiple channels of I 2 C are offered by many different suppliers in a single System-On-Chip (SoC) package. Often, depending upon the type of microcon-troller, all or some channels of SCI, SPI and I 2 C buses could also be available in a single package—which is an added advantage in a typical module.  The bus voltage levels of SCI, SPI and I 2 C stay well within the speciﬁ ed digital levels. Yet, SCI, SPI and I 2 C are only meant for shorter distances, and runs within the printed circuit board or in the closer proximity. These buses have so far proved to be the de facto standards in the digital world and have been available in variety of microcontrollers, microprocessors, EEPROM, EPROM, RAM, Analog to Digital convertors, Digital to Analog convertors, ampliﬁ ers so on and so forth.  In the microcontroller applications, these buses are available in both options i.e. as a stand-alone peripheral or packaged inside the microcontrollers. Some technical publication uses the phrases like ‘on-chip’ when the function is embedded inside the microcontroller and ‘off-chip’ if a separate chip is required for the intended func-tion. At times ‘off-board’ and ‘on-board’ expressions are also exploited interchange-ably by many publications. All these digital buses have been used in automotive modules, but have restricted short-distance requirements within the modules, and have no role to play outside the modules in a typical vehicle. The question is how the vehicle modules could communicate in a distributed processing across the vehi-cle physical space?  3.14     CAN Communication Node Architecture  Vehicle modules are installed at different mounting locations where some are short or far distant from each other. The SCI, SPI, QSPI or I 2 C could not easily, economi-cally or safely (i.e. without compromising the data integrity) be deployed to transfer data among the modules in a distributed vehicle electronics architecture—so the answer to implement the capability to share information among vehicle modules rests on famous serial link recognized as controller area network.  Controller Area Network communication does not operate in master-salve con-ﬁ guration rather it is a multicast broadcast, asynchronous communication with fea-tures like:•    Carrier sense,  •   Multiple-access,  •   Collision Detection     Carrier-sense means all the nodes monitor the bus before sending the message, still, while monitoring the bus messages; all nodes have the equal opportunity to access the bus. If there is a message-collision then the sender retries to send the mes-sage, based on the retry strategy. Furthermore, CAN protocol is a message-based- scheme compared to address-based-scheme, which means that all messages appear on the bus rely on the priority of the frame data distinguished by the message identity. 3 Fundamental Blocks Topology119 Little but known, there is a scenario, where a transmitting message could address a particular node directly to request an access for a critical information to a particu-lar node by sending a remote transmission request. A remote transmission request, for example, could be initiated by an instrument cluster to inquire about the vehicle speed computed by antilock brake module.    So, the scenario in simple terms could be deﬁ ned where ‘A-module can ask B-module to get information by utilizing ‘remote transmission frame’.  A typical CAN frame, few basic features are listed below:•    An 11-bit identiﬁ er, identifying the message identity for example vehicle speed, door ajar, steering wheel position so and so forth. All messages will have a unique identity. An 11-bit identiﬁ er means a total of 2,048 uniquely identiﬁ ed messages could be deﬁ ned. (2 11  = 2,048). We skip the details of 29-bit identiﬁ er.  •   An 8-byte of data associated with each message is realized as message content, where 8-byte of data equates to 64-bits of digital information, which is a decent size of data, and not very many messages really needed to use the full 8-byte of data size. Therefore in order to efﬁ ciently use the frame and data serialization, it must be deﬁ ned early on, whether the transmitted data is full or partial. The ques-tion is how the receiver would know that the received data is full 8-byte long or partial 7, 6, 5, 4, 3, 2 or 1 byte-long? The answer to this question is to add infor-mation about the data-size by the transmitting node. The added binary bits infor-mation about the data-size is deﬁ ned as data length code (DLC), which is encapsulated in the message frame. A DLC is 4-bit long binary code.  •   As explained earlier a message could either request a particular node to get data or appear on the bus to provide data to all the nodes on the bus. When it addresses a particular node, it is named as “remote frame”, and when it appears on the bus to provide data to all the nodes, it is named as “data frame”. In order to distin-guish between data-frame and remote-frame, a bit is added by each transmission node, hereby deﬁ ned as remote transmission request (RTR) bit.     The message transmission policies, message error handling requires well deﬁ ned tasks be executed by each module connected to the bus. Such an enormous job requires pretty extensive role be played by the specialized hardware, network oper-ating software, and the application code.  The hardware encompasses the following aspects:•    Message frame construction  •   Message storage, queuing buffers, timing and handling  •   Level translation     3.15     CAN Protocol Controller  Message frame digital construction is done in registers, after storing it in the tempo-rary storage buffers. On one hand, a fully constructed frame is transferred to the computing node, and similarly handled when receiving it from the outside world. 3.15  CAN Protocol Controller120On the other hand, these stated tasks are handled by a specialized hardware dis-tinctly named as CAN Protocol Controller. It is available as an off-the shelf part, so there is no need to design logic gates, registers, ﬂ ip-ﬂ ops or precise timing synchro-nization. A CAN protocol controller hardware could be implemented inside the microcontroller or as an external hardware chip. The CAN protocol controller serves the purpose of handling CAN frames, and its ﬁ elds. It manages temporary storage of transmit and receive messages, operates on incoming digital bit streams and generates outgoing digital bit stream.  The level translator is the physical layer of OSI model, where the ‘rubber meets the road’ meaning messages are received and transmitted on the physical wires by exploiting hardware design on an integrated circuit.  The software plays vital role in knitting everything together to get the CAN bus nodes working in harmony.  3.16     Controller Area Network Transceiver  Looking back at the hardware aspects, the CAN signals are deﬁ ned differently than from the standard TTL levels. In order to generate CAN bus signal level, the mod-ules use additional translation circuit to convert the digital information into the real world, and vice versa. This additional translation circuit, which is the physical layer explained earlier is commonly referred as ‘CAN Transceivers’  As stated earlier Controller Area Network (CAN) hardware signal is a two-wire differential pair commonly called as CAN high, and CAN low. Refer Fig.  3.11  dual differential comparators are used to manage half-duplex transmit and receive tasks.   Comparator #1 remains active while receiving a message. Comparator #2 gets active when transmitting. The CAN bus levels are deﬁ ned differently than the stan-dard TTL levels or unlike the digital buses we have discussed so far. This important distinction necessitates the use of level translators to translate the digital level to the CAN bus level during the time when the bus is transmitting messages. On the other hand, this process must have to repeat itself when bus levels are required to be read by the module i.e. when the messages are received into the digital ‘world’. So, the level translators are needed to translate bus levels to digital level.  The bus is half-duplex, which means it can either perform transmit, or receive functions—only one at a time. So, in order to support half-duplex operation dual translators are usually packaged in a typical transceiver as shown in Fig.  3.11   When the messages are being received, the translator # 1 converts the CAN HI and CAN LO to a single output digital level RxD. When the messages are being sent, the translator # 2 converts the single TxD digital output to CAN HI and CAN LO differential bus drive. Note how the digital world is always receiving the binary patterns on a single-wire. However, the two opposite signals always appear on the CAN bus with a different range of voltage levels. FreeScale MC33742, Linear Technology LT1796, NXP TJA1040 and Inﬁ neon TLE6251G are some of the CAN transceivers available in the market.  3 Fundamental Blocks Topology1213.17     CAN Bus Implementation Strategies  Automotive modules follow three different CAN bus implementation strategies. It is based on assumptions that some microcontrollers are available with internal serial bus capabilities and some do not, CAN semiconductor manufacturers have success-fully come up to the physical realization of CAN bus by offering three different options listed below:   Option # 1 Parallel Port to the external Protocol Controller    Option # 2 Serial Port to the external Protocol Controller    Option # 3 Microcontroller internal Protocol Controller   •    Option # 1 Parallel Port Interface  The CAN protocol controller, and CAN transceiver are placed external to the microcontroller or microprocessor. However the CAN protocol controller is controlled by the microcontroller or microprocessor parallel Address, and Data bus. Control bus is used to signal the external protocol controller by the micro-processor/microcontroller. In Fig.  3.12  the address and data buses of Intel 8051 are connected to the Philips SJA1000, a stand-alone protocol controller. Microcontroller Data gets transferred to the controller by invoking control  signals utilizing the control bus. Consequently, CAN protocol transmit and receive lines are then fed to the CAN transceiver Philips TJA1050, a high speed CAN bus physical layer. The physical layer TJA 1050 converts the logic levels 3.5VCANHI2.5VCANLO2.5V5V1.5VRXD0V5VTXD0VCAN TransceiverMicrocontroller World21  Fig. 3.11    A typical partial CAN Transceiver        3.17  CAN Bus Implementation Strategies122(TXD, RXD) at the appropriate bus differential levels (CAN Hi and CAN Lo) and manages the direction of ﬂ ow of messages. Similar components could be replaced to get the same topology.   •   Option # 2 Serial Port Interface  It is similar to option # 1 i.e. identical external CAN protocol controller, and external CAN transceiver. However the communication between micro and the CAN protocol controller is serial rather than parallel. In Fig.  3.13 , the Microchip PIC16F883 microcontroller uses its SPI bus to talk to the CAN protocol control-ler. We chose to show an example of SPI bus; however the CAN controllers and microcontrollers are available in many options of serial buses interface like SCI, SPI or I 2C , which ever the user like to choose for a particular line of processor and CAN controller.   •   Option # 3: Internal Protocol Controller  The CAN protocol controller is packaged internally to the microcontroller. But the CAN transceiver is still placed external to the microcontroller. This is, by far the most attractive solution in the automotive industry based on the fact that it reduces the part complexity and save space on the printed circuit board. In Fig.  3.14  a Free Scale microcontroller is shown in this conﬁ guration. The Star12 or MC9S12DT1228 is a versatile processor with abundance of software con-trolled conﬁ guration features.   The PM (0–7 bits) port has the capability to do many functions and could be conﬁ gured for any function other options as well. However, in this diagram the PM0 is conﬁ gured as CAN receiver and PM1 as CAN transmit. The TXCAN0 and RXCAN0 are connected to the CAN transceiver, which is the interface between the CAN bus and the CAN protocol controller embedded in the CPU12 microcontroller.     Add/DataTXDCAN HiCAN LoControlRXDCAN BusMICROIntel 8051CAN PROTOCOLCONTROLLERPhilips SJA1000CANTRANSCEIVERNXP TJA1050  Fig. 3.12    Option # 1, external CAN Protocol Controller (Parallel Bus)       TXCANCAN HiSPICAN LoRXCANMICROMicrochipPIC16F883CAN PROTOCOLCONTROLLER MicrochipMCP2515CAN TRANSCEIVERNXP TJA1050CAN Bus  Fig. 3.13    Option # 2, external CAN Protocol Controller (Serial Bus)         3 Fundamental Blocks Topology1233.18     CAN Bus Voltage Levels  Please note that the CAN protocol controller outputs stays at TTL level. However, the output of CAN transceivers must comply to, CAN HI and CAN LO bus voltage levels as shown in Fig.  3.15    3.19     CAN Bus Software Components  Whichever option you chose to design, you are not even close to getting the CAN communication to work in a typical vehicle because some of the software compo-nents are missing. The software components play leading role in managing the net-work activities. Two major software components are needed to get the communication working up and running are:•    Network Operating Software (NOS)  •   Message-set database.     To understand both in simple terms, visualize the people around us. How they communicate with each other, it is the vocabulary of words in the language they speak. Skills of language depend on grammar and vocabulary. The grammar is the language tool to remain correct when communicating with others, vocabulary the understanding of words you must learn to make sense when they are repeated.  Similarly, in the domain of software activities pertaining to CAN communica-tion, the  N etwork  O perating  S oftware (NOS) is the ‘grammar’ of communication, and the messages transferring among the modules is the ‘vocabulary’. Each module must have to keep the ‘grammar rules’ (network software) in its memory, and also must have to memorize the ‘vocabulary words’ (message set). troPMPCAN Bus8K RAMPM1TXCAN0CAN Hi2K EEPROMCAN LoPM0RXCAN0128K FLASHPROCESSINGPM PortCAN  PROTOCOLCONTROLLERCANTRANSCEIVERNXP TJA1050    Microcontroller  Freescale  MC9S12DT128  Fig. 3.14    Option # 3, internal CAN Protocol Controller        3.19  CAN Bus Software Components124 To summarize the tasks the network operating software has to perform, here is the synopsis:•    Interfaces with the application code  •   Monitor and mitigate the bus access issues  •   Log errors  •   Support retransmission of messages when errors happened  •   Distinguish, and detect frame and understand frame types     So far we have captured three major areas of expertise i.e. CAN protocol control-ler, CAN transceiver, and CAN operating software. In order to achieve the CAN communication connectivity among the module nodes, we have to integrate all three pieces together to operate as a working node shown in Fig.  3.16 .   The microcontroller, CAN protocol controller, CAN transceiver, bus protection circuits and bus impedance matching are physically residing inside the module. The bus impedance matching is actually the combination of overall harness length, bus terminations, which majority of the times utilizes the split-termination of 60 Ω each, mounted in the modules at the farthest corner of the bus length. So, in reality only two modules at the farthest corner of the corresponding bus have to have the termi-nations in place. It is dependent on the vehicle system design whether there is a need to add more termination to balance the bus impedance and capacitive coupling to its correct value to operate the bus correctly the vehicle. The vehicle system design varies from manufacturer to manufacturer, so do the termination nodes in the cor-responding vehicle harness. Vehicle network communication system design man-dates all electronics modules to keep the provision to add termination or no termination.  An interesting feature of many automotive microcontrollers is to have the CAN protocol controller embedded inside the chip. So, the options of off-board and on- board CAN protocol controller solutions are available in the market.  The network operating software and the bootstrap loader is stored inside the microcontroller memory. The other modules installed in a typical vehicle have simi-lar nodes embedded in each module. 4.5V4.5V3.5V3.5V2.5V2.5V1.5V1.5V0V0VCAN HIGHCAN LO  Fig. 3.15    CAN HI and CAN LO speciﬁ ed levels        3 Fundamental Blocks Topology125 The microcontroller uses serial SPI bus to talk to the CAN protocol controller. CAN protocol controller generates the appropriate bit-streaming to the CAN trans-ceiver for onward delivery to the CAN bus. Similarly, when the transceiver is in receive mode, the CAN controller receives the bit streaming from the transceiver, stores it in buffers and later delivers to the microcontroller using SPI bus.  Microcontroller is supported by the network operating software to manage bus, bus messages errors and many more features. The network operating software (NOS) gets stored into the module memory. The Primary boot loader is stored in protected memory boot block inside the microcontroller, and is utilized whenever it is required to invoke communication bus—to self-program the microcontroller pro-gram memory. Additional protection components are needed to safeguard the mod-ule bus from the accidental short-to-battery and short-to-ground. CAN transceivers are available as commercial-off-the-shelf (COTS) components and some of them are available with protections circuits needed in automotive applications. An  LT1796-Overvoltage Fault Protected CAN Transceiver  made by Linear Technology is one such example.     CAN Lo  CAN Hi   CAN Lo CAN Hi       TxD RxD            SPIBUS IMPEDENCE MATCHINGMICROCONTROLLERA typical vehicle module CAN architectureCAN PROTOCOL CONTROLLERCAN TRANSCIEVERPROTECTION CIRCUITSPrimary  BootloaderNetwork Operating SoftwareOther Vehicle Modules   Fig. 3.16    Module CAN node with protection and software        3.19  CAN Bus Software Components1263.20     Battery Voltage Monitoring  A continuous battery voltage monitoring is always required by every electronics module to determine, and function correctly within the operational envelop of the module. The software algorithm must perform the battery monitoring throughout the operational envelop of the module. It is different than the abrupt power shut-down block explained in next section, which is fed to the non-maskable interrupt port. In battery voltage monitoring the signal is fed to the analog to digital port of the microcontroller (Fig.  3.17 ).   3.21     Abrupt Power Failure  Abrupt battery power failure could occur in the vehicle due to several reasons. So, it is important for the software to know when the battery power is about to go down and it must initiate a power-down sequence algorithm to keep the critical data stor-age safely stored, and then retained after power-up sequence is executed.  In order to furnish this talk, it is prudent to deploy a hardware block to detect battery voltage ramping-down. A hardware block shown in Fig.  3.18  could be designed to detect the threshold voltage at 8 V. So when the voltage goes less than 8 V, it immediately triggers a non-maskable interrupt to the microcontroller of the digital input port. The purpose of this essential block is to act extremely fast to encounter any sudden drop of voltage thereby enabling software to give ample time to execute microcontroller house-keeping and emergency power need be kept at a safe energy level.    12VDCA/D CHANNELVOLTAGE MONITORINGSAFETY & PROTECTIONSIGNAL CONDITIONERSIGNAL SCALINGMODULE MICROSoftware  Task V Monitor  Fig. 3.17    Continuous battery voltage monitoring block        3 Fundamental Blocks Topology1273.22     Exercise         1.    The vehicle manufacturer has assigned a fuse with the intention of blowing the fuse if an overload occurs. Draw a fusing strategy diagram, showing the com-plete current path including the printed circuit board traces.  The module fusing diagram is shown in Fig.  3.19    The battery is feeding the power to the module through the fuse and the igni-tion switch. However the current path includes the termination points, connector 12VDCDigital InputTHRESHOLD DETECTIONSAFETY & PROTECTIONSIGNAL CONDITIONERMODULE MICROSoftware  Task Detection  Fig. 3.18    Abrupt Power Shut-down threshold detection        Side Bar   Majority of the vehicle OEM’s do not actually design electronic control mod-ules rather outsource the development work to different companies like Panasonic, Harman and Backer, Alpine, Continental, Delphi, Visteon, TRW, Lear, Temec, Siemens, Bosch, Motorola, Denzo, and dozens of other. The vehi-cle OEMs, however, develops the speciﬁ cations of their intended design scope, needs and wants. And also support development activities required to test and validate the appropriate module in a particular vehicle. Suppliers of electronics modules are responsible for their core design, selection of compo-nents, tests, and validations. The suppliers are also responsible to submit quality and reliability data of their entire design. The electronic components used by the module suppliers must be qualiﬁ ed for the automotive applica-tions. The automotive electronic parts qualiﬁ cation in itself relies on elevated tests at higher temperatures, thermal shocks, and vibration in every possible worst case condition. An unofﬁ cial term “shake and bake” sometimes refers to the vibration and thermal testing.   3.22  Exercise128pins, wiring resistance and printed circuit board traces. Ground strategy also plays an important role when the energizing current has to complete its paths to power the module. There are multiple grounds normally utilized in a typical vehicle and it is a standard practice to use the multiple ground points in order to reduce the ground offset voltages.      2.    A vehicle is equipped with a total of 12 modules, 5 modules works only when the ignition switch is turned-on, however rest of the modules stay alive even if the ignition switch is turned-off. If each module is consuming 1.5 mA after the ignition switch has been turned-off, calculate the key-off load current (KOL)?  The total number of modules consuming key-off-load current are 12 − 5 = 7, so the battery would consume 10.5 mA (7 × 1.5 mA).  Please see the OrCAD/PSpice simulation below where each module is simu-lated by an 8K resistor to show 1.5 mA consumption for each module (Fig.  3.20 ).   Note: In the real word KOL or Dark current varies in each module  Please see another view of the identical calculation by using the TINA simu-lation where each module is simulated by an 8K resistor to consume 1.5 mA each. Please note how the digital multi-meters are connected to each module and ﬁ nally to the vehicle battery. Digital multi-meters could be easily invoked in the TINA simulation software (Fig.  3.21 ).    1 2 3 4 5 10. Connection Protection Circuit Power Supply Module Printed Circuit Board 2.Connection 3. Wiring 12.Termination Battery Fuse 4. Termination Traces 5. Termination 6. Wiring9 Wiring 7. Termination 8. Termination Traces 11. Connection Ignition Switch 1.Termination GND A GND A   Fig. 3.19    Fusing path        3 Fundamental Blocks Topology8k08k08k08k08k08k08k01.5mA1.5mA1.5mA10.5mA1.5mA1.5mA1.5mA1.5mAVehicle BatteryModule 1Module 2Module 3Module 4Module 5Module 6Module 7012V  Fig. 3.20    OrCAD/PSpice KOL or dark current calculation       8KA+-V/AVmDMM18KA+-V/AVmDMM28KA+-V/AVmDMM38KA+-V/AVmDMM48KA+-V/AVmDMM58KA+-V/AVmDMM6Vehicle Battery8KA+-V/AVmDMM7A+-V/AVmDMM8A+-V/AVDMM9Module#2Module#3Module#4Module#5Module#6Module#7Module#1  Fig. 3.21    TINA simulation of KOL or dark current calculation         130   3.    Show a Low-side switch and a High-side switch operation? (Fig.  3.22 )   A high-side driver used to drive a solenoid sourcing a current of 4.25 A (Fig.  3.23 )     2N6755VF1VF22.2K1k12V Battery5W Lamp+VG1Low Side Driver397.58mA549.74mV3.44V  Fig. 3.22    Low side driver       VF1VF2100k1k12V BatteryT15V BiasL1High Side Driver4.25A-7.17E-16V4.95V  Fig. 3.23    High side driver         3 Fundamental Blocks Topology131   4.    You are challenged to design a module performing seven (7) different functions. Assume that only one (1) function is required to be activated when the ignition key is off, two (2) functions are required to work when the driver-door is opened, and rest of the four (4) functions must work when all the doors are closed and the engine is running. Draw the Mealy state machine diagram showing module operational modes with all of its entry and exit conditions for each mode.      5.    If the maximum time allocated for an interrupt service routine (ISR) is 50 ms and that is the longest time routine in your application then what will be earliest possible time where the watch-dog timer must initiate a hardwired RESET to the microcontroller?      6.    If a Microchip CAN protocol controller MCP2515 is selected for a high-speed operation then; (a) what will be the bit timing for a single binary digit (b) Deﬁ ne logical segmentation of bit quanta’s.      7.    Draw a block diagram of a module showing switches and solenoids to control four (4) door-locks using FreeScale Star 12 processor. Also show the port assignment for the MS-CAN connectivity to other module?      VVFF11VF2FF1001k1k12VBattery5VReRRlay+-MoMtorT1High Side Driver4.03A17.5mAmm1.75V4.95V        A high-side driver used to drive a relay sourcing 17.5 mA. The relay contacts get closed and the motor starts spinning.   3.22  Exercise132   8.    Draw a simple block diagram showing protection against high energy transients when the battery terminals are abruptly removed while the vehicle alternator was still running. Assume peak energy spike at 50 V.     V1Z1L1C1C2U1R1VF1          9.    Design a protection block diagram to safeguard the module from 24VDC?     V1R2VF2Z1VF1A+-V/?A?V  3 Fundamental Blocks Topology133        10.       (a)    Draw a reverse battery protection block by using a series blocking diode.     V1R1VF1Module343.46mA11.33V           (b)    Draw a reverse battery protection block using parallel diode topology.     R1VF1V1Z1F1Module12V      The battery is simulated as V1, set at 12VDC. Fuse F1 must blow when the excessive current ﬂ ows in reverse direction because power supply polarity is applied in reverse inadvertently   3.22  Exercise134    (c)    If a module consumes 15 A, what is the drawback of using a series diode?      Simulated with trace resistance = 0 Ω. (simulation)     R1VF1BatteryA+R2V+ModuleTrace          Simulated with trace resistance = 20 mΩ. (simulation)     R1VF1BatteryA+R2V+ModuleTrace1.14V14.61A10.86V  •        The device is consuming 14.61 A  •   Voltage drop across the diode with trace resistance of 20 mΩ is 1.14  •   Available operating voltage at the module is 10.86, when the battery =12VDC               3 Fundamental Blocks Topology135© Springer International Publishing Switzerland 2015 N. Zaman, Automotive Electronics Design Fundamentals, DOI 10.1007/978-3-319-17584-3_4    Chapter 4    Power Delivery and Functional Attributes 4.1                              Introduction  Vehicles developed today are highly sophisticated. When it comes to ride and han-dling, engine performance, auto-park, collision-detection, adaptive cruise-control, safe-lane assistance, and a variety of other functions—it requires electronics with computing architectures be utilized carefully to support customer features. These extremely sophisticated functions and features are not all required to function con-currently. The non-concurrency of functions emboldens the need of smart choices to execute functions. These smart choices are dependent upon the vehicle attributes, such as whether the engine is running or not running, whether the vehicle moving or stationary, vehicle ignition switch status, engine status, or whether the doors, windows are open or closed, and so on.  In this chapter we will explore about these smart choices with special reference to module and vehicle attributes. These smart choices are interlinked with software and hardware features of vehicle and module attributes to execute the functions needed in the vehicle based on the real-time dynamic nature of information gather-ing by each individual module.  The functions are clearly required to be executed even if the ignition switch is off or ignition switch is on. A simpliﬁ ed diagram in Fig.  4.1  shows the linkage of func-tions and ignition switch status.   4.2     Power Delivery Mechanism  In order to achieve the functionality of module when the ignition switch is off there has to be a smart power delivery mechanism that must be incorporated to achieve functionality of the module. The power delivery mechanism of module is an impor-tant concept in automotive design. It affects the overall software, and hardware aspects of the modules. 136 Fundamentally, the power delivery mechanism to each module is based on the module functions. Functions like vehicle security, applicable vehicle systems, enter-tainment, and battery energy management are the key factors to categorize the mod-ules in two groups:(cid:129)    Type 1 Modules  (cid:129)   Type 2 Modules     Type 1 module gets the power when the ignition switch has turned-on as depicted in Fig.  4.2 , here a partial module is shown for the sake of simplicity. All the func-tions are either begin to function or gets ready to function after the ignition switch has turned-on. The functions are then being executed based on module and vehicle attributes explained earlier in Fig.  4.1 .   The Type 2 module gets the power, only when the S1 switch inside the module is turned-on. The ignition switch in this case is only utilized as the input interface to know the status of switch. The keep-alive circuit includes, but not limited to the microcontroller and few electronic devices required managing the incoming power to the module. The Type 2 modules are required to perform number of tasks even after the ignition switch is turned-off, and the key is removed.  4.3     Type 2 Modules Operation  Modules are designed to get power regardless of ignition switch position meaning that modules software get power even after the ignition switch has  turned-off ; like for example; a real-time clock, a song playing through the radio, a CD inserted or ejected, a remote key-less entry function or an anti-theft function, etc. The purpose of type-2 power delivery mechanism is to service customer even after the customer has exited the vehicle, but the modules in the vehicle are still required to be executing critical tasks. FUNCTIONSIgnition Switch OFFIgnition Switch ONModule Attribute FunctionsVehicle Attribute Functions  Fig. 4.1    F   unctional allocation        4 Power Delivery and Functional Attributes137 The operation of blocks (Fig.  4.2  bottom sketch) serving the Type 2 modules is listed below:(cid:129)     Input Interface  for the ignition switch is a mandatory requirement, when the module functionality governs the usage of either position like START, RUN or OFF; however unlike Type 1 modules; it is not utilized to turn-on the power to the module rather required to get the sensing circuit block to sense the ignition switch status.   (cid:2)   Keep Alive Circuit  is the section of Type 2 modules required to establish control over the S1 switch, and that is not possible without energizing the mandatory electronics switching circuits and the microcontroller. The keep-alive circuit is directly connected to the battery and requires extraordinary caution, and safety compliance to develop a robust design. Furthermore the keep-alive circuits con-sume battery energy at all-times consequently resulting key-off load current con-sumption. A key-off load current consumption is a critical module attribute that must comply with the FMVSS requirement.  (cid:129)    Power Supply and S1 Switch  operates in conjunction with each other; the switch S1 could be an external switch or embedded inside the power supply. However as can be noted that battery power is not feeding the power supply rather, an additional electronic switch S1 inside the module is connected to the battery power. The S1 switch is feeding the power supply under the control of applica-tion software. This mechanism of providing power to the module gives it a total control over its power switching, irrespective of ignition switch position. B+POWERSUPPLYINPUTINTERFACEKEEPALIVE CIRCUITS1POWERSUPPLYIgnition SwitchTYPE 2 MODULES ( module shown partially)TYPE 1 MODULES (module shown partially)APPLICATIONSOFTWARE  Fig. 4.2    Power delivery scheme        4.3 Type 2 Modules Operation138The S1 switch requires a small segment of electronics be energized at all times along with a software command to turn-on. The small piece of electronics is deﬁ ned as the keep-alive circuit; the keep-alive circuit gets energized as soon as the vehicle battery is connected irrespective of ignition switch position. The keep-alive circuit is the key enabler to perform the software controlled S1 switch operations.     A good example is safety and security module, which requires to be optimally energized to keep performing its critical functions to service vehicle safety func-tions—regardless of customer’s presence in the vehicle. In other words it does not matter if the customer has switched-off the ignition key, locked the door and got out of the vehicle—the module must function at all times—at all cost.  4.4     Type 1 Modules Operation  The module functionality rests on ignition switch on-position so that when the igni-tion switch is turned-on the module performs its function normally. In other words it means that module functionality is only required when the ignition key is in the on-position and the vehicle engine is running, in some cases. The purpose of provid-ing power in this style is to service customer when the vehicle is ready to roll. The topology is presented Fig.  4.2 . Please note how the ignition switch is directly feed-ing the power supply and the module power supply only gets the power when the ignition switch is in the ON position.  We can run through some cases like for example anti-lock braking function is not even needed if the vehicle is parked. Likewise steering control module functionality is only required when the ignition switch is turned-on and engine is running to build steering hydraulic pressure. The Type 1 modules do not require power supply soft-ware controls, so there is no need for keep-alive circuits like the one used in Type 2 module, and only gets power when the ignition switch is turned-on. The anti-lock brake module is a one good example where the module power is only needed when the ignition switch is turned-on. (It is quite logical as anti-lock braking mechanism need not to function if the vehicle is not rolling).  If the modules power is controlled by the ignition switch then there is no soft-ware component required to control the incoming power, however if the power is fed by the battery directly then the smart power supply software algorithm is needed. We will also explicate how the power to the module is partially delivered to the module electronics subject to functional needs and wants. The rationale behind the power delivery strategy is to conserve energy, and stay safe.  If a module is needed to be energized at all times like Type 2 modules then a smart power-switching, and monitoring must have to be carried out throughout the entire life-cycle of the module. This mandatory monitoring requirement has been imposed due to the fact that once the modules have been placed in a vehicle; the battery power is the only power source made available as long the vehicle battery is alive and connected. 4 Power Delivery and Functional Attributes139 However, bear in mind that the smart power-switching must have to be done with safety and intelligence in mind. Safety is critical because a continuous electrical current is ﬂ owing inside the modules.  Intelligently in the sense that the power-switching scheme must have to be opti-mized for the continuous battery power drain because an un-necessary battery drain could kill the battery. There were incidents in the automotive industry where cata-strophic damages have occurred due to the component (s) failure in TYPE 2 modules  4.5     Type 2 Modules Vehicle Life  A very important event happens when these modules begin their ‘vehicle-life’ and the vehicle battery gets connected to the vehicle electrical system for the ﬁ rst time. This ‘historical event’ happens in the vehicle manufacturing line where the module and its associated vehicle harnesses and interfaces are connected and operational. As soon as the vehicle battery is electrically connected, the module gets energized and within a very short time ready to become operational, and from that point onwards the module smart software algorithm meant for power supply switching mechanism takes control of the module power management scheme for the rest of its ‘ energized-happy-vehicle-life’.   In essence, these modules could only go ‘lifeless’ if the battery is disconnected for any reason or discharged below a minimum voltage level. The module smart software determines the requirement of providing operational power to the module by monitoring the ignition switch activity sensed through the input interface circuits as shown in Fig.  4.2 . By knowing the position of ignition switch, it decides when to toggle the S1 switch. Toggling S1 switch ultimately controls the module power, and when the S1 switch is placed to off position the module enters in the sleep-mode, where it consumes minimum power to conserve battery energy. There are modules in a typical vehicle to perform critical functions even when the ignition switch is in the position of “start” meaning when engine is cranking. Engine cranking is a short- duration event that lasts less than ½ s, yet, the sophisticated electronics inside vehi-cle electronics has to perform functions to perform many tasks related engine start sequence.  4.6     Module Functional Attributes  It is high time to discuss the details of module functional attributes. It is an impor-tant concept being applied across the board in the vehicle applications. It is deﬁ ned as the module readiness to perform pre-deﬁ ned tasks under a well-deﬁ ned set of conditions. It could be re-stated in other words that it is the state of hardware and software readiness to execute various well-deﬁ ned tasks by the module. 4.6 Module Functional Attributes140 In order to solidify the understanding of module attributes, we deﬁ ne an imagi-nary module namely ‘Clock Display Module’. The purpose of this imaginary mod-ule is to clearly learn, how different modes of operation could occur in a typical module. However this is not a real life example, and meant only for the purpose of education. The module functional attributes are also referred by different naming conventions such as ‘Power Modes’ or ‘Power Moding’ in the industry.  The imaginary “Clock Display Module” has the following hardware speciﬁ cations:    1.    A display to display hour and minutes      2.    A computing node to compute time.      3.    An input electronics interface to learn if the ignition switch is in RUN position      4.    An input electronics interface to learn the vehicle speed.      5.    An output interface to turn-off or turn-on the display      The Clock Display Module has the following functional behavior (   Fig.  4.3 ):  (cid:2)   Always compute real time even if the vehicle speed is zero and ignition switch is not in RUN position   (cid:2)  Monitor vehicle speed, but do not display time or vehicle speed   (cid:2)  Display vehicle speed if vehicle speed is >50 mph   (cid:2)  Display time if vehicle speed is >50 mph     We now deﬁ ne our three modes of operation:  When the ignition switch is OFF, the module stays at  Sleep mode , where it com-putes the time, but does not displays time, rather keeps the time computation inter-nal to computing node but with dynamic updates, however it does consumes a minimal level of current.  When the ignition switch is ON, the module enters in  Standby mode , while in standby mode it monitors the vehicle speed, still computes the time but does not displays it.  When the vehicle speed reaches to 51 mph the module enters to  Operational mode  and at that moment it displays both the vehicle speed and time together.  Both time and speed display stays-on while the module remains in operational mode, but once the vehicle speed falls below 25 mph, the display turns off and no time or vehicle speed is visible to the customer. The modes can be explained in a state transition diagram shown in Fig.  4.4 .  HourMininuteElectronicsDisplayVehicle SpeedEmbedded Controller  Fig. 4.3    An imaginary clock display module        4 Power Delivery and Functional Attributes141 Please note how every attribute has an entry and exit condition. But for the sake of simplicity, the Sleep Mode entry condition is not shown, let’s assume that some condition like ﬁ rst time battery power turning on is the entry point for the sleep mode.  The purpose of this imaginary module is to clearly understand the conditions like sleep-mode, standby-mode and operational-mode. The question comes to mind why we need all these modes? Well!, it helps to partition the software and hardware where it follows many fundamental software engineering principles like coupling, cohesion, information-hiding etc.    Sleep ModeStandby ModeOperational ModeIGNSW=RUNIGNSW=OFFVSS>50mphVSS<25mph  Fig. 4.4    State transition diagram        4.6 Module Functional Attributes143© Springer International Publishing Switzerland 2015 N. Zaman, Automotive Electronics Design Fundamentals, DOI 10.1007/978-3-319-17584-3_5    Chapter 5    Fundamental Blocks Design 5.1                        Introduction     So far, we have studied the basic topology of many fundamental blocks exists in a typical electronics module. We can now go a little deeper into understanding the basic design of each block with a simple circuit design, to solidify our understand-ing with the topology.  In order to design such a block, we have to deﬁ ne our hardware and software requirements. A simple arbitrary requirement would sufﬁ ce to understand each block. After we have deﬁ ned and understood the arbitrary requirements of a particu-lar block, we can then walk our way through the hardware topology by using SPICE software meant for the electronic design simulation. SPICE stands for Simulation Program with Integrated Circuit Emphasis.  Although SPICE in itself is a general term whose fundamental principles are mirrored in many SPICE programs available in the market, such as SABER, OrCAD/PSpice, LT Spice (Linear Technology), TINA (Texas Instruments Nodal Analysis), MultiSim, SPICE 3F5, XSPICE from Georgia Tech, ADISim by Analog Devices and numerous more. In addition to these programs, which can be install in your computer, an on-line SPICE tools are also available like WEBBENCH by Texas Instruments, or CIRCUIT Lab by a company named Circuit Lab and TINA Cloud by TINA.  SPICE takes a fundamental step towards the software deﬁ nition of an electronics design; it builds the mathematical models of electronic components for active and passive components deﬁ ned as SPICE models. The SPICE models are the core fun-damental building blocks of any SPICE program. The models made available either by original software company or through many other contributors. The technology of software electronics modeling is far advance that majority of semiconductor manufacturers’ offers the SPICE models free of charge at their web site. The soft-ware design tools space that uses the computing power to solve the equations 144of electronics, semi-conductor behavior, and logical outcomes of sequential,  combinational, and VHDL logic are categorize as electronic design automation abbreviated as EDA. The EDA tools have established an extremely powerful pres-ence in the industry, for not only the electronics circuit design and simulation, but also one-step ahead by adding the intelligence of printed circuit board design auto-mation. The printed circuit board automation are so powerful in nature that it even-tually generates real world productivity Gerber outputs ﬁ les that are essentially required by the board-house to build printed circuit boards. The board house requires Gerber ﬁ les because it deﬁ nes the copper layers, components layout, silk-screen, traces, trace- widths, board size, solder-mask, and drill information required for the machines that crank out wonderful printed circuit boards.  However If you are not familiar with SPICE software, just treat it as a sophisti-cated graphing calculator, which can do electronics calculations based on semicon-ductor behavior when connected electrically with linear and non-linear devices appropriately. Nevertheless, please bear in mind that while conducting the analysis all electronics simulations require mathematical models of each active and passive device to run through an automated way of simulations and calculations. Throughout the chapter, you will see the graphs, and plots based on calculations with sophisti-cated modeling behavior of circuits and design.  The simulation software usage is a common practice in electronics design and automotive design space is no exception. Simulation of automotive electronics design achieve lots of corrections right before it goes wrong—earlier than the prac-tical circuit implementation takes place.  Following are the key advantages of using the SPICE software:    1.    Design, tweak, test and verify before building the practical circuits. Hence, you do not have to buy parts, make printed circuit board or use breadboard to work on it.      2.    Design, and calculate the optimal operating conditions and consequently deter-mine the operational envelop best ﬁ t to the application      3.    Determine the boundary conditions over temperatures variations, and voltage ranges that may affect the design of the module.      4.    Calculate optimal design behavior under varying conditions by running statisti-cal analysis like Monte Carlo estimation, root-sum square and extreme value analysis.      5.    In general, the technique of worst-case circuit analysis is utilize in the industry to reduce upfront testing-cost, and shrink the development time to learn the behavior of a design before the real printed circuit board is materialized. Indeed—it is rather quicker to react and redesign within the realm of computer aided electronics design tools rather than to recover after the prototype printed circuit board is build.  A good analogy is an airplane ﬂ ight simulator, where a trainee pilot could ‘crash-land’ hundreds of times without damaging the airplane or impacting a single human life compared to a real ‘crash-landing’ that may end up with an unimaginable consequences. 5 Fundamental Blocks Design145 A worst case circuit analysis 1  and simulation is analogous to a ﬂ ight simula-tor, where design engineers can ‘crash land’ hundreds of times before a viable design comes to existence that saves the product development team dozens of hardships in the real world if the error of design is transferred to an actual prod-uct on a printed circuit board. The worst-case circuit analysis is a mathematical process to ﬁ nd out effects on the circuit due to component tolerances, voltage changes, temperature variations, and part manufacturing variations—in normal and extreme environments. On top of that, statistically driven tasks over the selected parameters can be perform to determine the variations of the key- parameters of circuit design over a wide range of randomly selected conditions.      6.    A question may be ask why we need to worry for so many parameters in an auto-motive design.—simply answered, we have to design electronics for a vehicle that could be moving in coldest to warmest weather, highest to lowest peaks, and over the plane ﬁ eld where people may be driving under or below the sea level. Last but not the least through the world of unseen radiant energy surrounding all of us every day. This unseen radiant energy radio frequency spectrum meant for many different reasons in the system are like:      •    Cell phone transmitting towers, boosters, repeaters,      •    Radio stations transmitters,      •    TV stations transmission,      •    Powerful radar transmitters,      •    GPS or GNSS satellite signals      •    Electromagnetic effects of vehicle being driven      •    Electromagnetic effects of local or far distant objects from upper atmosphere like sun or others in our environments.      •    Car-to-Car interference like the one being propose for the intelligent transporta-tion systems.      We will use one of the electronic design automation categorized as EDA soft-ware tool where we could deploy multiple SPICE models to simulate the designs. The purpose of this exercise is to give our valued reader the idea of a circuit topol-ogy, and an intuitive design for the purpose of education. We will try our best to design it in the simplest possible way to augment one’s understanding of each block.  However, these circuits are drawn here for the purpose of understanding the con-cepts, and it lags many industry standard techniques to ﬁ ne tune for the vehicle usage, so do not try these circuits without understanding the real world usage in a typical vehicle.  Here is the orderly list we like to follow through this chapter:    1.    Battery Switching Circuit Design      2.    Ignition Switch Start Circuit Design      3.    Sensors Power Switching Circuit Design   1   Worst Case Circuit Analysis is abbreviated as WCCA in the industry. 5.1  Introduction146   4.    A Low-Side Output Device Driver Circuit Design      5.    A High-Side Output Device Driver Circuit Design      6.    B+ Detection Circuit Design      7.    B+ Monitoring Circuit Design      8.    Input Sensor Signal Design      9.    Reset Circuit Design      10.    Reverse Battery Protection Circuit Design      11.    Power Supply Design      We have to deﬁ ne what we intend to design to furnish any of the circuit design listed above. We can deﬁ ne it by expressing it at different abstraction levels like 0, 1, 2, 3 purposefully to communicate clearly—exclusively written for this book. Nevertheless, there is no such ofﬁ cial deﬁ nition like abstraction levels 0, 1, 2, 3 but just to engage readers’ interest and understanding:•    Abstraction Level 3: a short descriptive statement  •   Abstraction Level 2: a simple block diagram with a truth table  •   Abstraction Level 1: a block diagram of the electronics design  •   Abstraction Level 0: an actual schematics of electronics design     Please note that for the sake of simplicity we are purposely avoiding the timing considerations, impedance matching, and software requirements.  Requirements capture is a great topic in any design, and automotive design space is no exception. It is an area of engineering, where requirements capture necessi-tates disciplined approach of hardware, software and system integration deﬁ nition. In the automotive design space, integration of software and systems in a typical vehicle plays a vital role for the success of module electronics when installed in a typical vehicle.  5.2     Battery Switching Block Deﬁ nition  Let us deﬁ ne the battery switching block at all abstraction levels, 3,2,1,0 5.2.1     Abstraction Level 3: A Short Description •     Design a battery switch that can handle a maximum current of 1 A to the intended load  •   Turn-on the battery switch to apply power to the intended load when the output port of microcontroller changes to logic one.  •   Turn-off the battery switch to remove power from the intended loads when the output of microcontroller switches to logic zero     5 Fundamental Blocks Design1475.2.2     Abstraction Level 2: A Simple Block Diagram with a Truth Table  Please refer to Fig.  5.1  and its truth table as the level 2 abstraction. The block dia-gram shows that we need to drive a high-current switch by utilizing a low-current switch. The power input “Vin” will then be switch as “Vout” available for the exter-nal load. The “Vcontrol” originates from the microcontroller to turn on the low power switch that eventually turns on the high power switch.   The truth table is deﬁ ned to switch “Vin” to Vout when Vcontrol logic = 1, the Vout will switch to 0 V when the Vcontrol logic = 0. In addition to that, when the Vcontrol is in the Hi Impedance state the switched output is OFF or 0 V  The reasons listed below:•    It saves the sink current from the microcontroller not to exceed to its limits  •   It acts as a buffer or a safety circuit so that it should not expose directly to the external interface to protect itself from damage, should there be a faulty condition.  •   It can bias the power transistor efﬁ ciently to drive it into saturation.     5.2.3     Abstraction Level 1: Designed Blocks and Interfaces  The level 1 abstraction depicted in Fig.  5.2  is the implementation of electronic switches deﬁ ned earlier in the abstraction level 2 namely low-power switch and a high-power switch. The implementation zoomed in and re-deﬁ nes a low power digital- switch and a high power switch (S2) with the intention of showing how the high-level interconnections to the battery, fuse and ultimately the switch S2 is used to transfer power to the vehicle-loads—arranged to provide power either to a low- side driver or a high-side driver. The battery is feeding the switch S2 through the fuse intended for safety purposes.  VinVoutTruth TableVcontrolVinVout012V0V112V12VHi-Z12V0VHIGH POWER SWICTHLOW POWER SWITCHMICRO OUTPUT PORTVcontrol  Fig. 5.1       Battery switch requirements        5.2  Battery Switching Block Deﬁ nition148 Nevertheless, our intent and scope here is to design the circuit to toggle S2-switch using microcontroller digital output port with the assistance of a Digital-Switch. The Digital-switch is like a pilot switch to bias the S2-switch and ultimately the S2-switch is utilize to transfer the battery power to the intended loads. The digital- switch can be deﬁ ne as a digital transistor that will be implemented in the circuit. The digital transistors are commonly available through different manufacturers to support many such designs.  5.2.4     Abstraction Level 0: Switched Battery Schematics  Figure  5.3  represents the classic example of a battery switching circuit at the abstraction level 0, where the hardware is fully deﬁ ne with actual components selected for the design.   The schematics is showing the actual schematics with simulated load, simulated microcontroller output and simulated battery power to understand how the circuit would behave when each of the inputs and output are selected to a ﬁ xed value or varied. It is standard to perform the circuit design this way because these are the inputs and outputs of the design.  The V1 power supply is actually simulating the microcontroller output, where we can sweep the voltage from 0 to 5 V. It is customary in any SPICE software to represent a microcontroller logic output by a voltage source; indeed, in the real world a logic output from the microcontroller is a voltage source with limited cur-rent sourcing capabilities. Battery             Fuse Battery SwitchS2 SwitchH-DriverLoadDigital-SwitchLoadL-Driver Digital PortMicro Bias to turn-on S2  Fig. 5.2    Battery switching application block diagram: abstraction Level 1        5 Fundamental Blocks Design149 The V2 power is the battery power available for the switching transistor to deliver power to the load, the value can vary from 11 to 13.5 V to simulate for the design, but the software allows varying to other values as well.  The resistor R4 represents the loading of the device, which can tailor to the current- loading best ﬁ t as per the transistor data sheet of Q8. In place of a load resis-tor, a solenoid-load, a lamp-load or a relay-coil-load can be a good alternative.  At 10 Ω-resistive-load, it is consuming about 1.302 A, calculated by the OrCAD/PSpice bias-point simulations shown in Fig.  5.4 . The ﬁ ltered power supply simu-lated by V2, where it can simulate voltage from 11 to 13.5 V, however for the sake of simplicity it is deﬁ ne as the ﬁ xed power of 13.5VDC. Nevertheless, our intent and scope is to design the circuit to toggle S2-switch by utilizing the microcon-troller output so that it could turn-off or turn-on the battery power to the intended load. The circuit uses a digital transistor BCR103 to drive the BD234 to function like battery switch. The BD 234 could handle 1.5 A.   Figure  5.5  represent the simulation of the circuit behavior when the test probes are connected to switching transistor (Q8) collector and emitter, the collector is driving power to the loads, the V1 simulates the microcontroller output.   The plot shows the behavior of the low-power digital transistor (Q4) switches to saturation when logic 1 is applied, which then turns on Q8. The battery voltage V2 waiting at the emitter of Q8 then transfers to the external loads. The input and output switching transfer function is simulated using PSpice/OrCAD simulation software. As can be noted that the switching transistor Q8 is in full saturation when V1 = 3 V, please see the switched battery output plot and the plot shown in Fig.  5.5 . The test probes can be notice in Fig.  5.3 .  VVVR3433K21C3.1u120R4102100V213.5VdcQ4BCR103 FILTERED BATTERY SIMULATIONQ8BD234R333.3K21C2.1u12 SIMULATING MICRO OUTPUTInfineonVout[11V to 13.5V]Vcontrol[0 +5V]V150 SIMULATING DEVICE LOAD  Fig. 5.3    Battery switching circuit abstraction level 0        5.2  Battery Switching Block Deﬁ nition150  Fig. 5.4    OrCAD/PSpice battery switching circuit bias points       V_V10V1.0V2.0V3.0V4.0V5.0VV(Q8:c)V(C2:2)V(Q8:e)0V5V10V15VBattery Power SwitchedBattery PowerMicrocontroller Simulated Output  Fig. 5.5    OrCAD/PSpice battery switching circuit simulation         5 Fundamental Blocks Design1515.2.5     Temperature Envelop Testing  A very powerful feature of EDA tools is to ﬁ nd out the effectiveness of electronics design over a wide range of variations. One of the attribute we must ﬁ nd out is tem-perature base performance of the design. In order to do so, we ran the temperature analysis at 85, 70, 27 and −40 °C as shown in Fig.  5.6 . The analysis is showing wide margin of switching voltage at Q8 transistor because switching at 85 °C = 2.5 V, 70 °C = 3 V, 27 °C = 3 V and −40 °C is around 4 V forming the range of 2.5–4 V. As we established earlier that microcontroller output is simulated, so in order to know exactly how the microcontroller output would behave over the temperature range of 85 to −40 °C we must refer to microcontroller data sheet and make sure that logic levels guaranteed over the temperature range are good for the design.    5.3     Ignition Start Sensing Block Deﬁ nition  Let us outline the scope and deﬁ nition of a very simple Start Sensing Block. The Start Sensing Block is required to sense the position of the ignition switch at the ‘START’ detent position. However, it is known facts that while the engine is cranking, the battery voltage immediately dips, and cycles through the dips for a short period of time until the engine auto ignition kicks in and it begins to run. It happens due to an extremely high current surge towards the starter motor. Therefore, the START circuit must take into account the voltage dip of 6 V to work correctly. V_V10V0.5V1.0V1.5V2.0V2.5V3.0V3.5V4.0V4.5V5.0VV(Q4:3)V(Q8:c)V(R33:1)0V5V10V15VB+ SwitchMicrocontroller Output85C27C70C-40C  Fig. 5.6    OrCAD/PSpice battery switching circuit temperature analysis        5.2  Battery Switching Block Deﬁ nition1525.3.1     Abstraction Level 3: A Descriptive Statement  We deﬁ ne here a level translator to convert ignition switch voltage as below:•    The start switch position sensed by the electronics.  •   The start switch must translate voltage level of 0 V to 16 V to a TTL logic level.  •   The start detent position must translate 0–9 V range as TTL logic level 0  •   The start detent position must translate 10–16 V range as TTL logic level 1     These conditions are valid when ignition switch is place at the start position. In other words, when the input reads to logic 0 V, the switch position is at start detent and when the voltage read out is less than 9 V, it indicates that battery voltage is dipping due to engine cranking.  5.3.2     Abstraction Level 2: A Simple Block Diagram with a Truth Table  The simple block diagram is showing how the ignition switch is connected to the protection mechanism then to a level translator and ﬁ nally to the microcontroller output. The truth table shows that translator must function to output Vout as 5 V to the microcontroller when the voltage is in the range of 10–16 V, whereas it must read to 0 V when the voltage is in the range of 0–9 V (Fig.  5.7 )   5.3.3     Abstraction Level 1: Designed Blocks and Interfaces  The designed block diagram is showing how the ignition switch is connected to the protection mechanism then to a level translator, and ﬁ nally to the microcontroller input. A high level shows how the ignition switch is interface with the protection block. As a standard practice, the protection is always required when inputs or out-puts are expose to the vehicle wiring. In this particular case, protection and level- translation is just like killing two birds with one stone (Fig.  5.8 ).   5.3.4     Abstraction Level 0: Ignition Switch Start Schematics  Figure  5.9  represents the classic example of Ignition switch circuit at the abstraction level 0, where the hardware is fully deﬁ ne with actual components selected for the design.   The schematics is showing the circuit with simulated ignition voltage, simulated microcontroller input port and simulated module power to understand how the cir-cuit would behave when each of the inputs and output are selected to a ﬁ xed value or varied. 5 Fundamental Blocks Design153 As depicted, the V3 is simulating the ignition voltage, so it could vary from 0 to 12 V. The microcontroller input port is simulate at 1,000 K impedance loading to emulate sink-current, and the module power is adjusted at 5 V to bias the Q7 transis-tor. The Zenor diode D3 is place to limit the voltage at 4.7 V and additionally to bias the transistor Q5 at an appropriate voltage subject to series resistor value.  We have installed three probes to the circuit, one at the ignition voltage source, one at the base of Q5 and one at the input of the microcontroller digital port. The purpose VinVout5V0VVin10V -16V0V -9VPROTECTIONLEVEL TRANSLATORVoutMICRO INPUT PORTTruth Table  Fig. 5.7    Ignition switching abstraction level 2       OFF P1ACC P2   B+RUN P3START P4    Digital PortIgnition SwitchLevel TranslatorProtectionMicro   Fig. 5.8    Ignition switching application block         5.3  Ignition Start Sensing Block Deﬁ nition154is to understand the circuit proﬁ le when the ignition source is varied from 0 to 12 V. We will review the dynamic behavior later, but let us see how the circuit is react-ing in static calculations deﬁ ned as bias points.  5.3.5     Bias Point Analysis  We can do different type of calculations based on our needs. First, let us do the bias point calculations at 12 V ignition voltage shown in Fig.  5.10 . As we see the micro-controller, digital port is sitting at 4.995 V warning microcontroller that ignition voltage is stable and the engine is not cranking. The beauty of the EDA tool is just to plug the value of 12 V at V3, run through the bias point simulation and you will see the revised calculated value in the window   Let us continue to perform bias point simulation to see what happens when  ignition voltage drops to ≤6 V—which happens when engine is cranking.  The EDA tool allows you to quickly, plug in the new value of 6 V at V3, and here you go after running through the bias point simulation. The value at the micro digital VVVQ5BCR103 SIMULATING IGNITION VOLTAGEInfineonV3120Q7BCR562R291000K210MICRO DIGITAL PORTV45VInfineon5V MODULE POWERR301k21R3115K21D3BZV55C4V7  Fig. 5.9    Ignition switch start schematics        5 Fundamental Blocks Design155port drops to 6.483 μV, which essentially is logic 0 consequently meaning that engine is cranking.  Now it is the turn of microcontroller, embedded software to do the magic of per-forming tasks needed for the module operation (Fig.  5.11 ).   Another important attribute worth showing here is to see how quickly and easily “current (I)” and “wattages (W)” can be compute in a fraction of second just by pressing the “I” button or “W” button to see the values (Figs.  5.12  and  5.13 ).    Figure  5.14  represent the simulation of the circuit behavior when the test probes are connected to the ignition simulation voltage, base of the switching transistor and the input of the microcomputer digital port.   The plot shows the behavior of the low-power digital transistor (Q5) switches to saturation when the ignition voltage is in the range of 10–12 V indicating the condi-tion that engine is not cranking. During the window of 10–12 V the microcontroller input is reading 4.995 V that equates to logic 1. However, when the voltage dips below 9.5 V the microcontroller is reading logic 0 indicating a crank condition.    Fig. 5.10    Bias point calculations at V3 = 12 V        5.3  Ignition Start Sensing Block Deﬁ nition1565.3.6     Temperature Envelop Testing  The temperature envelop testing is extremely important, and it must be carefully performed to understand the circuit behavior of electronic components in a typical vehicle. It is a well-established fact that different types of temperature related fail-ures have been witness and reported in the industry. The temperatures we see in our daily life like in summer and winter seasons. There is a condition in automotive design segment refereed as cold cranking prevalent in cold weather when battery voltage could dip as low as 3 V due to cold cranking, attributed to many factors like frigid temperatures, engine-dynamics, starter-motor and battery-chemistry. The new advance vehicles are increasingly adapting start-stop engine control, where a smart algorithm shuts-down the engine when not needed and re-starts when needed, like for example at trafﬁ c stop. The engine shut-down and restart sequence is con-trolled by the electronic engine controller thereby spawning a new era of fuel- saving method for the customers, where customers without even initiating an engine-crank or engine shut-down could notice that a smart computer is taking control of engine   Fig. 5.11    Bias point calculations at V3 = 6 V        5 Fundamental Blocks Design157start and stop events. The smart way of engine controls necessities the use of elec-tronics and ignition crank signal sensing in more profound way than it was predi-cated in the early day of automotive electronics (Fig.  5.15 ).    5.4     Sensors Power Switching Block Deﬁ nition  Let us outline the scope and deﬁ nition of sensors power switching block. The sensor- switching block is required to apply power to the sensors in the system. Sensors do not consume high current rather these are categorize as low-current devices. However, control of power to apply power to the sensors is part of the overall system design strategy. The reason being that, it is not desired to power sensors unnecessar-ily for many good engineering reasons including battery power conservation to sus-tain long time beneﬁ ts of key-off load current that consequently works in the favor of vehicle battery life, customer beneﬁ t, and the car manufacturer.   Fig. 5.12    Bias point calculations at 12 V, selected window is I (Current)        5.4  Sensors Power Switching Block Deﬁ nition158  Fig. 5.13    Bias point calculations at 12 V, selected window is W (Wattage)       V_V30V2V4V6V8V10V12VV(R29:2)V(D3:AN)V(R31:1)0V4.0V8.0V12.0VQ5 BaseMicrocontroller Input PortIgnition Voltage Simulation  Fig. 5.14    Ignition Switch Plot showing translation of 12 V to 5 V         5 Fundamental Blocks Design1595.4.1     Abstraction Level 3: Descriptive Statement  We deﬁ ne here sensors power-switching block with features list below:•    The sensors switching block controls the power to the external sensors.  •   The control is establish by a microcontroller.  •   The sensors switching block will get the regulated power for the external sensors  •   The sensor switch will turn-on to provide power to the sensors when logic 1 is applied to the switch  •   The sensor switch will turn-off to disconnect power to the sensors when logic 0 is applied to the switch  •   The applied voltage from the regulator to the sensors must not drop more than 300 mV at full-load when conserving 10 mA to the sensors     5.4.2     Abstraction Level 2: Sensors Switch Block Diagram with a Truth Table  The simple block diagram is showing how the regulated output connected to the regulator switch, whereby regulator switch is transferring the regulated output to the sensors. The regulator switch is control by the microcontroller output.  The truth table shows when micro logic 0 is applied to the regulator switch, the Vout will output 0 V, however when logic 1 is applied the regulator switch turned-on and transfers the Vreg to the Vout (Fig.  5.16 )   V_V30V1V2V3V4V5V6V7V8V9V10V11V12VV(D3:AN)V(Q7:3)V(R31:1)0V4.0V8.0V12.0V  Fig. 5.15    Ignition switch plot showing temperature effects        5.4  Sensors Power Switching Block Deﬁ nition1605.4.3     Abstraction Level 1: Sensor Switch Designed Blocks and Interfaces  The designed block diagram is showing how the sensor switch S3 connected to the sensors regulator power and then feeds to the sensors. The S3 switch is control by the digital switch driven by the logic output of the microcontroller (Fig.  5.17 ).   5.4.4     Abstraction Level 0: Sensor Switch Schematics  Figure  5.18  represents an example of sensor switch circuit as the abstraction level 0, where the hardware is fully deﬁ ne with an actual components selected for the design.   The schematics is showing the real components in the design with simulated sen-sor voltage, simulated microcontroller output port and simulated vehicle wiring to understand how the circuit would behave when installed in the vehicle.  As depicted, the V5 is simulating the sensor voltage, so it could vary from 0 to 5 V. The microcontroller output port is simulated by Vcontrol = V6 that could be adjusted to 5 V to bias the Q10 low-current digital transistor, consequently switching the secondary digital transistor to transfer sensors power to the sen-sors. An important addition to the circuit is the simulation of vehicle harness to ensure proper voltage is deliver to the sensors even if the resistance of the wiring has changed over the life of the vehicle, and/or under extreme temperature conditions.  We have installed three probes to the circuit, one at the sensor power source, one at the base of Q10, and one at the sensors power-receiving end. The purpose is to understand the circuit proﬁ le when the microcontroller output vary from 0 to 5 V.  Vreg  VoutVout0VVreg01 Regulator SwitchLow Power SwitchLogicMicrocontroller Output PortTruth TableMicro Logic  Fig. 5.16    Sensors power switching abstraction level 2        5 Fundamental Blocks Design1615.4.5     Bias Point Analysis  The ﬁ rst thing we like to conduct is to make sure that the circuit is not performing incorrectly meaning that sensor power has not turned on when not desired, so let’s check the circuit at 2 V from the micro output. The 2 V output must not turn on the transistor. So, in Fig.  5.19 , the bias point analysis selected at 2 V, which is the output of the microcontroller. The result indicates that the sensor switcher (Q12) has not turned-on, and the sensors are not receiving 5 V from the sensor regulator as could S3 SwitchSensorsDigital-Switch Digital PortBias to turn-on S3Micro Sensors Regulator  Fig. 5.17    Sensors power switching abstraction level 1       Q12VVVR371K21R380.2521L11uH12WIRING SIMULATIONdta114R351K21C40.01120R54.7k2100V55VSENSOR POWER SIMULATIONR3633k21C5.1u12 SIMULATING MICRO OUTPUTVout[4.75 TO 5.25]Vcontrol[0 +5V]V630 SIMULATING SENORS 1,2,3Q10dtc124R6620210R72k210  Fig. 5.18    Sensors power switch schematics abstraction level 0         5.4  Sensors Power Switching Block Deﬁ nition162  Fig. 5.19    Sensors power switch bias points V6 = 2 V       be noticed in the simulating sensors 1,2,3 block, where it shows 5.372 nV with an extremely low-current consumption for each sensor. It is a great helping tool to understand the circuit behavior just by tweaking the values deemed important to do the sanity check on the design.   In Fig.  5.20 , however, the bias point analysis selected at 3 V, which is the output of the microcontroller. The result indicates that the sensor switcher (Q12) has turned-on, and the sensors are now receiving 4.672 V from the sensor regulator as could be noticed in the simulating sensors 1,2,3 block. Also notice, how each sensor is now consuming some current like 7.5 mA, 994 μA, and 2.33 mA. At Q12-emitter, a total current draw for the sensors is 10.99 mA that matches the sum of currents,   In Fig.  5.21 , all probes attached to sensor regulator, microcontroller output, and the sensor switcher is simulated. The DC Sweep from 0 to 6 V is selected for the microcontroller output to test the circuit behavior. The simulations shows that at 2.5 V the transistor begins to go in to the saturation and at 3 V it is in full saturation providing power to the sensors, also notice the drop of voltage for the sensors mainly due to transistor (Q12) drop.   5 Fundamental Blocks Design163  Fig. 5.20    Sensors power switch bias points V6 = 3 V       V_V60V1.0V2.0V3.0V4.0V5.0V6.0VV(Q10:b)V(R35:2)V(Q12:c)0V2.0V4.0V6.0VSensor SwitcherMicrocontroller OutputSensor Regulator  Fig. 5.21    Sensors power switch simulation         5.4  Sensors Power Switching Block Deﬁ nition164V_V60V1.0V2.0V3.0V4.0V5.0V6.0V... V(Q10:b)... V(R35:2)... V(Q12:c)0V2.0V4.0V6.0V  Fig. 5.22    Sensors power switch temperature envelop testing        Additionally the circuit can be simulate to do many different analyses like:•    Sensor regulator voltage sweep to check for optimum voltage selection.  •   Vehicle wiring resistance changes to check the drop in the vehicle wiring  •   Sensors current consumption to check for minimum and maximum values     5.4.6     Temperature Envelop Testing  The useful feature of temperature envelop testing is conducted at different tempera-tures shown in Fig.  5.22 . As could be noticed that sensor switcher turned-on voltage has widen, and now it begins to operate from 2 to 3 V. It is important to run through many iterations of the design in different scenarios to learn useful attributes of the design like what happens to the sensor current consumption at extreme temperatures. Alternatively, what happens to the sensor switcher when the microcontroller logic levels are affect by the temperature variation? On the other hand, what happens to the regulated output over the temperature variations?   It is not always possible to run every parameter for a wide range of options by drawing just one single schematic. Therefore, it is necessary to perform many other  5 Fundamental Blocks Design165tasks to connect the dots of worst-case circuit analysis to make the full use of design tool. In case of sensor power switching example, we need to be reviewing the  microcontroller data-sheets and/or running the worst-case circuit analysis of sensor- regulator power-supply separately to complete the analysis.  All EDA tools are helpful tools, but in the realm of automotive electronics design it is not the panacea for the wide range of vehicle electronics design needs that involves wiring, harness, terminations, distributed processing architecture, high- current devices and unknown factors embedded software.   5.5     Low-Side Output Device Driver 5.5.1     Abstraction Level 3: Descriptive Statement  We deﬁ ne here a low-side driver to drive an external load. The key features listed below:•    The low-side driver is required to drive a load connected to the power.  •   The low-side driver must provide power to the load when logic level 0 is applied  •   The low-side driver must turned-off power to the load when logic level 1 is applied  •   The low-side driver must be capable of delivering 10 A of current continuously.  •   The microcontroller must be able to read the status of the low-side driver.     This low-side driver must add the capability to report to the microcontroller that the load has received power, and it is operating appropriately after the command from the microcontroller has executed.  5.5.2     Abstraction Level 2: A Low-Side Driver Block Diagram with a Truth Table  The simple block diagram is showing how the low-side driver connected to the power, load and the MOSFET drive. The MOSFET drive is taking commands from the microcontroller, and when the logic 0 apply, the load gets energized because the MOSFET switch will complete the ground path to the load.  The truth table shows MOSFET drive will drive the MOSFET Switch to provide ground path to the load when logic 0 is applied, however on the contrary the ground path will stay incomplete when logic 1 is applied—disabling the load to get ener-gized (Fig.  5.23 ).   5.5  Low-Side Output Device Driver1665.5.3     Abstraction Level 1: Low-Side Driver Designed Blocks and Interfaces  The low-side switch designed block diagram is showing how the load has connected to the low-side switch that connects to the ground path. The low-side MOSFET switch gate driven by the MOSFET drive. There is a feedback mechanism, which has over-voltage protection, and level-translation mechanism to transfer informa-tion back to microcontroller that the load has energized or not energized. This acts as a closed-loop mechanism incorporated for the software to verify if the intended operation indeed executed. When the software sees, negative results it kicks-off fail- safe strategy algorithm to mitigate the impact to the system operational features. As a standard practice fuse connected between the path of energizing source (battery) and the load (Fig.  5.24 ).   5.5.4     Abstraction Level 0: Low-Side Driver Schematics  Figure  5.25  represents an example of low-side switch circuit at abstraction level 0, where the hardware fully deﬁ ned with actual components selected for design with all the SPICE models deployed.   The schematics is showing the actual circuit with simulated microcontroller input and output, and simulated vehicle wiring to understand the voltage drop across PowerMdriveMOSFET SwitchONOFFLogic 1PowerFeedbackLoadMOSFET DriveMOSFET SwitchGNDTruth TableMdriveGndLogic 0  Fig. 5.23    Low-side driver abstraction level 2        5 Fundamental Blocks Design167the wiring. There is a differential probe connected across the simulated wiring to learn how much voltage drop has encounter when the load current is around 10 A. The load current of ~10 A consumes when a resistive load of 1.2 Ω connected to the P-Channel MOSFET.  As depicted, the V10 is simulating the microcontroller output, so it could vary from 0 to 5 V. The microcontroller input port simulated at 1,000 K impedance  loading to emulate a typical microcontroller input loading. The battery power has adjusted to 13.5VDC to apply power to the load connected to the low-side driver.  The Zenor diode D4, placed to limit the voltage at 4.7. Additionally it utilizes to feed the voltage-divider resistors to provide digital information to the microcon-troller, signaling if the MOSFET has turned-on or turned-off.  We have installed four probes to the circuit, one differential voltage probe mea-sures across the L2 and R42 simulating the vehicle wiring, one voltage probe at the input of microcontroller, and one load-current measuring probe at the MOSFET to learn how much load-current is being consumed.  The Q6 digital transistor kicks in to apply 12 V to the voltage-controlled biasing of MOSFET, and when Q6 is in full saturation, the MOSFET is off because source to drain voltage is zero. We will review the dynamic behavior later, but let us see how the circuit is reacting in static calculations by using bias points.  Battery             FuseLow-side SwitchMOSFETLoadMOSFET Drive Digital PortProtection Digital PortLevel ShiftMicro   Fig. 5.24    Low side driver application diagram        5.5  Low-Side Output Device Driver1685.5.5     Bias Point Analysis Low-Side Switch Is Off  In Fig.  5.26 , bias point calculations simulated at 5 V or logic 1. As computed, the low-side switch is not conducting and the logic at microcontroller is indicating logic 1. This is very important for the software to know that switch is off. The other place is vehicle wiring showing no voltage drop. (13.50–13.50)   0PSMN025-100DR420.1021L20.25uH12VEHICLE WIRING SIMULATIONV+VIV-R391.2210V713.5D4BZV55C4V7R401K210Q6BCR103R411k21C7.1u12SIMULATING MICRO OUTPUTInfineonVcontrol[0 +5V]V1050SIMULATINGDEVICE LOADSIMULATING MICRO INPUTR461000K210R431K21R441.2k21R451.2K21  Fig. 5.25    Low side driver schematics with feedback        5 Fundamental Blocks Design1695.5.6     Bias Point Analysis: Low-Side Switch Is On  In Fig.  5.27  bias point calculations simulated at 0 V or logic zero meaning the switch have to be completely turned-on. As computed, the low-side switch is in full- saturation and the logic at microcontroller output logic has programmed it to logic zero.   At the simulated microcontroller input, it is reading 186.4 μV, which is logic 0, so the software must treat logic zero as the switched-on condition. On the contrary, the logic 1 reads when the switch is off. The other place to look is vehicle wiring, show-ing voltage drop of 64 mV (13.50–12.48), which is valuable information to learn about the actual voltage 12.48 at the load after a drop of 64 mV. The most critical thing is to note that the overall current passing through the MOSFET is around 10 A. The simulations are performed at ambient temperature of 25 °C, however if we perform the temperature envelop testing, we can ﬁ ne tune the design for summer and winter temperatures.     Fig. 5.26    Bias point calculations at V10 = 5 V        5.5  Low-Side Output Device Driver1705.6     High-Side Output Device Driver 5.6.1     Abstraction Level 3: Descriptive Statement  We deﬁ ne here a high-side driver to drive an external load. The key features listed below:•    The high-side driver is required to drive a load connected to the switch.  •   The high-side driver must provide power to the load when logic level 1 is applied  •   The high-side driver must turned-off power to the load when logic level 0 is applied  •   The high-side driver must be capable of delivering 6 A of load current  •   The microcontroller must be able to read the status of the high-side driver, so that it could know if the control applied is the control achieved.      Fig. 5.27    Bias point calculations at V10 = 0 V        5 Fundamental Blocks Design171 This high-side driver must have to have additional circuit to report to the micro-controller that the load has received the power and it is operating appropriately after the command from the microcontroller executed.  5.6.2     Abstraction Level 2: A High-Side driver Block Diagram with a Truth Table  The simple block diagram is showing how the high-side driver connected to the power, load and the MOSFET drive. The MOSFET drive is taking commands from the microcontroller, and when the logic 1 applies, the load is energize because the MOSFET switch will provide power to the load.  The truth table shows MOSFET drive will drive the MOSFET Switch to provide power to the load when logic 1 is applied, however on the contrary the power to the load will not be switched to the load when logic 0 is applied—disabling the load to get energized (Fig.  5.28 ).   5.6.3     Abstraction Level 1: High-Side Driver Designed Blocks and Interfaces  The high-side switch designed block diagram is showing how the load, connected to the high-side switch that is connected to the power. The high-side MOSFET switch gate has driven by the MOSFET drive. There is a feedback mechanism with VdcMdrivePowerMOSFET SwitchOFFONFeedbackGndPowerTruth TableMOSFET SwitchMdriveLogic 0Logic 1LoadMOSFET Drive  Fig. 5.28    High-side driver abstraction level 2        5.6  High-Side Output Device Driver172protection and level translation mechanism to transfer information back to the microcontroller whether the load has energized or not energized. This closed-loop incorporated for the software to verify if the intended operation was indeed success-ful. Nevertheless, when the software sees unsuccessful results it kicks-off fail-safe strategy algorithm to mitigate the impact to the system operational features. As a standard practice, fuse is connected between the path of energizing source (battery), to the high-side switch and ﬁ nally to the load (Fig.  5.29 ).   5.6.4     Abstraction Level 0: High-Side Driver Schematics  Figure  5.30  represents high-side switch as the abstraction level 0, where the hard-ware has fully deﬁ ned with actual components selected for the design.   The schematics is showing the components with simulated microcontroller out-put, simulated microcontroller input port and power to the high-side switch. The PCB trace simulation has added to check voltage drop across the traces because the n-channel MOSFET can be place on a circuit board.  As depicted V11 is simulating the microcontroller output, so that it can be switch to logic-zero or logic-one. The microcontroller input port simulated at 1,000 K and it is reading the high-side switch status, so when the switch has turned-on it reads logic 1, and when the switch has turned-off, it reads logic 0.  The Zenor diode D4 is place to limit the voltage at 4.7 V and additionally to the voltage divider to feed logical voltage to the simulated microcontroller input port. The D4, R52, R53 and R54 are performing the protection and level translation.  We have installed ﬁ ve probes to the circuit, one voltage-probe at the digital  transistor, one current-probe at high-side switch and one voltage-probe to the input Battery             FuseHigh-side SwitchMOSFETLoadMOSFET Drive Digital PortProtectionLevel ShiftMicro   Fig. 5.29    High side driver application diagram        5 Fundamental Blocks Design173of the microcontroller. The last two probes installed across the PCB trace resistor simulator to measure the voltage drop across the PCB traces.  We will review the dynamic behavior later, but let us see how the circuit is react-ing in the static calculations by using bias points.  5.6.5     Bias Point Analysis: High-Side Switch-On  The high-side switch shown in switched-on condition. The current draw at the load is 6.40 A. The voltage drop across the PCB traces is 64 mV (13.50–12.86). It is important information for the PCB designers in order to compensate for the VIVV-V+V10A/20Vmmsf4205/ON0R470.1021PCB Trace SimulationR482210V813.5D5BZV55C4V7R49330210Q9BCR103R501k21C8.1u12SIMULATING MICRO OUTPUTVcontrol[0 +5V]InfineonV1100SIMULATINGDEVICE LOADSIMULATING MICRO INPUTR511000K210R521K21R531.2k21R541.2K21  Fig. 5.30    High side driver schematics with feedback to microcontroller        5.6  High-Side Output Device Driver174high- current load factor that must account for a better trace width, and grounding. There are design rules checks (DRC) for the PCB layout where this information needs to be factor in for better performance.  The simulating microcontroller output selected at 5 V and the read out at the digital transistor Q9 is showing full-saturation as the current ﬂ ows through is about 39 mA. The high-switch is in full conduction state and 6.40 A of current is ﬂ owing through the load.  The simulating microcontroller input is reading logic 1 to convey to the software that the high-side switch had turned-on after the software had sent the command to turn it on (Fig.  5.31 ).   5.6.6     Bias Point Analysis: High-Side Switch Cut-Off  The high-side switch shown in switched-off condition. The current draw at the load is 13.52 μA. The voltage drop across the PCB traces is zero (13.50–13.50).  The simulating microcontroller output selected at 0 V and the read out at the digital transistor Q9 is showing cut-off state as the current ﬂ ows through it is about   Fig. 5.31    Bias point calculations at V11 = 5 V        5 Fundamental Blocks Design17517 pA. The high-side switch is not in conduction state and a 13 μA of current is ﬂ owing through the load.  The simulating microcontroller input is reading logic 0 to convey to the software that the high-side switch had turned off after the software had sent the command to perform a switch off condition (Fig.  5.32 ).   5.6.7     Simulation Analysis: High-Side Switch  Figure  5.33  is showing how each probe has gathered data when the simulating microcontroller voltage has changed from logic 0 to logic 1. The gate to drain volt-age shows conduction has begun around ~2 V and NMOS switch is in full- saturation when it is near zero. The load-current of 6.4 A indicates that NMOS switching is valid and the electrical current is passing through the load. Also can be seen is the voltage-drop.      Fig. 5.32    Bias point calculations at V11 = 0 V        5.6  High-Side Output Device Driver1765.7     B+ Detection Block 5.7.1     Abstraction Level 3: Descriptive Statement  We deﬁ ne B+ Detection block as follows:•    The B+ Detection block will monitor the abrupt battery voltage drop  •   The B+ Detection block will detect the voltage ≤8.5 V  •   The B+ Detection block will detect the voltage ≥9 V  •   The B+ Detection block will immediately declare abnormal condition if the  voltage falls below a certain threshold  •   The B+ Detection block will not declare any abnormal condition if the voltage is above to a certain threshold.     5.7.2     Abstraction Level 2: B+ Detection Block Diagram with a Truth Table  The simple block diagram is showing how the B+ detection is being realize. It is feeding the B+ detection block and then generating a fast output to inform that bat-tery voltage is going down.  The truth table shows when B+ voltage is below 8 V, the detection-circuit trig-gers a logic 0 to the microcontroller. In the second scenario when the voltage is greater than 9 V, it changes to logic state 1 (Fig.  5.34 ).   V_V110V0.5V1.0V1.5V2.0V2.5V3.0V3.5V4.0V4.5V5.0VV(Q9:3)V(R47:1,R49:2)V(R54:2)I(10A/20V:s)V(Q9:1)051015DROP ACROSS WIRINGMICRO OUTPUTSWITCH STATUSREAD BY MICROGATE T TO DRAIN VOLTAGELOAD CURRENT ~6.40A  Fig. 5.33       Simulation conducted with Five Data Probes        5 Fundamental Blocks Design1775.7.3     Abstraction Level 1: B+ Detection Designed Blocks and Interfaces  The B+ Detection designed block diagram is showing how the battery connected to the low-voltage detector, and then to a level translator to inform microcontroller that the battery voltage has suddenly dropped and the software must perform housekeep-ing tasks to store critical information deemed necessary to the memory registers. Like for example, many customer settings, which were stored before the battery voltage had abruptly dropped below the threshold (Fig.  5.35 ).   5.7.4     Abstraction Level 0: B+ Detection Schematics  Figure  5.36  represents B+ Detection schematics as the abstraction level 0, where the hardware fully deﬁ ned with actual components selected for the design.   The schematic is showing the components with simulated microcontroller input and simulated battery voltage source.  The Zenor diode D1 and resistor R2 are place to limit the voltage to set the threshold of detection. Q4 and Q5 perform the switching and inform to the micro-controller that the battery voltage has suddenly dropped. We had explained earlier that this block is essential to give software enough time to execute housekeeping tasks. In other words, this input to the microcontroller is like a non-maskable inter-rupt triggering a service routine to store all the critical information related to cus-tomer and the memory. B+ Micro <=8.5VLogic 0>=9VLogic 1Truth TableB+B+ Detection  Fig. 5.34    B+ detection block abstraction level 2        5.7  B+ Detection Block178 We have installed two probes to the circuit, one voltage-probe at the battery volt-age, and the second probe to the microcontroller input. The simulation programs the battery voltage to go from 0 to 15 V to check what happens to the microcontroller digital input.  In Fig.  5.37 , the circuit is simulated and it is showing that when the battery volt-age is at ≥9 V, the microcontroller input port is reading logic 1 and when the voltage is below 8.5 the logic 0 is being read.   5.7.5     Temperature Envelop Testing  The tests shows variation of B+ detection at the microcontroller port for 27, 70 and −40 °C, the operational envelop is 8–9 V (Fig.  5.38 )    Battery      Digital PortLevel TranslatorLow Voltage DetectorMicro   Fig. 5.35    B+ detection abstraction level 2       R23.3KR31kV18V25VR51000K0Q4BCR103Q5BCR158D11N409912Simulating Battery VoltageSimulating Micro PortC1.01uVV  Fig. 5.36    B+ detection abstraction level 0         5 Fundamental Blocks Design1795.8     B+ Monitoring Block 5.8.1     Abstraction Level 3: Descriptive Statement  The purpose of this monitoring block is to engage and disengage voltage operational envelop of the intended module design. The software has the authority to log faults or no-faults or downgrade the functional performance. A deg-radation of performance is possible based on module classiﬁ cation. It is for this very reason that the monitoring is done “24/7” hours, minutes and every seconds. We deﬁ ne B+ Monitoring block as follows:•    The B+ Monitoring requires monitoring the B+ voltage  •   The B+ Monitoring is performed to determine the actual battery voltage at all times  •   The B+ Monitoring performs by the microcontroller ADC port.     V_V10V1V2V3V4V5V6V7V8V9V10V11V12V13V14V15VV(R2:1)V(R5:2)0V5V10V15VMicro Detection PortB+ Voltage  Fig. 5.37    B+ detection simulation       V_V10V1V2V3V4V5V6V7V8V9V10V11V12V13V14V15VV(R2:1)V(R5:2)0V5V10V15V  Fig. 5.38    B+ detection simulation at 27, 70 and −40 °C         5.8  B+ Monitoring Block1805.8.2     Abstraction Level 2: B+ Monitoring Block Diagram with a Truth Table  The simple block diagram is showing how the B+ monitoring carries out. The B+ line feeding the B+ monitoring block and then sending this to the microcontroller ADC port. The truth table shows B+ voltage is being monitored in the range of 0–15 V, if the voltage exceeds 15 V or go below 0 V, the system will respond as out of range (Fig.  5.39 ).   5.8.3     Abstraction Level 1: Designed Blocks and Interfaces  The abstraction level 1 designed blocks are shown in Fig.  5.40 , where battery volt-age is being scaled down to be handled by the microcontroller system after a protec-tion is placed to avoid any exceedingly unwanted overvoltage condition.   5.8.4     Abstraction Level 0: B+ Monitoring Schematics  Figure  5.41  B+ Monitoring schematics as the abstraction level 0, where the battery voltage is realized at full scale 16 V, and the voltage divider is realized to read full- scale 5 V, so keeping the microcontroller ADC ports safe and within the range.   The simulation conducted in Fig.  5.42  shows the battery voltage-range and the scaling to the ADC port. The accuracy of measured values is the subject to number B+ Micro 0-15VA/D PortB+ MonitoringTruth TableB+  Fig. 5.39    B+ monitoring block abstraction level 2        5 Fundamental Blocks Design181of bits used by the ADC port. A 10 bits to 12 bits ADC sufﬁ ce to monitor the battery voltage to engage or disengage the operational envelop of the automotive intended module design.   Two additional factors also require attention for the design, a very stable ADC reference voltage required by every ADC as a standard design practice, and the power supply used by the ADC like 5 or 3.3 V. If the microcontroller is functioning at 3.3 V then the scaling must reﬂ ect 3 V full-scale and if it is operating at 5 V then it could go to 5 V.   5.9     Input Signal Senor Block  There are many types of sensor used in a typical vehicle like knock sensor, pres-sure sensor, mass-air ﬂ ow senor, rain sensor, windshield washer sensor, cam-shaft position sensor, wheel-speed sensor, sun-load sensor, ambient light sensor, position sensor so on and so forth. In all cases, the physical existence of quantity Battery      A/D PortProtectionMicro Voltage Scaling  Fig. 5.40    B+ monitoring block abstraction level 1       V313.5R81000K012Simulating Battery Voltage10bit ADCPortR947KR10100KVV  Fig. 5.41    B+ monitoring block abstraction level 0         5.9  Input Signal Senor Block182must converted into electrical voltage or current, so that it can be present as dis-crete, analog or digital format. The typical applications of sensors are being real-ized by utilizing many different types of sensors like piezoelectric, optical, hall-effect, capacitive, thermocouple (Peltier effect principle) or by many other type of sensing mechanism.  A fundamental principle applies that electrical signal proportional to the physical quantity must be converted to a well-deﬁ ned electrical scale readable by the elec-tronics. The correlation of sensing quantity verses electrical representation can be deﬁ ne by a transfer function. The transfer function dictates how the software must function based on the input range of the senor. It is critical to accurately deﬁ ne and measure the physical quantity, lots of upfront work is required before a reliable, and repeatable measurement is established.  However, transfer function is additionally dependent on the electronics inter-faced with the sensor, so no matter how accurate, repeatable and perfect a sensor can be; the signal conditioning electronics is the key factor for the accurate mea-surements. To make an accurate signal-conditioning network, a lot of upfront detailed design work must complete, where tolerance of components over the oper-ational envelops must satisfy accurate representation of signal and mitigate the measurement inaccuracies.  5.10     Reset Block  A reset is an input to the microcontroller to initiate code execution stored in a pre- deﬁ ned memory space directed by the reset vector. Reset line in some of the micro-controllers is bidirectional to allow other devices to get reset signal from the microcontroller. Nevertheless, reset is an extremely sensitive circuit that must be V_V30V1V2V3V4V5V6V7V8V9V10V11V12V13V14V15V16VV(R10:2)V(R8:2)0V4V8V12V16VVoltage at ADC PortBattery Voltage  Fig. 5.42       B+ monitoring simulation battery scaling to ADC port        5 Fundamental Blocks Design183design with great care. In order to send a reset correctly, the power to the microcon-troller must also be monitor by a voltage detector to track stable output by the aid of comparators, and after that, a valid reset signal is issued to the microcontroller. 5.10.1     Abstraction Level 3: Descriptive Statement •     The reset pulse must be generated when the input voltage above a pre-deﬁ ned value  •   The reset pulse must not be generated if it is not in the pre-deﬁ ned window of operation  •   The reset pulse must reject all sorts of noise and should not spuriously issue a reset pulse to the microcontroller.     5.10.2     Abstraction Level 2: Reset Block Diagram with a Truth Table   The simple block diagram is showing how the reset achieved in typical microcon-troller environments. The supply voltage detected by the detector circuit, and fed to the comparator. The comparator determines if the supply set point has reached sta-ble condition to send signal to a triggering mechanism that issues a valid reset (Fig.  5.43 ).   5.10.3     Abstraction Level 1: Reset Block Designed Blocks and Interfaces  This a power-on reset topology, so when the regulated power providing power to the microcontroller is stabilized; a reset is issued to the microcontroller. As could be noticed that the regulated power is feeding the reset electronics and as well as the microcontroller. If you are thinking that there has to be, a delay added to the reset circuit before the reset has issued then you are right in your understanding—we need to give enough time for the microcontroller power to stabilize before a reset has issued to the microcontroller. On top of that, it is extremely important to wait for the crystal clock provided to the microcontroller is stabilize. We need to make sure that the power to microcontroller and the crystal clock is stabilize before a valid reset has issued (Fig.  5.44 ).   5.10  Reset Block1845.10.4     Abstraction Level 0: Reset Block Schematics  There are many options in the form of off-the-shelf reset IC is available in the mar-ket that can be utilize in the module reset circuit design. These integrated circuits so cleverly designed that it captures the under-voltage, and/or over voltage set-pints to issue a valid reset. Also embedded is the ﬂ exibility to adjust the set points, and the ﬂ exibly of adjusting the incoming voltage being monitored.  These integrated circuits are extremely beneﬁ cial in the industry to countermea-sure false and spurious reset issues mainly due to the advantages of precise com-parator threshold adjustments made inside the silicon chip. The variations over the time and temperature has known, and guaranteed. The accuracy of such scale is difﬁ cult to achieve if discrete components have made to work on a printed circuit board for a particular application or a module design. An important aspect of auto-motive module microcontroller’s reset worth sharing is the fact that some modules Supply VoltageDetectorComparatorTriggerResetSupply VoltageResetUnstableNo ResetStableApply ResetTruth Table  Fig. 5.43    Reset block abstraction level 2       Regulated Output        ResetComparatorDetec(cid:2)onMicro Delayed Trigger  Fig. 5.44    Reset block abstraction level 1         5 Fundamental Blocks Design185receives reset only once in lifetimes in a vehicle, and after that—protected by the smart software restarts as long as battery is alive and connected.  There were ‘old school times’ when a pulled-up RC circuit could be added with a Schmidt trigger on to the reset line of a Zilog Z-80 microprocessor, and that actu-ally works in the lab, however in today’s vehicle harsh electrical environments, those days are over. The automotive design space has already learned many tricks of the trade to make a reliable and robust reset design and strategy for a typical system, module and components due to inherently noisy environments inside the vehicle.  Microchip Technology Incorporated had introduced the concept of brown-out- reset in their line of microcontrollers. Where a low voltage detection namely brown-out- detection (BOD) generates a brown-out-reset (BOR) to keep the microcontroller under safe operational envelop, it has determined that a low-voltage paradox could initiate a false binary data in the memory, triggering an unpredictable program exe-cution lead to a data or code error in the memory bits i.e. operation-code or operation- end (OP-CODE, or OPERAND)  A long-duration sustained brownout condition in an automotive module design is avoidable because there is a well-deﬁ ned low-voltage detection mechanism that kicks-off an early warning. The early-warning triggers the shutdown sequence algo-rithm already retained in the artwork of module fundamental blocks. Nevertheless, at the start-up sequence a narrow window of reset brownout condition could be a possibility, which require counter measure by designing a reliable power supply that passes the tight transient and thermal proﬁ le over a wide range of input voltages. A gradient of input voltage and temperature on a slow test proﬁ le is the key require-ment to make sure that the reset functions engages and disengages correctly in the real world. At the end of the day, nonetheless, the actual electronics hardware must undergo detailed electrical and thermal overstress not just the EDA software tools.  The TPS3700 is an off-the-shelf reset integrated circuit manufactured by Texas Instruments to function as a reset circuit, it monitors the incoming voltage with set points that could generate active-low and active-high reset signals. The device can be utilize as a window comparator or as an independent comparator for two  different supplies monitoring. It is design to work with wide power supply range of 1.8–18 V. The details of many different types of applications are available by looking at the data-sheet of TPS3700.  The TPS3700 simulated in TINA and presented in Fig.  5.45 . The application circuit is placed with three test probes namely  SENSE1 ,  OUTA :  2 ,  OUTB :  3 . The R1, R2 and R3 are adjusted to set the trigger points. It is subject to the application to tailor the design as per needs and wants of the microcontroller reset.   The voltage being monitored is simulated using V_MON voltage generator, pro-grammed to 15 V max with an interval of 1 ms ramp-up, 1 ms constant and then 1 ms ramp down.  A time domain transient analysis is conducted for 3 ms to see how the window comparators are responding when the incoming voltage V_MON is applied through R1, R2 and R3, where relationship of R1, R2 and R3 are explained in the datasheet of TPS3700 2  (Fig.  5.46 ).  2   Texas Instruments Data sheet TPS3700-Q1 SLVSCI7A—March 2014—Revised April 2014. 5.10  Reset Block186 It is always a best practice to review the data sheet with great care to under-stand the part usage recommended design practice. After all, the integrated elec-tronics is solely design by the semiconductor manufacturer, but the buyer is adapting that ‘baby’ for his own interest, and environment. Another example uses two separate power supplies being monitored V_MON1 and V_MON2 (Figs.  5.47  and  5.48 ).     5.11     Reverse Battery  A reverse battery protection block is essential for all modules intend to be install in vehicles where battery is the primary source of energy. The reverse battery protec-tion is part of a ‘packaged deal’ namely safety and protection mechanism that V1 3.3C1 100n+V_MONR1 2.5MR3 69.3kR2 13.7kR4 49.9kR5 49.9kSENSE: 1OUTA: 2OUTB: 3TPS3700TRANSIENT MODELINA+GNDINB-OUTBVDDOUTAU1 TPS3700_TRANS  Fig. 5.45    Reset block abstraction level 0       SENSEOUTAOUTBTime (s)0.001.00m2.00m3.00mSENSE0.0020.00OUTA0.004.00OUTB0.004.00OUTBOUTASENSE3.3V11.5V13.1V  Fig. 5.46    Reset timing simulation         5 Fundamental Blocks Design187includes double battery, and load-dump. It is assume in this section for this block that other two protections are already in place. The reverse battery protection can be achieve by deploying three different topologies:•     Topology 1 :  A series diode be utilize if the module is not consuming high current and the drop-across the diode will not impact the safe operational envelop of the module functions under extreme conditions.  V1 3.3C1 100nR1 2.2MR3 100kR4 49.9kR5 49.9kOUTA:2OUTB:3TPS3700TRANSIENT MODELINA+GNDINB-OUTBVDDOUTAU1 TPS3700_TRANS+V_MON2R2 100kR6 390k+V_MON1  Fig. 5.47    Reset schematic monitoring two separate sources       OUTAOUTBV_MON1V_MON2Time (s)0.001.00m2.00m3.00mOUTA0.004.00OUTB0.004.00V_MON10.0020.00V_MON20.005.00V_MON2V_MON1OUTBOUTA  Fig. 5.48    Reset timing two separate sources simulation         5.11 Reverse Battery188•    Topology 2:   A reversely placed diode be utilize if the vehicle fuse is require to blow under reversed battery polarity condition. A detailed analysis is require to carry out to make sure that the fuse sizing and timing is correct for ‘both parties’ and not ‘hurting’ each other. A slow-fuse or over-rated fuse size could easily ‘toast’ the module electronics, or traces.  •    Topology 3 :  An MOSFET switch can be utilize serving two purposes:      1.    It will not allow reverse current to ﬂ ow due to source to drain reverse biasing      2.    It will give gate control to the microcontroller to actually turn-off or turn-on through the gate      3.    It can be wire in either topology i.e. a high-side switch or a low-side switch      4.    It can be place at either the battery + line or battery negative line         If it is desire to make use of gate control to apply or remove module power then there is one pre-condition to meet to utilize the MOSFET switch. The microcon-troller must be power up by a separate source, so that the gate control is achieve.  In case it is not required to control the switch then the gate can be bias directly from the source power. 5.11.1     Abstraction Level 3: Descriptive Statement •     Design a circuit where a series diode could protect against the reverse battery connections deﬁ ned in Topology 1  •   Design a circuit where a reversely placed diode could protect against the reverse battery connections deﬁ ned in Topology 2  •   Design a circuit where a MOSFET could protect against the reverse battery  connections deﬁ ned in Topology 3     5.11.2     Abstraction Level 2: Reverse Battery Series Diode Block Diagram with a Truth Table  A simple block diagram of Topology 1 is showing how the series diode is not  allowing a reverse polarity damaging impact be applied to the module electronics (Fig.  5.49 )   A simple block diagram of Topology 2 is showing how the reverse diode is utilize to blow vehicle system fuse before any harm to the electronics. The key factors in order to successfully blow the fuse, rests on fuse timing, fuse characteristic, module electronics components, and off-course the printed circuit board traces (Fig.  5.50 ).  5 Fundamental Blocks Design189 A simple block diagram of Topology 3 is showing how a MOSFET switch is utilized to protect against the reverse polarities, what it does, it never allows current to ﬂ ow through the circuit when battery polarity is reversed—essentially means no damage to the electronics—because MOSFET gets reversed biased due to battery reversed polarity. An added advantage is gate control that allows external control if needed by the module design. However, it is an option available for the design engi-neer (Fig.  5.51 ).   VinVinReverse PolarityCorrect PolarityModuleSeries DiodeElectronicsNo PowerNormal PowerModuleTruth Table  Fig. 5.49    Reverse battery series diode abstraction level 2          ModuleVinFuseVinReverse PolarityCorrect PolarityReverse DiodeElectronicsVehicleTruth TableModuleBlown FuseNormal Power  Fig. 5.50    Reverse battery reverse diode abstraction level 2         5.11  Reverse Battery1905.11.3     Abstraction Level 1: Reverse Battery Designed Blocks and Interfaces 5.11.3.1     Series Diode  The schematics of series diode is shown here to demonstrate the fact that at the load- current consumption of 2.25 A, it has the diode drop of 747 mV and the voltage at the module is measured 11.25 V as simulated. If the module was design to handle the drop across the diode, and works ﬁ ne for all the intended functions in extreme value temperature and voltage conditions then it is a classic example of series diode utilization against the reverse-battery protection (Fig.  5.52 ).   The simulation reconstructed by connecting the battery with reverse polarity. The current consumed and the voltage across the module load is showing no sign of damaging current through the module. When selecting the diode keep in mind that the diode junction must be capable of suppressing initial surge current when it is reverse biased (Fig.  5.53 ).   5.11.3.2     Reverse Diode  The schematic of reversed diode shown below to demonstrate the fact that at load- current of 2.39 A, the voltage across the module is 11.95 V. As could be noticed that when operating correctly the diode has no role to play, it is just an inert semiconductor- junction placed in reversed order. However when the polarity of the battery termi-nals are reversed, the diode loops back inrush-current through the fuse and passes ModuleVinVinReverse PolarityCorrect PolarityElectronicsTruth TableModuleNo CurrentNormal PowerMOSFET  Fig. 5.51    Reverse battery MOSFET abstraction level 2        5 Fundamental Blocks Design191through the battery path that eventually blow the fuse. It is a technique successful in the real world of automotive electronics design. However, the module will not func-tion after the blown-fuse, so the replacement instructions must issue to the cus-tomer, and then the replacement of fuse must carry out to re-energize, and reinitialize the module (Fig.  5.54 ).   The schematic shown below modiﬁ ed in order to place battery in reversed order. It can be notice that there is no damaging current passing through the module. The simulation conducted had actually showed the blown fuse by marking ‘x’ across the fuse. It is understandable why the fuse has blown? As we already know that battery could deliver in excess of 100 A (subject to battery speciﬁ cation), so the weakest link in the circuit must ‘surrender’, and the weakest link designed to be is the Fuse.  Yet, a ‘dilemma’ of mismatched components (fuse, diode, wiring, printed circuit board trace) could damage other components. Please bear in mind that the fuse is not placed inside the module, it is part of the vehicle fuse-box (Fig.  5.55 ).   D1 1N1206R1 5Battery 12A+Load Current+-A?VmDVMV+VModule Load11.25V-2.25A  Fig. 5.52    Normal battery series diode schematics abstraction level 0       D1 1N1206R1 5Battery ReversedPolarityA+Load CurrentV+VModule Load-180.06nV36.01nA  Fig. 5.53    Reversed battery series diode schematics abstraction level 0         5.11  Reverse Battery1925.11.3.3     P-FET Reverse Protection  The schematic of P-MOS reverse battery protection shown here. The gate is bias by the negative potential and correctly turning the P-MOS in saturation, the current is ﬂ owing normally. A potential drop across the P-MOS has measured, and displayed by the simulation.  It is important to understand that the topology drawn here to convey the existence of an option. In this speciﬁ c case, for example, the drain-to-source on-resistance (Rds on) is high and a drop of 354 mV as recorded by the measurement DVM. In real life, select an optimum P-FET with a minimum drop. Additionally, it is worth noting here that a high gate-to-source voltage may be stressful to the junction, so in order to protect that high electrical stress, a zener protection is applied. Last but not the least semiconductor companies like ST Microelectronics, International Rectiﬁ ers and Inﬁ neon have developed line of MOSFET that can be utilize in reverse battery protection with additional beneﬁ ts of low Rds-on at higher currents. The MOSFETs gate can also have a soft-start to mitigate the high in-rush current of the module if desired. A soft-start is a processor of slowly, ramping up the inrush current to avoid stresses on the module electronics (Fig.  5.56 ).   The schematic reconstructed by changing the battery polarity, the P-MOS is reverse biased, and there is no current ﬂ owing across the module. The DVM is read-ing 12 V indicating that the P-MOS is in the cut-off region. The load current is 27.02 μA, positively indicating that no damaging current is ﬂ owing through the D2 1N1183R2 5Battery 12A+Load CurrentV+VFuse 3.15AModule Load11.95V-2.39A  Fig. 5.54    Reversed diode normal operation       D2 1N1183R2 5Battery ReversedPolarityA+Load CurrentV+VF1 3.15AModule Load-60pV12pA  Fig. 5.55    Reversed diode abnormal operation         5 Fundamental Blocks Design193module. The module voltage is reading 270.18 nV indicating correctly that there is nothing available for module to get the reversed power (Fig.  5.57 ).   5.11.3.4     N-MOS-FET Reverse Protection  The schematic is reconstructed for the N-channel MOSFET connected with the bat-tery negative terminal, it is similar to P-MOSFET reverse protection in the earlier example, however the N-MOSFET is being utilized and it is functioning correctly when the polarity is correct, and the drop across the transistor is 456 mV, the module is getting 11.54 V at the load current of 1.15 A (Fig.  5.58 ).  R4 10 V + Across Load Battery 12 A + Load Current + - A ? V - m DVMT1 2N6849 Module Load -1.16A 11.65V   Fig. 5.56    Battery correctly connected P-MOS normal Operation       R3 10V+Across LoadBattery Reversed ConnectionsA+Load Current+-AVDVMT3 2N6849Module Load27.02nA-270.18nV?  Fig. 5.57    Battery polarity reversal P-MOS abnormal operation         5.11  Reverse Battery194 The schematic reconstructed by reversing the battery polarity, the N-MOS is reverse biased, and there is no current ﬂ owing across the module. The DVM is read-ing 12 V indicating that the P-MOS is in the cut-off region. The load current is 8 μA, positively indicating that no damaging current is ﬂ owing through the module. The module voltage is reading 80 μA indicating positively that there is nothing available for module to get the reversed power (Fig.  5.59 ).     R8 10V+Across LoadBattery 12A+Load CurrentT2 2N6757+-A?V-mDMM2 1kModule Load-1.15A11.54V  Fig. 5.58    Battery polarity reversal N-MOS normal operation low side       R9 10V+Across LoadA+Load CurrentT4 2N6757Battery 12+-AVDMM1 1kModule Load8uA-80uV?  Fig. 5.59    Battery polarity reversal N-MOS abnormal operation Low Side         5 Fundamental Blocks Design1955.12     Power Supply Block  The power supply topologies that are being realize in automotive modules have diversiﬁ ed in nature. There are different ﬂ avors of power supply topologies avail-able as an option for the automotive module design team like for example:•    Linear Regulators  •   Discrete Regulators  •   Switch Mode Power Supplies (SMPS)  •   Low Dropout Regulators (LDO)     Linear, Discrete and Low dropout are all same family of regulators, however due to their different scenarios of usage these are named differently—although not for-mally. However, it is the task of module design team to select the regulator best ﬁ t to the application. In reality, many module components inherently mandate the  multiple uses of regulators due to different type of passive electronic devices. The efﬁ ciency of switch-mode regulators are best in class.  For example, 3  a 12–3.3 V linear regulator could only achieve 27.5 % efﬁ ciency verses more than 90 % on a buck convertor. Likewise, a buck converter offered by Texas Instruments TPS40200 shows 94 % efﬁ ciency when the buck voltage is select to 5 V with input energy of 12 V at full loading of 2.5 A 4   Nonetheless, it is always a challenge to comply with EMC compliance when developing SMPS solutions. It is rather a signiﬁ cant event in an automotive design space if the SMPS could qualify EMC compliance by the ﬁ rst iteration of a new design. Yet, switching regulators still have a strong presence in automotive design space. There are pros and cons of regulator topologies, and few important ones are tabulate below (Table  5.1 )   SMPS works on the fundamental principle of inductor attributes that allows stor-ing and releasing energy by means of specialized electronics. Inductor’s ‘mystical’ attributes are the core fundamental block of any SMPS solution. We all understand inductor properties based on Faraday and Lenz’s law; still a new dimension to inductors is the ability to store and release energy in a time-sliced fashion with mini-mum losses when it comes to ‘trapped’ energy by the assistance of magnetic ﬁ eld. The magnetic ﬁ eld surrounding the inductor, ‘self-energizes’ the inductor that truly helps electrical enhancement aspects of the inductor. On top of that, there is a com-plex interaction of magnetic and electrical ﬁ elds, deﬁ ned by Maxwell Equations and Guess’s law. These interactions governs the delightfully helpful features of SMPS solutions. We will only restrict our self with ‘energy switching phenomena’. An ‘energy switching phenomena’ is easily understandable by reiterating the facts that we can inject time-sliced energy to an inductor to get the beneﬁ ts of magnetic, and electric properties that will allow us to scale-down or scale-up the applied energy. 3   Source: Linear Technology application note AN140-5. 4   Source: Texas Instruments, TPS40200 data-sheet page 16. 5.12  Power Supply Block196All SMPS solutions exploit the ‘energy switching phenomena’ directed to induc-tance effects is the heart of all switch mode power supply designs.  There are two distinct ways; inductor energy can exploit just as a single inductor or dual inductor solutions. A single inductor will be more relying towards the elec-trical aspects of the inductor. The dual inductors solution takes advantages of elec-trical and magnetic features together, but surely more by magnetic ﬂ ux properties. A magnetic ﬂ ux rides on ferrite material comfortably, just like electrical current rides on copper wire quite comfortably.  We take an example to deﬁ ne the usage. If two inductors are place side-by-side via a shortest-possible air-gap, and an electric current is switching on the primary inductor then the second-inductor placed next to it, will automatically be energize even though it has not connected electrically. This unique feature of generating electrical energy on the secondary inductor has based on the fundamental principle of changing magnetic-ﬁ eld-coupling satisfying the Faradays Law of induction dis-covered more than 180 years ago in 1832. The dynamics of changing magnetic ﬂ ux interaction will greatly enhance if we put a ferrite material between these two induc-tors. A very interesting behavior could be explained where we can say that if a pri-mary inductor enclosed by ferrite material interacts with the secondary-inductor it induces electrical potential to the secondary inductor quite efﬁ ciently. Nevertheless, the corollary of this behavior is more exciting than the original experiment. It states that the secondary inductor potential will be higher if the number of turns in the secondary inductor is more than the number of turns in primary inductor, and like-wise if the secondary inductor turns are less than the induced potential will be less.  On top of that, another feature highly beneﬁ cial in vehicle electronics is the  beneﬁ t of “electrical isolation”. The isolation of electrical circuits by the virtue of magmatic ﬂ ux properties is the integral part of many SMPS topologies optimized for variety of automotive design solutions. The isolation of high-energy electrical circuits from the low-energy circuits is an added safety feature in automotive  module design.  SMPS uses electronic switching to store energy into the inductor and then let the energy released when the switch is turned-off. This process has repeated to generate a stable output that has ﬁ ltered, and applied to the load. A closed-loop feedback mechanism, inserted to accomplish the line and load regulation. The duty-cycle establishes control via the closed-loop. Additional digital control logic is required to optimize the design in different type of fault scenarios.    Table 5.1    Automotive module regulators topologies    Efﬁ ciency  EMC risk  Board space  Heat  Linear regulators  Low  Low  Medium  High  Discrete regulators  Low  Low  High  High  Switch mode regulators  High  High  Medium  Low  Low dropout regulators  Medium  Low  Small  Medium 5 Fundamental Blocks Design197 The EMC risks are higher due to switching speeds, dynamic switching currents, and switching speed of switching devices. Additional noise suppression circuits need addition for speciﬁ c cases in order to harden the design to meet automotive strict EMC compliance. The ‘snubber-circuits’ are like ‘rescue vehicle’ when it comes to instantaneous rate of change, pulse rise and fall time, and high current switching to counter-measure switch-mode power supply inherent design issues. The control-loop stability is another factor critical to build a classic good stable design. Just a decade ago, designing a switch-mode-power-supply was an art, today it is in option available for any design engineer to get the successful power supply up and running in a very short time. Thanks to semiconductor companies like Texas Instruments, Analog Devices, NXP, Microchip, Inﬁ neon, ST Microelectronics, ROHM and many more who have developed powerful designs, design tools, com-ponents, and tier-2 support networks to provide inductor coils, chokes, high- frequency ferrite-core transformers, and switching devices to help customers build the right kind in right time.  The application notes by the semiconductor companies are so deeply involved that you can ﬁ nd all sorts of application drawings with actual component selection notes, components placements locations, and recommended printed circuit board layout to avoid pitfalls, and fallacies.  Texas Instruments have developed line of switching power supplies that supports many different types of topologies as listed below 5 :•    Buck convertor  •   Boost convertor  •   Buck-boost convertor  •   SEPIC convertor  •   Fly-back convertor  •   Forward convertor  •   Two-Switched Forward convertor  •   Active Clamped Forward convertor  •   Half-Bridge convertor  •   Push-Pull convertor  •   Full-Bridge convertor  •   Phase Shift convertor     The automotive design space has clearly demonstrated the lion’s share of, buck, boost, buck-boost and ﬂ y-back convertors. The ﬂ y-back convertor has been exten-sively utilize in Vacuum Fluorescent Displays (VFD) where 20–56 V or more step- up conversions may be required to meet the needs of high anode-to-cathode voltage. A ﬂ y-back convertor is a dual-inductor topology. 5   Source, Texas Instruments Poster  http://static.elitesecurity.org/uploads/3/2/3253984/topologije.pdf 5.12  Power Supply Block198 The boost convertors are well suited when battery voltage needs to get boost for instantaneous short-durations like start-stop events thus compensating the battery voltage-dips while engine is cranking. The start-stop function deployed in newer vehicles is the catalyst for modern day fuel-economy where computers take control of engine start and stop events without any manual initiations, and are completely transparent from the customer. The other application includes, but is not limited to boost battery voltage to a higher level of voltage to drive displays, headlamps, high intensity discharge lamps, high energy LED’s connected in series, motors, Thin Film Transistors displays or higher voltages devices. Another important application of boost and ﬂ y-back convertor is far-reaching use of Class-D ampliﬁ ers that require higher voltage to crank out more power for the expensive audio systems available in mid to high luxury vehicles.  The buck convertors are well suited when battery voltage is required to be scaled down to a lower voltage like for example 5, 3.3, 1.2 or 1.8 V or else. Majority of module designs could deploy multiple tapings of operational voltages needed for the module and system design.  When both topologies literally merged, it forms buck-boost convertor. The buck- boost convertor is well suited when tight-tolerance of regulation is required for a module that could see a wide-margin of input voltages. For example if a module is designed to function ﬁ rmly at 12 V with a tight tolerance, but the battery operational envelop ranges 9–16 V then a buck-boost convertor could be deployed because boost-block will function at lower-limits of 12 V incoming source and buck-block will function at the upper-limits of incoming source of 12 V. Nevertheless, this prin-ciple is not forcefully enforced and convertor may utilize based on the needs, wants, availability, and development time constraints as per design team discretion. Last but not the least the skills, lessons-learned, EMC compliance data, and a feasible business case are the signiﬁ cant considerations before selecting the SMPS solutions in the corporate culture.  The low dropout (LDO) has a recommended usage where the difference of input to the output voltage must maintain at a minimum level so that the device could not dissipate much heat. There is a pass transistor with a precision comparator to regu-late incoming voltage to the required level of regulation. The linear regulators and low-dropout are the same family of regulators; however, the names are interchange-ably subject to their usage in the design.  It is pretty advantages to drive the LDO input-rail with an existing regulated volt-age to get the beneﬁ ts of sustained regulation with minimum heat loss. Module design team can actually use a ﬁ xed voltage high-current buck-convertor, and then scale down further tapings by adding Low dropout regulator for multiple usage.  The discrete regulators are also part of linear regulator family, but these called discrete because by putting discrete components on the board, it be build. The only disadvantages are more board space and excessive number of components. A down side of excessive number of components means manufacturing constraints like more time to build parts, more parts inventory, more test point for in-circuit testing, parts placement etc. 5 Fundamental Blocks Design1995.12.1     Abstraction Level 3: Descriptive Statement  We deﬁ ne here a switch-mode power supply block as follows:•    Design a buck convertor to convert 12 into 5 V  •   Design a boost convertor to convert 5 V to 12  •   Design a low dropout to convert 5 V to 3.3 V     5.12.2     Abstraction Level 2: Buck Convertor Block Diagram with a Truth Table  An educational buck block diagram is shown; a piecewise source energy is injected through a switching mechanism to an inductor that ‘plays’ with energy to perform ‘inductor-magnetization-energy’ interactions. An inductor unlike capacitor is a dif-ferent type of device, it is not an energy-absorbing device like capacitor rather it is a device that performs mystical actions with incoming energy. There it can appreci-ate or depreciate or sustain an incoming energy pulses. The inductor sustains energy at the rate determined by the duration of time it gets the energy. The energy then transferred to the load ‘hungry’ and ‘waiting’. The transferred energy then measured and a determination has made if the load requires more or less energy. If it requires more energy than the duration of time to inject energy is increased and if it requires less energy than the duration of time to provide energy has reduced. The injection of energy to the inductors has many possible ways where inductance effects are realize as tabulated below (Table  5.2 )   A dual inductor when packaged in a proper shape is refer as transformer. A trans-former with ferrite core has merits to ﬁ t for high frequency operations common to SMPS solutions. On the contrary, low frequency operations require iron core trans-former, iron core transformers are bulky, heavy and loss of magnetic ﬂ ux are higher.  A classical attribute related to inductor has deﬁ ned as discontinuous conduction mode (DCM) and continuous conduction mode (CCM). A DCM operation deﬁ ned as a scenario where injected energy to the inductor has completely ejected out from the inductor each time a switching cycle is completed. On the contrary, the CCM    Table 5.2    Inductor usage    Inductor (copper wire)  Energy transfer rate  Magnetic coupling  Energy losses  SMPS usage  PWM control  Single air inductor  >100 K  Low  Low  Yes  Yes  Single ferrite core inductor  >100 K  Medium  Low  Yes  Yes  Single iron core inductor  5,060,400 Hz  High  High  No  No  Dual inductor Ferrite core  >100 K  Highest  Low  Yes  Yes  Dual inductor iron core  5,060,400 Hz  High  High  No  Yes 5.12  Power Supply Block200has deﬁ ned as a scenario where injected energy to the inductor has partially ejected, and inductor always keeps some energy, so by next switching cycle it does not need to get full energy transfer. The DCM is more stressful to the design with reference to the EMC compliance of the modules (Fig.  5.60 ).   The truth table is showing the realization of feedback mechanism, so when the energy to the load increases beyond a certain limit, “Feed” gets positive that means the “Rate” has to decrease thereby reducing the energy transfer to the energy stor-age. Likewise when the “Feed” is negative than the “Rate” must be increased to compensate for the energy shortage.  5.12.3     Abstraction Level 1: Buck Convertor Topology Demonstration  A simple buck-block without the feedback mechanism shown to prove the concept. The T1 switching transistor is switching at a 300 Hz frequency to transfer energy in the inductor L1. The 300 Hz switching frequency is not practical in the real world, even so for the sake of deﬁ nition at abstraction level 1 we chose to use it to prove the topology. The inductor L1 = 10 mH is selected just as an easy option, the purpose to store energy and transfer energy to the load R1 when the switching transistor is on, and it then releases energy to the load R1 again when the transistor is off. A diode D1 shown in the diagram does the magic trick of not allowing energy  getting to the load when the transistor is off, and no energy is available from the energy source either.  A 1 K load will allow switching regulator to source about 110 mA due to the added factor of T1 and L1. There is no control-loop mechanism in place, so in  reality, this is just one block of a buck convertor, and at the end of the day, the buck convertor will have many more blocks (Fig.  5.61 ).     RateFeedBuck Energy StorageEnergy Transfer to LoadEnergy MeasurementEnergy Switching RateEnergy  Fig. 5.60    Buck convertor block diagram with block diagram        5 Fundamental Blocks Design201 The buck-block simulated with 300 Hz at 50 % duty cycle in order to do a quick sanity check and to verify if the schematic is functioning correctly, a transient anal-ysis iconducted for 100 ms to check how the buck convertor is behaving.  The voltage is stepped-down from 12 to 11 V and the current consumption is 110 mA. The purpose is just to prove the point that after a 25 ms stabilization time the buck-voltage is possible to achieve (Fig.  5.62 ).   The schematics below is modiﬁ ed by changing the value of capacitor to 100 μF and the PWM frequency is adjusted to 1 kHz with the duty cycle of 30 % and then to 50 % to verify that the buck-voltage is changing, so in real life when the voltage attempts to go up or down, the duty-cycle will manage the regulation. This is the most important aspect of SMPS regulation control, but at the same time very risky for the module EMC compliance due to high to low switching currents (Fig.  5.63 ).  R1 100EnergyC1 470uEnergy InteractionEnergy TransferRatePWM 300PWMBuck VoltageLoad CurrentD1 1N1183Energy User  Fig. 5.61    Buck convertor schematic (partial block)       Time (s)0.0025.00m50.00m75.00m100.00mLoad Current-120.00m-100.00mLoad Voltage10.0012.00PWM 300Hz 50%-10.0020.00~11V~ 110mA  Fig. 5.62    Buck convertor simulation at 300 Hz 50 % duty cycle         5.12  Power Supply Block202 It is for this very good reason that snubber-circuits added at this point to suppress negative effects of high current switching to mitigate the overall negative impact to the EMC compliance. It is obvious that when the module is being testing for radi-ated emissions the worst-case battery voltage must adjust to check the radiations at the extreme value of regulation control.  The characterization of regulation control adjusted to understand the impact of output voltage verses the pulse width modulation of the switching frequency. We will maintain a ﬁ xed 1 kHz switching frequency, and only adjust the pulse width to 30 % and then to 50 % to show the duty cycle control.  The tests in simulation have elaborated in Fig.  5.64  below shows that at 30 % duty cycle the output voltage is 10.64 V verses 11.02 when the duty cycle shifted to 50 %.   In the real world, the control loop will have the capability of adjusting the pulse width based on the voltage feedback or current feedback to maintain the regulated R1 100BatteryC1 100uL1 10mT1 2N6849PWM 1kPWMBuck VoltageBuck CurrentD1 1N1183  Fig. 5.63    Buck convertor schematics with revised frequency and ﬁ lter cap       Time (s)0.0025.00m50.00m75.00m100.00mLoad Current-120.00m-90.00mPWM30%, 1 KHz-10.0020.00Buck Voltage9.0012.00106mA10.64Vab  Fig. 5.64    Buck convertor simulation 30 % 1 kHz         5 Fundamental Blocks Design203output. Figure  5.65  below shows when duty-cycle changes to 30 % at 1 kHz and actually outputting 10.64 V with the input of 12 V.   The key success and many advantages of SMPS design rests on high frequency operation of energy transfer. Unlike conventional design with mains frequency of 50, 60 or 400 Hz (Avionics electrical power is 115 V, 400 Hz) the size of supporting components are bigger, SMPS designs are different, and by the virtue of their opera-tion well above 100 kHz to MHz range could be built with delightfully small size of parts. The size of ferrite-core transformers, ﬁ lter capacitor makes it easy to get rid of big size, iron-core transformers, and bulky ﬁ lter capacitors utilized in conven-tional design.  There are protection mechanisms in place to counter measure faults that could have occurred in the ﬁ eld. For example a question comes to mind, what happens if source energy goes down so low that it won’t be able to provide enough ‘juice’ to sustain buck voltage?  Yes, it is a valid real life scenario where battery voltage could dip dangerously so low that it could not withhold buck designed intent voltage, such a scenario has protected by under voltage lock out (UVLO) logic. The logic uses analog  comparators and digital gates, ﬂ ip-ﬂ ops, and latches to shut down the buck conver-tor when the condition has detected.  Another important attribute of switch-mode-power-supply is the ability to con-trol in-rush current of a high-current device ready to get energize when the power supply has ﬁ rst powered on. This scenario is counter measured by ‘soft start’; the soft start is a process of providing power to the external device slowly and gradually thereby eliminating initial in-rush current surge that could be stressful to many device over a longer period of time by repetitive ‘hard-starts’. It could be analogues to an airplane hard or soft landing where a hard landing is a major stress on an air-plane structure compared to a minor stress when landing softly. Time (s)0.0025.00m50.00m75.00m100.00mLoad Current-120.00m-100.00mPWM 50% 1K-10.0020.00Buck Voltage10.0012.00110mA11.02Vab  Fig. 5.65    Buck convertor simulation 50 % 1 kHz        5.12  Power Supply Block204 A soft start means a low electrical stress thus a good design practice for the robustness and reliability of the design. Few critical parameters of SMPS solutions have listed below:•    Start-up Sequence  •   Switching Frequency  •   Soft Start  •   Under voltage Lockout  •   Closed-loop control  •   Inductor and Filters matching at full load     We can state here just for the sake of a rough contrast that if transistor was the revo-lution in the age of vacuum tubes then the SMPS may be the revolution against all other types of linear power supply regulators, and stands as unchallenged competitor.  5.12.4     Abstraction Level 0: Buck Convertor TI TPS40200 Schematics  A buck convertor with 5 V output at 2.5 A max load to run at ≥12 V is designed in this section. The Texas Instrument TPS 40200-buck convertor presented here, and simulated in the frequency of operation is selected at 300 kHz, to be exact it is run-ning at 297 kHz based on the selected components of R3 = 68.1 K and C5 = 4,700 pF.  The TPS40200 model is transient model, so a transient analysis has conducted. The VDD simulated for 3 ms at 12 V. A resistive loading of 1.7 A realized. The buck voltage at 5 V has stabilized after 1.4 ms. The convertor switching  frequency func-tioning correctly as no abnormal current is sinking (Figs.  5.66 ,  5.67 ,  5.68 ,  5.69 ,  5.70 , and  5.71 ).       R6 16.2kR3 68.1kC5 470pC8 1.5nC7 10pC6 47nC4 470pR4 2kR2 20mR5 0D2 MBR330C11 1uQ2 FDC654P_AEIR1 10C3 100nR8 300kR12 3MD1VCOMPR13 50VOUTTPS40200RCSSCOMPFBGNDGDRVISNSVDDU1 TPS40200L1 33uC1 470uR10 100kR7 3VF1 I_IN:1R11 50m+VG1VDDFBCOMPOUT  Fig. 5.66    TPS40200 buck convertor schematics        5 Fundamental Blocks DesignTime (s)0.001.00m2.00m3.00mLoad Current-1.004.00Compensation0.002.00Input Energy =12V0.0020.00Switching Frequency=297KHz0.0020.00Buck Voltage0.006.00  Fig. 5.67    TPS40200 buck convertor simulation results         Fig. 5.68    TPS40200 buck convertor start-up sequence 2 ms window       I_INVCOMPVF1VOUTTime (s)560.00u660.00u760.00u860.00u960.00u1.06m1.16m1.26mI_IN-1.004.00VCOMP0.002.00VF10.0020.00VOUT2.006.00VOUTVF1VCOMPI_IN  Fig. 5.69    TPS40200 buck convertor start-up sequence zoomed in          206 The convertor switching frequency has stopped functioning and the output voltage has seized to exist because the convertor detected an overcurrent condition  5.12.5     Boost Convertor Block Diagram with a Truth Table  An educational boost block diagram shown here where the energy injected to the energy storage inductor through the switching mechanism in a loop before the energy has applied to the load. As noticeable, the switch placed in parallel to the load compared to buck convertor where the diode was in-series delivering power as R6 16.2kR3 68.1kC5 470pC8 1.5nC7 10pC6 47nC4 470pR4 2kR2 20mR5 0D2 MBR330C11 1uQ2 FDC654P_AEIR1 10C3 100nR8 300kR12 3MD1R13 50VOUTTPS40200RCSSCOMPFBGNDGDRVISNSVDDU1 TPS40200L1 47uC1 100uR10 100kVF1 I_IN:1R11 50m+VG1VCOMPR7 3tSW1 VDDFBCOMPOUT  Fig. 5.70    TPS40200 buck convertor overcurrent simulation SW1 shorted to GND       I_INVCOMPVF1VOUTTime (s)0.001.00m2.00m3.00mI_IN-1.006.00VCOMP0.003.00VF10.0020.00VOUT0.006.00VOUTVF1VCOMPI_IN  Fig. 5.71    TPS40200 buck convertor overcurrent test         5 Fundamental Blocks Design207soon as the switch is on. Therefore, there is a tendency of boosting voltage due to the inductor coil electromagnetic effects in itself. Similar features that were apply to the boost topology apply to the buck topology like the feedback mechanism, switch-ing frequency and the duty-cycle (Fig.  5.72 ).   The truth table is showing the importance of feedback mechanism, so when the energy to the load is in excess then the “Feed” is positive so the “Rate” of output decreases eventually reducing the energy transfer to the energy storage, and when the “Feed” is negative than the “Rate” is increased to compensate for the loss.  5.12.6     Abstraction Level 1: Boost Convertor Block Schematics  A boost convertor block diagram shown without the details of control loop struc-ture. The switching transistor is switching at 1 kHz to store energy in the inductor. The inductor stores the energy when the switching transistor is on, and it then releases energy to the load when the transistor is off (Fig.  5.73 ).   A boost convertor simulated shows that it could generate 12.71 V at the switch-ing frequency of 1 kHz with 50 %, duty cycle; however, when the duty cycle was change to 90 % the boost voltage is down to 12.58. Both plots show the details of probes to measure many aspects of this educational block to help understand the topology. The key point to learn is that the control-loop can utilize duty-cycle to manage regulation (Figs.  5.74 ,  5.75 ).          RateFeedFeedRatePositiveDecreaseNegativeIncreaseEnergy Switching RateEnergy Transfer to LoadEnergy MeasurementTruth TableEnergyEnergy Storage  Fig. 5.72    Boost convertor block diagram        5.12  Power Supply BlockR1 100EnergyC1 470uSwitching 1kPWMBoost VoltageBoost CurrentCoil OutputT1 SwitchingCoil CurrentSD1 1N5823C2 1uEnergy Storage  Fig. 5.73    Boost convertor block topology abstraction level 2       Time (s)0.002.50m5.00m7.50m10.00mBoost Current116.00m128.00mBoost Voltage11.6012.80Coil Current-5.005.00Coil Output11.0013.00PWM 50% 1K-10.0020.00127ma12.71  Fig. 5.74    Boost convertor simulation 50 % 1 kHz Vout = 12.71       Time (s)0.002.50m5.00m7.50m10.00mBoost Current116.00m128.00mBoost Voltage11.6012.80Coil Current-5.005.00Coil Output11.0013.00PWM 90% 1K-10.0020.00125mA12.58  Fig. 5.75    Boost convertor simulation 90 % 1 kHz Vout = 12.58          209© Springer International Publishing Switzerland 2015 N. Zaman, Automotive Electronics Design Fundamentals, DOI 10.1007/978-3-319-17584-3_6    Chapter 6    Lincoln Motor Company: Case Study 2015 Lincoln—MK C  6.1                              Introduction     Ford Motor Company has deﬁ ned hundreds of electronics applications realized by proper ﬁ t, form and function in the portfolio of their vehicle electronics architecture. The usage based on the target market, corporate needs, wants, global compliance, and vehicle attributes.  As deﬁ ned earlier all automotive electronics architectures exist today utilizes dis-tributed processing architecture where computational needs are fully handle by the individual modules, however the modules interactions all across the vehicle are share through the message-passing scheme. The message-passing scheme is accomplish by installing communication node in each module. It is obvious that due to the high num-ber of communication nodes in a typical vehicle, not all the modules can be place on a single communication backbone—primarily due to the bandwidth limitation of CAN speed of 500 kHz bits per second. Nonetheless, additionally it is also rests on to the safety and system design robustness. It is apparent that every vehicle manufacture has to deﬁ ne its own deﬁ nition of modules communication backbone. Therefore, the num-ber of communication backbones rests and varies subject to vehicle manufacturer.  Ford Motor Company, Electrical and Electronics Systems Engineering deﬁ ne few communication backbones with many additional features satisfying the corpo-rate directives, and strategies. However, we will restrict the discussion only to the communication backbone architectures:•    A arhitecture deﬁ nes  three CAN backbones , one on medium-speed, and two are on high-speed. Each bus is terminated by two far apart modules, pre-deﬁ ned, based on the length of the vehicle harness. A architecture is depicted in Fig  6.2 .  •   B arhitecture deﬁ nes  four CAN backbones , one on medium speed, and three are on the high speed. Each bus is terminated by smart data link connector,—alias gateway module. The gateway module is an intelligent node, which allows all 210SmartDLCHighSpeedCANBackbone3HighSpeedCANBackbone1MediumSpeedCANBackbone4HighSpeedCANBackbone2ABZABZZBABZATTTTTTTTTerminating NodeTerminating NodeTerminating NodeTerminating Node  Fig. 6.1       B arhitecture Communication backbone       four backbones to talk to each other, it manages message passing among the mod-ules, and all module backbones must pass through it before each node can talk to each other. The B arhitecture communication backbone depicted in Fig.  6.1 . As can be noticed each backbone could have number of modules represented by  6 Lincoln Motor Company: Case Study 2015 Lincoln—MK C 211A to Z, where ‘A’ module must have to have the bus-termination resistor installed in that module due to the farthest distance from the smart DLC module which is the second point of all terminations (   Fig.  6.2 ).       6.2     Lincoln Motor Company 2015 Lincoln Brand MK  C   The Lincoln brand vehicle MK C  is available in the United States of America. The electronics architecture has based on a topology where modules share information, and perform either self-contained or group based systematic functions. We will review some of the electronic modules and systems based on the information avail-able through the service manual for the purpose of education.  High Speed CAN Back bone 1High Speed CAN Back bone 2ABZZBATTZTMedium Speed CAN Back bone 3ZBATZT  Fig. 6.2    A arhietcure Communication backbone        6.2 Lincoln Motor Company 2015 Lincoln Brand MK  C 2126.3     MK C  Communication Backbone Architecture  The modules processing and network nodes are distributed on four CAN communi-cation backbones namely Medium Speed 1, High Speed 1, High Speed 2, and High Speed 3. All four buses have one common intelligent gateway processing node namely Gateway Module. It has no other major function; rather just allow buses to share information among modules that are distributed on each backbone. It also acts as a one-end of terminations for all buses. The other end rests on each backbone in a module pre-deﬁ ned for that backbone in the architecture. A table of CAN backbones, and how each module is connected to its backbone is tabulated is shown in Table  6.1    The modules shown with their bus-speed and bus backbone assignments, the only module, interfaced to all buses, is the gateway module. The gateway module, so physi-cally constructed that OBD II connector becomes the integral part of module. The Data Link Connector (DLC) in Ford terminology also referred as Smart DLC (Fig.  6.3 ).   6.4     Body Control Module (BCM)  The BCM comprises of relays, fuses, electronics, embedded controllers, and embed-ded software to control vehicle body functions, exterior and interior lamps, safety and security functions, and many system sensors, devices connected digitally on to the LIN bus. The BCM shares messages on to the High Speed CAN Bus backbone 1 as shown in Fig.  6.4 . The BCM also houses Park Aid Module (PAM) within its physical real state. The block diagram of park aid module is explain in next section.   The BCM is a highly integrated functional module. The partial block diagram in depicted in Fig.  6.4 .  6.5     Restraint Control Module (RCM)  The Restraint Control Module utilizes number of sensors, and actuators to deploy the airbags effectively, and safely. The CAN bus is utilized to inform status of the airbag readiness, however it is not required for the safe operation of the airbag should the bus fail at the time of impact. The weight sensors connected to the seats determine the occupant-weight through the OSCM (Occupant Safety Classiﬁ cation Module) in order to select the ﬁ ring mechanism appropriate for infant, or adult. Additionally, ‘seat position sensors’ are also installed to determine the seat track- position for a calibrated airbag deployment. The impact-sensors positively identiﬁ es the crash and sends the appropriate signal to the processing node for onward pro-cessing subject to vehicle speed and attitude. The buckle sensors manages the seat belt warnings if the driver or passenger have not properly buckled. Nevertheless, once the seat belt fastened, airbag system prerequisites are complete. 6 Lincoln Motor Company: Case Study 2015 Lincoln—MK C 213   Table 6.1    2015 MKC modules communication node    Gateway module (GWM)  Modules nomenclature  CAN buses backbone  MS1  HS1  HS2  HS3  Smart data link connector (SDLC)  OBDII connector  TRM (Trailer Module)  X  RTM (Radio Transceiver Module)  X  SOD-L (Side obstacle Detector—Left)  X  SOD-R (Side obstacle Detector—Right)  X  DDM (Driver Door Module)  X  DSM (Driver Seat Module)  X  GPSM (Global Positioning System Module)  X  FCIM (Front Control Interface Module) [T]  X  PDM (Passenger Door Module)  X  RGTM (Rear Gate Trunk Module)  X  HSWM (Heated Steering Wheel Module)  X  SCME (Front Seat Climate Control Module)  X  PCM (Powertrain Control Module) [T]  X  BCM (Body Control Module)  X  PAM (Park Aid Module)  X  HCM (Headlamp Control Module)  X  RCM (Restraint Control Module)  X  ABS (Antilock Brake System)  X  VDM (Vehicle Dynamics Module)  X  HUD (Heads-up Display)  X  PSCM (Power Steering Control Module)  X  GSM (Gearshift Module)  X  IPM-A (Image Processing Module A)  X  TRCM (Transmission Range Control Module)  X  CCM (Cruise Control Module) [Adaptive Sensing]  X  OCSM (Occupant Classiﬁ cation System Module)  Local CAN Bus to RCM  SCCM (Steering Column Control Module) [T]  X  APIM (Auxiliary Protocol Interface Module)  X  X  X  TCU (Telematics Control Unit)  X  ACM (Audio Control Module)  X  ANC (Active Noise Cancellation) Module  X  DSP (Audio Digital Signal Processing Module)  X  IPC (Instrument Panel Cluster) [T]  X  The pre-tensioner holds the occupant tightly on to the seat once it has determined that the air bag deployment is unavoidable, and it positions the occupant securely by automatically tightening the belt on to the seat—right before deploying the airbags (Fig.  6.5 ).   After the airbags deployment, module performs the post-crash processing. The ‘event notiﬁ cation signal’ is then asserted to the body control module to turn on the 6.5 Restraint Control Module (RCM)214Smart DLC High Speed CAN Backbone 3 High Speed CAN Backbone 1Medium Speed CAN Backbone 4High Speed CAN Backbone 2TTTTTRMRTMSOD LDSMFCIMPDMRGTMHSWMSCMESOD RGPSMDDMPCMBCMPAMHCMGSMPSCMHUDVDMABSSCCMOSCMC-CMTRCMIPM-ARCMDSPANCACMTCUAPIMIPCLOCAL CAN BUSTTTTTerminatingNodeTerminatingNodeTerminating NodeTerminatingNodeConnected tobackbone 2Connected tobackbone 4  Fig. 6.3    2015 MKC modules and communication backbones        6 Lincoln Motor Company: Case Study 2015 Lincoln—MK C 215horns, ﬂ ashes the headlamps, and send CAN commands to SYNC to dial 911 call if the customer cell phone has already been paired earlier through the Bluetooth wire-less. Once the call to 911 operator is connected, the SYNC system reports and announces to 911 operator that the crash has occurred to a Ford vehicle at location so and so, and then relinquishes open line for the operator to engage occupants in the vehicle.  HornAUX LocksKeypad LEDsChild LockFuel FlapFuel PumpDoor Locks/UnLiﬅgate MotorReversing LampsAlarm RKEStart Bu(cid:3)onWiper MotorAutolampsAmbient LightsRun/Start RelayDelayed Acc Hazard LampsGear shiﬅ ModuleIgnition StatusDoor LED'sFog LampsWindow De(cid:4)ostBa(cid:3)ery SaverMarker LampsGatewayModulePROCESSINGHID DriversExterior LightsBattery Monitoring   2015 MKC - Body Control Module  (Partial)Headlamp ControlHeadlampsHeadlamp Leveling Module(Only for China)HS-CAN 500Kbs Physical LayerKeyless Entry Pad Door Ajar  ( all doors)CAN BUSBrake System Interior LightsRelaysFET DrivesSystem SensorsSystem  SwitchesENS (RCM)RTM (TPMS)Ignition Start/Stop Dimming SwitchLevel ShiftHS1HS3HS2MS1LINBUSLevel ShiftLevel ShiftLINBUSLINBUSLINBUSLevel ShiftLevel ShiftLevel ShiftLevel ShiftLevel Shift  Fig. 6.4    Partial body control functions       CAN BUSEvent Notification SignalIPCSYNC))))Turn on Horns   Customer Cell PhoneTurn on Head LampsBody Control ModuleCAN BusGateway ModulePROCESSINGElectronic DriversPre-tensioners    2015 MKC - Restraint Control ModuleOSCMElectronic DriversRetractorsHS-CAN 500Kbs Physical LayerSeat SensorsAirbag Firing SquibsAirbags with sealed inflatorsImpact SensorsLevel ShiftLevel ShiftHS3HS2  Fig. 6.5    Restraint control module         6.5 Restraint Control Module (RCM)2166.6     Instrument Panel Cluster (IPC)  The Instrument Panel Cluster is self-contained module. It receives two hardwired inputs, one for fuel level indicator, and other for low-washer ﬂ uid level. The rest of the status information is available by CAN messages sharing through different modules installed at High-Speed-1, High-Speed-2 and Medium-Speed-1 CAN backbones. The IPC utilizes no mechanical dial pointers rather all the displayed instruments actively simulate on the LCD. A speaker in the IPC is a redundant resource to play chimes. The block diagram in Fig.  6.6  represents an educational consolidated view.   6.7     Park Aid Module (PAM)  The park aid module assists driver for a safe reverse, and forward small movements to align vehicle as per customer desire, and intentions. The PAM is physically located inside the body control module (BCM)—nevertheless it has a separate CAN node identity (Fig.  6.7 ).   PCMPAMTRCMVDMIPMAABSPSCMSCCMRCMSOD-LSOD-RGPSMCAN Bus HS3Gateway ModuleWasher Fluid SensorPROCESSINGLED DriversLED IndicatorsDisplayDriver2015 MKC - Instrument Panel Cluster (IPC)Fuel Level SensorDriverSpeaker to play ChimesHS-CAN 500KbsPhysical LayerLevel ShiftLevel ShiftHS2MS1HS1HS3  Fig. 6.6    2015 MKC instrument panel cluster        6 Lincoln Motor Company: Case Study 2015 Lincoln—MK C 217PCMIPCACMFCIMTRM   2015 MKC - Parking Aid Module  (PAM)Rear Park Aid SensorsHS-CAN 500Kbs Physical LayerCAN Bus HS1Gateway ModuleFront Park Aid SensorsPROCESSINGCautions and WarningsLevel ShiftLevel ShiftMS1HS1HS3  Fig. 6.7    2015 MKC park aid assistance       6.8     Tire Pressure Monitoring System (TPMS)  The Tire Pressure Monitoring System informs driver if any of the tire pressure has fallen below the recommended value, so that the driver can take measures to ﬁ ll the tire pressure—if necessary. All tires are equipped with battery operated pressure sensors transmitting the tire pressure to the radio transceiver module (RTM). The information is then properly translated, formatted and transmitted over to the vehi-cle CAN bus through the gateway module. The gateway module is conduit to have the information available for the body control module (BCM), where it is processed and decoded to route to the Instrument Cluster Panel. The BCM does all the pro-cessing of TPMS functions including sensors-position decoding for wheel-identity, sensors-signal temperature compensation, and cautioning the driver by sending appropriate messages to the IPC (Fig.  6.8 ).    6.8  Tire Pressure Monitoring System (TPMS)2186.9     Shift by Wire System  The shift-by-wire is a way of controlling the gears by pressing the push buttons rather than manually moving the stick. This is a neat way of saying that the gears shifted by electronics is actually a ‘shift-by-wire’ system. The TRCM connects manually with the transmission gear lever. The PCM functions as master. The IPC displays gear position (Fig.  6.9 ).   6.10     In-Vehicle Invertor  The vehicle is equipped with an inverter module that runs without any time limit when engine is running. However, it is important to note that while utilizing inverter without being charge through the alternator, the vehicle battery will discharge. In order to prevent that scenario the PCM sends information to the BCM that the engine had shut down and vehicle battery is no longer getting charge. The BCM then takes action, and turns off inverter after a predetermined period. The BCM sends shutdown instructions over the LIN bus (Fig.  6.10 ).   IPCBCMLF Tire Sensor )))PROCESSING2015 MKC - Tire Pressure Monitoring SsystemRF Tire Sensor )))RR Tire Sensor )))MS-CAN 125KbsPhysical LayerCAN Bus MS1Gateway ModuleBatteryBatteryBatteryBatteryLR Tire Sensor )))RadioTransceiverModuleMS1HS3HS1  Fig. 6.8    2015 Tire pressure monitoring system        6 Lincoln Motor Company: Case Study 2015 Lincoln—MK C PRNDSOverrideSwitchRCMTRCMIPCPCMBCMHS-CAN 500KbsPhysical LayerCAN Bus HS2Gateway ModulePROCESSING2015 MKC - Shift-by-WireLevel ShiftHS2HS3Level ShiftHS1  Fig. 6.9    2015 Shift by wire system       ControlPCMBCMInverterGatewayModulePROCESSINGLINPhysical LayerHS3HS2MS1HS1LINBUS  Fig. 6.10    2015 In-vehicle invertor processing         2206.11     Powertrain Control Module  The powertrain control module is responsible for engine electronics control, battery charging, transmission gearshifts, air-conditioning monitoring, and cruise control. In addition to that, it supports other vehicle modules through the gateway module by the abundance of sensors information it has to share with other systems. The block diagram is shown in Fig.  6.11    6.12     Cruise Control Module (CCM)  The powertrain module controls the cruise control functions. However, the cruise control module supports the adaptive cruise functionality. It is an added feature for the customer convenience to maintain a safe distance from the vehicle ahead in the same lane provided the adaptive cruise control feature is engage. The CCM houses the RADAR (RAdio Detection And Ranging) sensing mechanism where radio energy is send and receive to determine the distance of vehicle moving ahead. The CCM also beneﬁ ts another intriguing function of collision avoidance explained in next section (Fig.  6.12 )   6.13     Steering Column Control Module (SCCM)  The SCCM utilizes embedded controller to receive steering control switches status and positions of multifunction levers, takes local actions and then translates the switch positions and multifunction levers into the appropriate CAN messages that GatewayModule DRIVERSTransmission , A/CPROCESSINGCoil On-plugs ( Spark Ignition)Engine Sensors Relays, Fuel Pump, FansHS-CAN 500Kbs Physical LayerBattery Charging, AWDCAN BUSThrottle Control MotorCritical SensorsFuel InjectorsControl SwitchesLevel ShiftLevel ShiftLevel ShiftHS1HS3HS2MS1  Fig. 6.11    2015 Powertrain control module        6 Lincoln Motor Company: Case Study 2015 Lincoln—MK C 221are sent on to the high speed CAN bus 2. The messages related to wiper motor and washer ﬂ uid pump relayed via LIN bus. The block diagram depicted in Fig.  6.13  show the interconnection of functions.   SCCMBCMIPCABSRCMCCMEmitted Radar PulsesCAN BUSGateway ModuleReflected Radar PulsesAccelerator Pedal DRIVERSBrake SwitchesPROCESSINGThrottle Control MotorCruise Control SwitchesHS-CAN 500Kbs Physical LayerLevel ShiftLevel ShiftLevel ShiftHS1HS3HS2VehicleAhead  Fig. 6.12    Cruise control with adaptive module (CCM)       PCMBCMGateway ModuleWasher Fluid PumpWasher MotorPROCESSINGLINPhysical LayerHS-CAN 500Kbs Physical LayerSwitchesLINBUSHS3HS2MS1HS1  Fig. 6.13    Steering column control module         6.13 Steering Column Control Module (SCCM)2226.14     Collision Avoidance System  The collision avoidance system is an added advantage of the CCM installed for the adaptive cruise control, but now has been exploit to assist collision avoidance. The forward collision warning alerts the driver for an impending collision risk. The aural warning and red LED’s display warning alerts the driver. The block diagram depicted in Fig.  6.14  show the interconnection of functions.   6.15     Blind Spot Monitoring System (BLIS)  The blind spot detection mechanism augments the driver a safe lane change sce-nario. It displays a blinking LED to the side view mirror indicating an unsafe condi-tion to change lane. Multiple modules and players share the system design. The left side obstacle detector left (SOD-L) arguments left lane change assistance, and right side obstacle (SOD-R) assists right side lane change. The block diagram depicted in Fig.  6.15  show the interconnection of functions. The Driver Door Module (DDM) and Passenger Door Module (PDM) processes the information received over the Medium Speed 1 CAN bus and then drives the corresponding blinking LED for an unsafe lane change warning.   6.16     Climate Control System  The climate control system is the air-conditioning and heating system meant for vehi-cle cabin. The powertrain control module (PCM) and Front Control Interface Module (FCIM) are two major players handling the cabin temperature. The PCM interfaces BCMACMIPCHUDCCMEmitted Radar PulsesGateway ModuleReflected Radar Pulses   2015 MKC - Collision Avoidance DRIVERSPROCESSINGRED LED's WarningHS-CAN 500Kbs Physical LayerHS1HS3HS2VehicleAhead  Fig. 6.14    Collision avoidance system        6 Lincoln Motor Company: Case Study 2015 Lincoln—MK C 223directly with the engine driven compressor by a clutch to engage and disengage the variable displacement compressor. Furthermore, it reads the ambient air temperature, and compressed Freon gas pressure. The block diagram depicted in Fig.  6.16  show the interconnection of functions. The door actuators are air outlet registers meant to release hot/cold air subject to customer settings. The blower motor fan barrels the though the ducts to each air outlet registers. The blower motor allows multiple speed settings to cycle through air as per customer needs and wants. The FCIM also pro-vides user interface to manage customer interactions of climate settings.   BCMACMIPCSCCMLH Mirror LED'sRH Mirror LED'sGateway ModulePDM Processing and DriverSOD-R ProcessingDDM Processing and DriverSOD-L ProcessingHS1HS3HS2MS1  Fig. 6.15    Blind spot detection       CAN BUSVariable Displacement CompressorA/C Clutch Relay/Field CoilAmbient Air Temperature SensorPCM                2015 MKC - Front Control Interface ModuleProcessingControl SignalBlower Motor Speed ControlMS-CAN 125Kbs Physical LayerBlower MotorGateway ModuleA/C Pressure TransduserTemperatureSensorsAutolamp-Sunload SensorH-BridgesDoor ActuatorsUser ControlsLevel ShiftHS1Level ShiftLevel Shift  Fig. 6.16    Climate control system         6.16 Climate Control System2246.17     Passive Anti-theft System (PATS)  The Passive Anti-Theft System dictates the conditions to secure the vehicle to its key holder who had all the ownership rights to start the engine. If key were not present within a speciﬁ ed distance inside the cabin, the computers would not let the engine to start even by pressing the START/STOP button. The BCM receives the key authenti-cation code through multiple wireless antennas (RKE, PATS, Door) sensing a weak radio signal, when a correctly coded key comes close transmitting valid key code. After an embedded software-decoding process utilizing RTM, PCM and BCM inter-actions, the authentication validates the engine-start sequence—once the START but-ton is pressed. (Please note that the vehicle is not equipped with conventional keys or ignition cylinder). The block diagram depicted in Fig.  6.17  show the interconnection of functions. The coded key inside the cabin interacts wirelessly with RTM and three other antennas namely RKE antenna, Door antenna and PATS antenna.   6.18     Lane Departure Warning  The Lane Departure cautions and warnings are available to assist vehicle driving safely in the lane. The system takes advantage of camera looking at the white mark-ings on the road lane. The user has authority to engage or disengage the lane depar-ture warning functions. The camera or Image processing module-A (IPMA) has its CAN BUSRKE   )))  (((Door       )))  )))PATSLINPhysical LayerAll Engine ControlsRTMPCMHS-CAN 500Kbs Physical LayerGateway ModuleBCM Processing2015 MKC - Passive Anti-theft System (PATS)RF InputGSM-Start/StopLevel ShiftMS1HS1CodedKey  Fig. 6.17    Passive anti-theft system        6 Lincoln Motor Company: Case Study 2015 Lincoln—MK C 225installation location in the rear-view camera—looking ahead. The IPMA shares information on the High speed 2 CAN Bus. In addition to that, a critical and signiﬁ -cant feature of camera is its location and look-ahead capability without any hazi-ness, hindrance, fog, mist or frozen ice. To countermeasure, all these weaknesses, the aperture of windshield section ﬁ tted with defrost heater. The defrost heater also controls by the IPMA.  The RCM informs the vehicle attitude on the bus, PSCM sends steering vibration and torque assist to align the vehicle between the markings. The CCM disables the lane departure system if collision warning gets to engage (Fig.  6.18 ).   6.19     Battery Charging  The Body Control Module and Powertrain Control Module works in harmony to charge the vehicle battery. The battery-monitoring sensor feeds BCM; Generator current-sensor feeds PCM. BCM sends message to IPC through gateway if the bat-tery charging current is not taking place correctly (Fig.  6.19 ).   6.20     Anti-lock Brake System and Stability Control  The Anti-Lock Brake and Stability Control is self-contained module with electron-ics and actuators to provide added safety when icy a slippery condition tends to lock wheel after the application of brakes. The module is married to the hydraulic  assembly unit, so a simpler block diagram depicted in Fig.  6.20 . The wheel-sensors provide wheel-spinning movements. The brake ﬂ uid level being sense by the BCM, and transferred to the gateway module for onward delivery to the ABS module. The hydraulic pump motor provides the necessary hydraulic pressure to maintain BCMPCM`IPCSCCMPSCMRCMCCMIPMAGateway ModuleCamera Windshield Defrost Heater   2015 MKC - Lane DepartureSteering Column VibrationsSteering Column Torque adjsutementHS-CAN 500Kbs Physical Layer DRIVERSPSCM ProcessingHS1HS3HS2White Color Road Markings  Fig. 6.18    Lane departure system        6.20  Anti-lock Brake System and Stability Control226automatic braking when ABS takes control of the brake. In normal braking opera-tion, human foot pressure applies the brakes. While the ABS takes control of the brakes, pump motor is required to generate necessary brake force.   6.21     Exterior Lighting System  The exterior lighting gets control by the BCM. It includes headlamps, brake lamps including auto lamps functions.    BCMIPCRCMVDMDriversHydrualic Pump MotorsHS-CAN 500Kbs Physical LayerGateway Module                     2015 MKC - ABS PROCESSINGDrivers Apply & Release Valves Wheel SensorsBrake Fluid Level SwitchLevel ShiftLevel ShiftHS1HS3HS2  Fig. 6.20    ABS module       IPCGateway ModuleBattery WindingsGeneratorPCMGenerator Current SensorBCMBattery Monitoring SensorHS1HS3  Fig. 6.19    Battery charging system         6 Lincoln Motor Company: Case Study 2015 Lincoln—MK C 227© Springer International Publishing Switzerland 2015 N. Zaman, Automotive Electronics Design Fundamentals, DOI 10.1007/978-3-319-17584-3_7    Chapter 7    Module and Vehicle EMC Compliance 7.1                        Introduction     We live in a world of oxygen and we cannot survive without it that is a universal truth. However, there is another truth that goes beyond geographical area, demo-graphics, and technological achievements, where people cannot ‘live’ without the radio energy present around them. The radio energy around them can be found in the form of a cellular phone signal, a FM radio signal, a Wi-Fi hotspot, or a GPS signal. These high-tech gadgets, not only run on the battery power, but do require radio energy to get fully operational. The presence of ‘radio energy atmosphere’ around us plays a vital role in our daily lives.  Although the usage of these devices is second nature to us, their existence creates another issue that must be resolved before any new electronics gadget is thrown into the “radio energy atmosphere”. Contrary to “oxygen-ﬁ lled atmosphere” that creates no fundamental intelligent design issue in the “oxygen space”—even though every minute new ‘products’ are ﬁ lling the atmosphere. The scenario of radio energy atmosphere is full of issues.  Unlike ‘no-issues’ scenario of oxygen atmosphere, the “radio energy atmo-sphere” require calculated, and a sort of an ‘intelligent design’ to follow compliance so that each new ‘specie’ come to existence ready to get ‘naturalized’ in the ‘radio energy atmosphere’—could survive and function correctly.  The ‘radio energy atmosphere’ command and control is maintained by the respective country, region, and governmental agency. The rules and regulations to ‘live’ under a particular ‘radio energy atmosphere’ are deﬁ ned under an electromag-netic compliance by the respective agency for that particular region. It is absolutely mandatory for a newly designed automotive electronics module to live in the ‘radio 228atmosphere energy’ peacefully and to become a    ‘law-abiding citizen’. In order to do so, it must comply with the electromagnetic compliance regulations of the target market. The modules need compliance—indeed—we all must agree. But do vehi-cles require compliance? Yes, vehicles require compliance as well because this is where the modules have to be installed. So, vehicles must also follow the electro-magnetic compliance guidelines. These guidelines are deﬁ ned in the governing documents released by the respective authority of target market. Both modules and vehicles usually require separate set of testing to comply with the electromagnetic compliance. The target market requirements and compliance is essential for any electronics module designed for motor vehicle application.  In United States of America, Federal Communications Commission (FCC) regu-lates the governing documents required for the electromagnetic compliance of any electronics equipment desired to be introduced in the United States of America. Motor Vehicle manufacturers are bound by law to comply with the certiﬁ cation process before their vehicles are placed in the target market. The vehicles, electronic systems, electrical machines along with all electronic modules have to comply with the regulatory requirements.  In general, electromagnetic compatibility requirements not only cover the envi-ronmental radio energy, but also cover the local energy-transmitters inside any vehi-cle. These local vehicle energy-transmitters are not exactly the actual radio transmitters (except for few like Wi-Fi, Bluetooth, or Cellular phone module…) rather represent variety of other electronic devices mounted inside the modules in addition to electro-magnetic devices installed in the vehicle. The transient energy events due to these devices may disturb the safe operation of vehicle by infringing into the safe opera-tional envelop of a system component, sensor, device or a new module. For example, a high energy pulse may generate a false reset to a system already in the middle of a critical decision under the supervision of an intelligent algorithm.  So, the EMC compliance of modules not only covers the environmental radio spectrum, but also the local energy from the vehicle unintended transmitters initi-ated by transients event in the vehicle electrical systems.  In    Fig.  7.1 , multiple sources of RF transmitters are shown signifying the vulnera-bility of an automotive module in the radio energy atmosphere. The biggest concern in automotive domain is the dynamic nature of vehicle attributes. A moving vehicle could pass by any transmitter at any time in an unpredictable fashion. The generalized category and simple deﬁ nition of electromagnetic interference are listed below:  7.1.1     Radiated Emissions (RE)  It is deﬁ ned as the radio energy emitted by the electronic device wirelessly that may be harmful to other electronic devices who are listening to known wirelessly- identiﬁ ed intelligent radio energy (a FM station, a cell phone call, a GPS signal or more). In simple terms we can state that “Don’t disturb neighbors by talking loud”.  7 Module and Vehicle EMC Compliance2297.1.2     Conducted Emissions (CE)  It is deﬁ ned as the radio energy conducted by the electronic device through the wires that are providing power to device that may be harmful to other electronic devices sharing the same power distribution lines. The conducted emissions over the limits energy could kick off the secondary failure by radiating more emissions through the wires because wires now acts like antenna regardless of the fact that it were providing power.  7.1.3     Radiated Immunity (RI)  It is deﬁ ned as the quality of electronic device where it can absorb the radio energy beamed wirelessly on the electronic device. The quality of absorbing radio energy without affecting the device electronics for its intended operation is deﬁ ned as the immunity against radio energy that is applied on the electronic device wirelessly. In other words you can say “I don’t get disturbed when neighbors talk loudly”  7.1.4     Conducted Immunity (CI)  It is deﬁ ned as the quality of electronic device where it can absorb the radio energy injected physically to the electronic device through electrical wires connected with the device. The quality of absorbing radio energy without affecting the device ModuleCell PhoneTX/RXRadio Station TransmittersTV Station TransmittersRadar TransmittersCell TowerTransmittersVehicle TransmittersSatellite TransmittersPortable TransmittersRF EnergyRF EnergyRF EnergyRF EnergyRF EnergyRF EnergyRF EnergyRF EnergyBluetoothWi-FiRF Energy  Fig. 7.1       Radio Energy Atmosphere affecting a module        7.1  Introduction230electronics for its intended operation is deﬁ ned as the immunity from the radio energy when the radio energy is transferred by electrical conduction. In simple terms we can say “I don’t get disturbed when neighbors knock my doors or walls”.   7.2     Automotive Radiated Emission  In automotive design space radiated emissions are deﬁ ned as the radio frequency energy radiated by the module into the atmosphere due to the energized electronics embedded inside the module. In order to determine the effects of radiated emis-sions, it is desired that emissions are measured by the measuring equipment to understand the limits of the emissions to determine their impact to the United States Frequency Spectrum. The Radio Frequency allocation table and spectrum is deﬁ ned by the U.S. Department of Commerce, National Telecommunications and Information Administration. A latest copy of US frequency spectrum may be down-loaded online (Fig.  7.2 ).   Protecting the target market radio frequency spectrum is the primary reason to comply with radiated emissions limits deﬁ ned by the target market. However, the majority of the automotive OEM’s perform the testing based on a global compli-ance, which means they test almost every frequency band covered globally. This makes it easy to market their products across the board without re-doing the focused testing for a new market.  The second reason to perform radiated emissions testing is to understand if the existing qualiﬁ ed already installed modules inside the vehicle are fully operational throughout the well-deﬁ ned operational envelop of a  new module . In order to verify that the new module is not radiating emissions detrimental to the other vehicle mod-ules, it requires testing the new module by installing it inside of a real vehicle. The new module must be installed at its pre-deﬁ ned location next to new or old  ‘neighborhood’. At the end of the day all new and old modules are placed inside the vehicle, powered up and then conﬁ gured to function as per design intent. After pre-paring the vehicle systems, the team must conduct a thorough vehicle operational testing to conﬁ rm if the radiated emissions originating from every module inside the vehicle is not causing any negative effect to any vehicle electronics system. Module REBatteryAtmosphere  Fig. 7.2    Radiated Emissions to the atmosphere        7 Module and Vehicle EMC Compliance231 When all has done with the intent of conﬁ rming modules operational integrity to function correctly, the vehicle itself has to go through the radiations emissions test-ing to qualify for the target market electromagnetic compliance.  7.3     Automotive Conducted Emission  Conducted emissions are deﬁ ned as the radio energy conducted by the module through the electrical wiring, generated due to the electronics embedded inside the module. It is desired that conducted emissions are measured by the measuring equipment to understand the level of conducted emissions energy that may impact the typical vehicle wiring. A conducted emissions level must not infringe negatively on the US frequency spectrum deﬁ ned by the Department of Commerce, U.S. National Telecommunications and Information Administration (Fig.  7.3 ).   7.4     Automotive Radiated Immunity  Radiated Immunity is deﬁ ned as the resilience of electronics module to sustain its operation undisturbed without getting impacted by the radiant energy already pre-sented in the atmosphere. It is desired that the device resilience to the radiated immunity must be quantiﬁ ed by beaming the radiant energy onto the module while its key functions and features are measured, observed and recorded. This ensures that the module will perform as per design intent. It is required that when perform-ing these tests a fully compliant calibrated specialized equipment must be used to aim radiant energy onto the module. The module must not deviate from its pre- deﬁ ned operational envelop.  In simple terms, it is the inverse of radiated emissions meaning that now the module has to face the simulated US frequency spectrum radiant energy. In addition to this fundamental principle, there are more steps automotive design space has to take to countermeasure many other types of radiated immunity tests. This will be explained in later sections (Fig.  7.4 ).   7.5     Automotive Conducted Immunity  Conducted immunity is deﬁ ned as the resilience of an electronics module to sustain its undisturbed operation when the undesired electrical energy is imposed by the vehicle electrical, electronics and electromagnetic systems over the electrical Module CEBattery   Fig. 7.3    Conducted Emissions to the atmosphere        7.5  Automotive Conducted Immunity232connections of the module. Conducted immunity requires that power feeding elec-trical wires of module must be subjected to many different electrical disturbances inherently found in a typical vehicle (Fig.  7.5 )   7.6     Automotive Radiated Emissions Testing  This test requires that the module is turned on completely while its entire electronics and clock sources are powered. All other frequency related electronics required for normal operation must be up and running. If pulse width modulated signals are used then the module must be programmed to send pulses at the rate of 50 % duty cycle or at the rate proven to be the worst for the emissions to the simulated loads. The purpose of radiated emissions test is to verify that the module is not radiating energy harmful for an already existing radio frequency energy space present in the real world.  How would you test the radiations originating from the module when the radiant energy in the real world is actively present? For example in the from of existing real-world radio transmitting towers, cellular phone towers, radar stations, satellite transmissions, and local RF energy emitters like, Bluetooth, cell phone, Wi-Fi, and variety of other gadgets.  The answer is not that simple; we must hide, and hide in a cave far from the modern world, nonetheless it is difﬁ cult to run away from the modern world, so we need to ﬁ nd a space free from radio energy where we can hide from the existing radiant energy to make our case. The hiding place is deﬁ ned as a space or room that must now allow any radio energy inside. This room must be capable of absorbing all radio energy, which means it must not allow even the weakest signal of radio energy inside the room. This room exists and in a technical term recognized as the RF Chamber. The RF Chamber had been a great topic for the writers of EMC  speciﬁ cations; one of the speciﬁ cation writers is CISPR. It is a French committee to develop wide variety of speciﬁ cation on the subject EMC. However famous speci-ﬁ cations of RF Chamber designs are recognized by CISPR25, and CISPR22.   CISPR     The Comite International Special des Perturbations Radioelectriques or in English the International special committee on Radio Interference is best known by Module RIBattery   Fig. 7.4    Radiated Immunity, a quality to absorb radio wireless energy       Module CINoise  Fig. 7.5    Conducted Immunity to absorb unwanted conducted energy         7 Module and Vehicle EMC Compliance233its abbreviation CISPR, is a special committee under the sponsorship of the International Electrotechnical Commissions (IEC). The membership is from national committees of the IEC, and other number of other international organizations inter-ested in the reduction of the radio interference. CISPR was founded in 1934.    http://www.cclab.com/cispr.htm       In Fig.  7.6 , a module is shown inside the chamber. It is powered by the vehicle battery, a standard mandatory requirements while the EMC testing has been con-ducted inside the chambers. All EMC test sites across the board use the vehicle battery for similar set of EMC testing inside the chambers due to the fact that battery power is the only non-electronic cleanest ﬁ ltered power source available to do the job. No other electronic power can replace the battery power.   The module must be powered up with all of its clock-sources fully operational. All frequency related functions must be active. All PWM outputs must be at 50 % duty cycle with correct loading current. RF Radiated emissions are then received by the antenna, which feeds the sophisticated electronic measuring system meant to understand the limits of radiations deﬁ ned by the respective vehicle manufacturer. Multiple antennas are utilized to capture the radiated emissions for many different frequency bands like for example:(cid:129)    Rod Antenna to cover 0.15–30 MHz range  (cid:129)   Log Periodic Antenna to cover 200–1,000 MHz range  (cid:129)   Bi-conical Antenna to cover 30–200 MHz range  (cid:129)   Horn Antenna to cover above 1 GHz range    BatteryRF ReceiversComputerbased measuringSystemModule RE  Fig. 7.6    Module radiated emissions test set-up        7.6  Automotive Radiated Emissions Testing234 It is an interesting fact that radiated emissions testing set-up is pretty simple to make compared to other immunity tests set-up. It only requires battery-power to turn-on the module when it is placed inside an anechoic chamber. However, this is the most expensive test setup for the EMC lab to undertake due to the expensive construction of an anechoic chamber. It requires compliance with the EMC stan-dards deﬁ ned in CISPR, IEC, SAE and others speciﬁ cations and by far the most expensive real state in any EMC lab.  The bus does not stop here, and on the same token, vehicle level EMC compli-ance testing is a capital investment too. Yet, there are vehicle manufacturers who invested in their own vehicle level EMC test chambers. It is amazing to see a vehicle parked in an anechoic chamber, big enough to accommodate not only a large size vehicle, but antenna and movement space to conduct radiated and con-ducted emissions testing for the entire vehicle. However, the EMC compliance is so fundamental in nature that the commercial and military airplanes ﬂ ying over our heads are also required to pass the EMC testing. Imagine the size of an anechoic chamber being utilized in the aerospace industry where the airplane has to be brought in to perform testing based on strict aerospace safety and compliance stan-dards. A picture of a small airplane parked in an anechoic chamber in a controlled environment to perform EMC compliance testing could be an impressive reason to say ‘wow’.  It is impractical to build an EMC chamber to ﬁ t large commercial jet liners like B777, A380 or B747, however EMC test compliance of jetliners are still required. Hence it is accomplished by ‘divide and conquer’ strategy, where an engine may be tested separately or avionics systems separately, and so on.  Another interesting example of EMC compliance that may blow you away is the compliance needed for a cruise missile launched to destroy an enemy target. You may wonder why we needed EMC compliance for a missile designed to wreck destruction on the enemy target. We should not be worrying for enemy airspace let alone the frequency spectrum space. The answer may intrigue you because now it is more essential to design electronics and navigation systems to safely function in both ‘radio energy atmosphere’. A negative effect of either RF energy spectrum may jeopardize the navigation, guidance or on-board electronics.  It is a pretty common practice in the automotive industry that the module EMC compliance is neither conducted by the module manufacturer nor by the vehicle manufacturer. Rather it is the job of an independent EMC lab to perform the EMC testing. There are two major milestones for any EMC lab to achieve before they can be tasked to test the automotive vehicle module:(cid:129)    A2LA accreditation (American Association of Laboratory Accreditation)  (cid:129)   Vehicle manufacturer recognition     EMC labs cannot perform a well-deﬁ ned set of EMC testing without the accredi-tation of A2LA. In addition to A2LA, it is also required that the EMC lab must be recognized by the vehicle manufacturer. So it is mandatory for any module design center to test and validate their products in an approved test facility recognized by the vehicle manufacturer to get the engineering sign-off on the product or module. 7 Module and Vehicle EMC Compliance235 If the EMC lab is not located in USA, then it can work with International Laboratory of Accreditation Corporation (ILAC), and A2LA subsequently to get the beneﬁ t of being recognized by both entities. Additionally, vehicle manufacturer approved test ﬁ xture set-up is essentially required to conform to the speciﬁ cations released by the respective vehicle manufacturer to carry out the respective OEM way of testing. It is important to understand that each automotive OEM owns EMC test procedures, and test ﬁ xture set-up as per their corporate speciﬁ cations. EMC labs need to get the approval of vehicle manufacturer before it can kick-off any EMC testing.  Some of the CISPR, ISO and IEC speciﬁ cations are listed below:(cid:129)    IEC and CISPR 25—Anechoic Chamber for Radiated Emissions  (cid:129)   ISO 11452-2—Anechoic Chamber Radiated Immunity  (cid:129)   ISO 11452-4—Bulk Current Injection  (cid:129)   ISO 11452-8—Immunity to Magnetic Field  (cid:129)   ISO 11452-9—Immunity to Portable transmitter  (cid:129)   ISO 7637-3—Transient Immunity  (cid:129)   ISO 10605—Electrostatic Discharge     CISPR, a French EMC committee, has established a variety of standards for the EMC related documents. One of its standards, CISPR 25, is well known in EMC industry for the anechoic chamber. The CISPR 25 outlines the needs and wants of a room isolated from real world radio-energy around us, so that the electronics devices could be tested without the effects of existing radio energy spectrum that will impact the device under test. In Fig.  7.7  a picture of chamber is shown. As can be seen, the surrounding cones on the chamber walls are used to insulate the RF energy to com-pletely absorb the energy from the outside radio energy. The table is used to place the module, where antenna is used to learn about the emissions from the module. It is required that many antennas must be used to cover all the frequency spectrum mandated for the testing and the target market frequency spectrum.     Fig. 7.7    CISPR 25 EMC chamber        7.6  Automotive Radiated Emissions Testing2367.7     Automotive Conducted Emissions Testing  This test requires that the module must turn on completely with all clock-sources, and generating pulses required for normal operation. The purpose of this test is to verify that module power and return lines are not conducting harmful energy to the vehicle battery power distribution network. This harmful energy can feed other modules and thereby create another issue.  This issue is that the primary non-compliance of conducted emissions to the bat-tery power distribution network could create secondary non-compliance by trigger-ing radiated emissions through the vehicle wires because now the vehicle wires act like a transmit antenna.  In order to test the conducted emissions from the module, the power feeding lines are monitored by the measuring equipment, which must pass through the line impedance stabilization network (LISN). The conducted emissions have a deﬁ ned frequency envelop and in order to measure as per ISO standards, an appropriate LISN has to be placed between the measuring equipment and the originator of the emissions. As the name suggests it stabilizes the line impedance to have measure-ment consistency even though the noise frequency spectrum may be changing. As we know varying frequency will change the dynamics of impedance. The LISN is used across the board by the EMC labs, and it is potentially not dependent on the vehicle OEM unless otherwise directed by the vehicle OEM (Fig.  7.8 ).   The conducted emissions testing set-up does not require an anechoic chamber. The module power and return lines are monitored for the conducted emissions orig-inating from the module.  7.8     Testing RF Radiated Immunity Above 400–3,100 MHz  It is the reverse process of radiated emissions and now the predator is the prey. In radiated emissions, we measured noise exiting out of the module. However in RF radiated immunity we purposely aim the module to try absorbing radio energy from the transmitting antenna in order to check how good the module is to ignore, absorb or get ‘annoyed’ by the noise transmitted by the transmit antenna. So in reality we try to ‘irritate’ the module by sending radio energy towards the module.  This test requires that the unit must be turned on completely to function as per design intent by making it fully operational, and then a series of radio frequency Measuring EquipmentLine Impedance Stabliza(cid:2)on Network (LISN)Module CEBattery   Fig. 7.8    Module conducted emissions test set-up        7 Module and Vehicle EMC Compliance237energy is bombarded on the overall chassis of the module. The module must func-tion correctly throughout the period of time while the radiant energy is targeted onto the module. There are good chances that in a ﬁ rst-time design the module may devi-ate from its operational envelop functions. However based on the module designed scope there is some room for degradation of functions allowed.  There are many bands of radiated immunity tests that the automotive module must have to go through to learn ‘quality’ or resilience of module to absorb energy thereby achieving a ‘thumbs-up’ scenario. Earlier in radiated emissions testing, we had used multiple receive antennas to measure radiated emissions. But now the positions has reversed and in this scenario the transmit antenna is sending the radio energy to the module under test. The frequency envelop of this test is 400–3,100 MHz  In this test it is required that the transmit antenna must be positioned at a pre- deﬁ ned distance from the module. After the antenna is powered up, a low-stress level radio transmission (400–3,100 MHz) must be bombarded on to the module, treating the module as one piece even if the module has a plastic case, a glass shield, a metal chassis or mixture of any combination.  The entire body of the module must have to be oriented towards the radiant energy transmit antenna bombardment. Even so, a single orientation may not sufﬁ ce to simulate the real world usage proﬁ le. So for all practical purposes, different orien-tations are selected to test the module in order to understand how the vehicle move-ments in the real world will play out to the module resilience against radio energy.  While the tests are being conducted the functions of the module are being observed to see the degradation of operation in order to determine if it is safe to deploy the new module in a costly vehicle launch. Often it is not easily determined, so a cross-functional team may need to gather for a review of EMC lab ﬁ ndings, if it is critical for the system to go or no-go for the vehicle use. If the scenario is a no-go then a proper redesign is needed. The failure of radiated compliance had, on many occasions, resulted in a metallic chassis or apertures and openings to be re- designed. Nevertheless electronics re-design is often the case as well! (Fig.  7.9 )   ModuleFunctional VerificationSet-UpRF TrnasmittersModuleBatteryComputerControl SystemOptical LinkOptical Link   Fig. 7.9    Module radiated immunity test set-up        7.8  Testing RF Radiated Immunity Above 400–3,100 MHz2387.9     Testing Radiated Immunity Bulk Current Injection Method  In a second scenario, there is a way to inject bulk current pulses over the wire bun-dle connected to the module. The purpose is to inject controlled RF stress levels to the module harness. The test’s intent is to capture weakness in the module by virtue of a harness connected to the module and system components. It is called the RF energy susceptibility test with the frequency envelope of 1–400 MHz  It is important to understand the method by which the controlled RF stress is applied. Unlike the previous method where the transmit antenna was utilized, this test does not employ any transmit antenna for many good engineering reasons. All it does is that it uses the injection probe to apply RF stress levels without being electrically connected to the harness. The test simulates the conditions that exist inside the vehicle where wires or harnesses may be inﬂ uenced by localized coupling that may act like transmit antenna unintentionally. It is a well-established scenario where you could have transmitters installed in a module or system components.  The smart way to provide the RF stress level without physically connecting the wires is to employ a clamp. The clamp is a mechanical device with a moveable jaw so that the harness may be placed inside the clamp openings. Inside of the clamp a wire-loop representing the secondary of a transformer is enclosed, where the pri-mary loop is connected to the RF ampliﬁ er. The one round of secondary connected to the RF ampliﬁ er is needed to induce the RF currents. The energy of RF stress levels is now sent to the injection probe thereby creating RF disturbances.  The clamp attachment-points to the harness are subject to a vehicle manufactur-er’s governing document’s recommended positions. These positions are deﬁ ned in the EMC test set-up and procedures. These are the documents the EMC lab follows to conduct module level testing. The ‘passing grades’ are deﬁ ned in the module EMC test plan submitted to the vehicle OEM. The module design team requires submitting the proposal for pass-fail grades. Nevertheless, the owner of the system and vehicle manufacturer have the ﬁ nal say to determine the ‘grading’. Safety criti-cal modules must get [A] or [A+] grade.  In Fig.  7.10  a typical set-up utilized by the EMC labs is shown. But before the test begins, the set-up requires connecting the module to the pre-deﬁ ned length of harness. This is the basic requirement of the bulk current injection test to have the harness built just for this test, let’s call it a BCI harness. The length of BCI cable is not disclosed here due to conﬁ dentiality issues. So, one-end of the BCI cable is attached with the module, and the other-end to the module functional load box. The distance simulates the vehicle harness length that could see the unintended RF energy inside the vehicle.   When the module is powered-up and running, the key operational features are being monitored. This is done by utilizing the monitoring equipment to make sure that module key functional parameters are seen on the measuring equipment for recording purposes. The purpose of this exercise is to learn later if the degradation of performance is actually happening during the tests. The tests are then conducted by injecting RF currents utilizing bulk current injection probe wrapped around over the harness. The clamp is used to secure the bulk current injection probe over the harness. 7 Module and Vehicle EMC Compliance239After a ﬁ rm set-up the disturbances are applied depicted in Fig.  7.10 . While the  disturbances are applied the operation of modules is monitored and recorded by employing the relevant equipment. The BCI probe position is moved over the harness to simulate closer or farther distance proximity from the RF stress level. A total of three positions have been used by many vehicle OEM’s. Figure  7.10  [move left arrow] and [move right arrow] demonstrates the fact that it could be moved in any direction to place in three different positions.  There is an important aspect of BCI testing, where testing must be conducted to understand the impact of noise nullifying the effects of common mode and differen-tial mode rejection ratio. In order to pursue that avenue the set-up must be modiﬁ ed by removing all the return lines (ground lines) from the injection probe, and placing them separately on the test set-up ground plane.  BCI testing has been incorporated in automotive, aerospace and military. The criti-cal feature of bulk current injection probe is to inject RF level within the vehicle atmo-sphere to understand the impacts on the module performance. The lengths of the cable along with copper conductors connected to the module are the foremost target of bulk current injection. The reason for doing that is to test and qualify different scenarios in a typical vehicle when the harness and modules are routed inside the vehicle  7.10     Cellular Phone Immunity Tests  As shown in Fig.  7.1  at the beginning of the chapter, the cell phone was shown as a transmitter and as a receiver. It is essential to test radio energy transmitted by the cel-lular phone transmitter because it may disturb the module operation within its range. This happens when the cell phone is placed close to the vehicle module where the transmit power may impact the safe operation of the module in a close proximity. As stated the word ‘close proximity’ ampliﬁ es the meaning that not all modules are really required falling in the category of testing the compliance. The detail of distance requirements to test or not to test is based on the close proximity of the module verses the cell phone placement, even so the fundamental principle applies how powerful the cell phone transmitter is verses how close the module is installed inside the vehicle. Move LeftMove Right     ClampMonitoringEquipmentHarness Length Defined  by the Vehicle ManufacturerBattery ModuleFunctionalLoad BoxModuleLISNRF  1MHz-400 MHzComputer ControlBulk Current Injection  Fig. 7.10    Bulk current injection test set-up        7.10  Cellular Phone Immunity Tests240 A test set-up shown in Fig.  7.11  is pretty similar to BCI test set-up. Nonetheless it is a different test. The RF transmit antenna is hooked with the RF transmitter electronics that could transmit frequency envelop of 360–2,700 MHz with different transmit powers covering cell phone range globally including GSM band used in Europe or many major portions of the world. The transmit antenna is moved over the module at multiple pre-deﬁ ned locations with a distance [d] by the help of a cali-brated moving arm in order to maintain consistency over the antenna positions. As per normal practice in all immunity tests, the module operational functions are mon-itored through the module functional load box.   7.11     Testing Conducted Immunity  This test requires that the module must be turned on completely to function as per design intent and after that a sequence of radio frequency energy is bombarded on the overall chassis of the module. The module must function correctly throughout the period of time while the radiant energy is bombarded on to the module. However there is room for some degradation of functions based on the module functions performance.  7.12     Testing Automotive Conducted and Coupled Immunity  Counter measuring the events in the vehicle due to local electromagnetics switch-ing, motor-rotations, relay-chattering, back EMF and inductive-load in-rush current events creates a different kind of failure mechanism, where noise could either be coupling or conducted through the copper wires running all across the vehicle. It is a major challenge faced by the vehicle manufacturer. Taking this challenge in their own hands is like a corporate directive to comply with corporate standards of “vehi-cle energy atmosphere”. The vehicle atmosphere compliance is needed to become MonitoringEquipmentLISNRF 360MHz to 2700MHzComputer ControlBattery Harness Length Defined  by the Vehicle ManufacturerMoveable arm antennaModule Functional Load BoxModule  Fig. 7.11    Cell phone transmission test set-up        7 Module and Vehicle EMC Compliance241the best among the competition. However all it relies how the corporate require-ments are deﬁ ned, the more stringent requirements means kind a ‘radio salience’ 1  environment which could beneﬁ t greatly—not only the safe operation of electrical systems, but also a reception performance dearly—installed in a typical vehicle.  There are many areas of concern in the vehicle wiring, devices and modules enclosed in a rigidly tied space. Here we examine a few major contributors listed below, and shown in Fig.  7.12  affecting the noise coupling and conducting that could impact overall system performance: (cid:129)    Module wires cross-coupling or conducted noise  (cid:129)   System components, devices cross-wire coupling or conducted noise  (cid:129)   Electromagnetic devices coupling or conducted noise     As shown in Fig.  7.12 , a vehicle system may see noise due to wiring, module and electromagnetic devices. However, it is a complex interaction of synergies among the emitters and the absorbers. Yet for the sake of further clariﬁ cation, we list and deﬁ ne additional governing factors affecting the EMC compliance:(cid:129)     Modules:  A module could be an emitter of energy, and at the same time it could be an absorber because of its good ground plane or highly conductive large sur-face area or by the design of a fully enclosed chassis. Furthermore, module installation location near, far or attachment to the vehicle body could be an advantage or disadvantage depending on which side of the ‘story’ plays out more effectively. There have been issues recorded by a vehicle manufacturer where the location next to an emitter has caused neighboring system faults.  (cid:129)    Number of wires:  The number of wires routed in the vehicle few or many could generate secondary effects of disturbance subject to the proximity of wires near 1   Radio silence terminology is used when navy submarine turns-off all radio communication to avoid detection by enemy sonar. However it generally means no radio energy being generated by the equipment. NoiseA Vehicle SystemElectromagnetic devicesModuleWiringoElectromagnetic devices coupling or conducted noise  Fig. 7.12    A vehicle system interaction of noise        7.12  Testing Automotive Conducted and Coupled Immunity242or far from the disturbing source. If the wire is being used to enable or disable a system resource, it may get falsely triggered. In other scenarios when the wires are bundled, a different type of failure could happen where source disturbance plays down a cross-coupling role to affect the degradation of the signal’s com-mon mode rejection ratio.  (cid:129)    Event Timing:  The time of the event is another factor to consider because a source disturbance at a critical time for a system may induce a failure with no recovery from the module software. It is a well-established fact that when an engine crank happens, all “hell breaks loose” because battery voltage dips, and cycles through the dips pending engine start. The starter motor “kicks in” and ‘hogs’ all ‘juice’ from the battery until the starter motor stops, and while waiting for the starter motor to ﬁ nish hogging the battery juice, every module struggles to keep up the timing to get their “act together”.  (cid:129)    Characteristics of wires  like wire gauge, shielding, and twisting have some role to play when the energy is induced on the wires. A shielded cable is a better choice to absorb energy for signals sensitive to noise. It is a good practice to fol-low to have shielding when the system resource requires traveling far distance route subject to module-sensor cable length, routing or installation location of the components. A twisted pair of wiring within the vehicle is needed when the common mode rejection ratio (CMRR) advantages are available.  (cid:129)    Length of wires or harness , play a vital role as they may induce noise at termina-tion points, along the routes of attachments near or far from the source distur-bances. An electrically terminated wire, or un-terminated will impact the noise or may generate antenna effects subject to signal attributes.  (cid:129)    Electrical grounding  is a major factor for the radiated emissions, and immunity compliance testing. In actual fact every vehicle OEM issues a directive within the module EMC test plan to make sure to test the module correctly. When the module is installed in the vehicle rigidly attached to the vehicle chassis, then the testing must have to be conducted by placing the module on a ground-plane inside the EMC chambers, and on the other hand if the module is insulated from the vehicle chassis then it must be placed on the insulated foam in the EMC chambers. It makes a huge difference on the overall performance of radiated emissions, and radiated immunity when the module is placed on the ground plane verses insulated and placed on the foam. However, the debate of “good, bad or ugly” rests on the test results, and not necessarily based on insulated foam placement or vehicle chassis ground. While the module is in the EMC chambers for testing, a grounded module will see a perfect ground. However in the real world of vehicles there exists no perfect ground. Rather all grounded terminals are available as noisy grounds or quiet grounds. A noisy ground is where electri-cal currents are surging badly. A quiet ground is where low currents are surging badly, so in reality there is no such thing like perfectly good quiet ground.  (cid:129)    Numbers of electromagnetic devices like relays, motors, solenoids are  key enablers for the electrical noise injected in vehicle electrical systems. An effect of these devices is to induce unwanted energy either through the wires or coupled magnetically or radiated over the air. Actually this is the biggest source of noises 7 Module and Vehicle EMC Compliance243across the board. A blower motor control over the PWM is like generating type of noises requires so much to invest to counter it.  (cid:129)    High current switching  in a typical vehicle could be realized either by transistor switching or through the relay-contacts. Each may generate different kind of noise scenario depending on the load-current, switching-speed, relay-coil current, and relay contacts arching subject to load current, length of wire, and copper contents.  (cid:129)    Distance of harness  from the electromagnetic devices and other noise source emitters is a signiﬁ cant factor which could play out positively or negatively.  (cid:129)    Vehicle Communication buses  are differential pair of wires routed across the vehicle chassis, so does its susceptibility to the electromagnetic devices and other noise source emitters. There are deﬁ ned rules for the bus terminations, bus impedance, capacitive loading of the bus to comply with safe operation. It includes, but not limited too high, and low voltage margins, matched termina-tions. A mismatched termination could cause serious EMC concerns. A mis-matched bus impedance could be a module having improper impedance or missing termination resistors.     The vehicle atmosphere or playground represents all the electronic components, harnesses, wires, battery power feeds and the modules as shown in Fig.  7.13 . It is shown here to emphasize the fact that each device, module and battery is connected through wires enclosed inside a vehicle. The vehicle chassis universally worked as a battery negative. The devices close to the engine are connected directly to the battery by shorter distances; however, this creates a noisy ground (NG) because the majority of high current surges are happening closer to the engine. The starter motor, steering wheel high-torque motor and many other high-current switching are the enablers. There are points at the vehicle chassis, where ground placements have the beneﬁ t of not as noisy, and could be referred as quite ground (QG). But this is just a relative term.  QG    NGHarnessSolenoidsMotorsHarnessWiresBatteryB+ GNDModuleStarterRelay CoilsRelay ContactsAlternator WindingsSwitching TransistorsVehicle ChassisVehicle Chassis  Fig. 7.13    Vehicle ‘playground’ for EMC noise coupling and conduction        7.12  Testing Automotive Conducted and Coupled Immunity244 It is absolutely required to test, verify that the conductive noise, and coupled noise generated locally are not negatively inﬂ uencing the safe operation of module, and systems. A typical vehicle comprises of small signals, medium current signals, and high-current power current ﬂ owing onto the wiring. The vehicle energy atmo-sphere is ﬁ lled with ‘cocktail’ of ‘juices’ deﬁ ned in Fig.  7.1  earlier.  Based on these factors and many different vehicle related factors, vehicle manu-facturers have come to rescue the vehicle electrical and electronic system by deﬁ n-ing EMC test coverage and delineated some recommended test ﬁ xtures. The details of these tests and test set-up are copyright protected information to the vehicle manufacturers. Nonetheless for the sake of education we are listing generalized areas of weaknesses in the vehicle electrical system with reference to EMC compli-ance, and how these weaknesses would have been addressed to test and evaluate by deploying the specialized test set-up vehicle manufacturer have deﬁ ned.  A quick synopsis of test coverage is listed below:(cid:129)    Module vehicle system wiring that carries signals operates safely. It must not couple noise detrimental for the signal integrity on the wire.  (cid:129)   Module vehicle wiring that carries B+ line operates safely, and must not incor-rectly provide power unsafe for module operation.  (cid:129)   Module vehicle wiring that carries GND line operates safely, and offset voltage drop to ground for each independent module must not go beyond a certain limit.  (cid:129)   Module must not get damaged while the load dump pulse is applied to the power feeds  (cid:129)   Module must not get damaged when the Electrostatic Discharge is applied to each and every pin exposed to the vehicle harness or wiring or human body touch in powered condition in vehicles, repair centers, test and research centers  (cid:129)   Module must not get damaged when the Electrostatic Discharge is applied to each and every contact exposed to the human body touch in unpowered condi-tion like it happens in transportation mode when the module is not powered  (cid:129)   Module must not get permanently damaged when the module enclosure is sub-jected to the electrostatic discharge test.  (cid:129)   Module must not get damaged when the battery polarities are reversed for a short or a prolong period of time  (cid:129)   Module must detect if the battery voltage increases above its operational envelop, and module must not get damaged if the overvoltage sustains for a prolong period of time either transient or steady-state.  (cid:129)   Module must not get damaged when dual battery power in-series is applied inad-vertently for a short or longer period of time.  (cid:129)   Module must perform normally even when the battery B+ is exposed to voltage ﬂ uctuations, noise injections, transient and continuous disturbance  (cid:129)   Module must survive all crank events for all practical purposes needed for its functions, if any deﬁ ned in the functional scope  (cid:129)   Module must recover after a short-duration of battery drop-out.     In Table  7.1  the summary of conducted immunity tests coverage are tabulated. The attributes are listed in the ﬁ rst column, and next to each attribute type of con-ducted immunity is deﬁ ned. It is interesting to note that B+ has the highest number of coverage listed as listed twice in top and bottom rows. The wire-coupling tests are covered across the board for all attributes.7 Module and Vehicle EMC Compliance245     Table 7.1    Conducted immunity coverage    Attributes  Conducted immunity test coverage  B+  Wire coupling  ESD unpowered  Reverse polarity  Continuous disturbance  Noise injection  Transient Disturbances  –  GND  Wire coupling  ESD unpowered  Ground shift  –  –  –  –  All Signals  Wire coupling  ESD unpowered  Short to GND a   Short to B+ a   Shorted together a   –  –  Chassis  Floating  ESD unpowered  Orientation (RF Immunity)  Grounded  –  –  ESD  Start Switch  Wire coupling  ESD unpowered  Cold Crank recovery  –  Warm Crank recovery  Transient disturbances  –  CAN Bus  Wire coupling  ESD unpowered  Short to GND  Short to B+  Shorted together  Cold Crank recovery  ESD  Customer Touchable Surface  –  ESD unpowered  –  –  –  –  ESD  B+  Double battery  Cold Crank recovery  Load dump  Drop-out recovery  Warm Crank recovery  –    a Tests covered in design validation testing, these are short-term conditions  7.12  Testing Automotive Conducted and Coupled Immunity2467.13        Immunity Tests Operational Classiﬁ cations  All immunity tests require operational veriﬁ cation of the modules, which is differ-ent than the emissions tests where corporate and regulatory compliance is needed to either comply or non-compliance the test-criterion set-forth by the vehicle manufac-turer to meet the federal regulatory requirements.  While performing the immunity tests, module operational performance is moni-tored with great interest. In order to see how minor or major degradation of  functions is achievable in the simulated world of radiant energy. The possible outcome of results must be reviewed with reference to system performance. Furthermore the results require reviewing under the guidelines of vehicle manufacturer approved-EMC- test-plan, system design authority, and relevant cross-functional team to take decision either to ‘ﬁ x it’ or ‘don’t ﬁ x it’ scenario.  The degradation of functional performance has been classiﬁ ed by deﬁ ning mul-tiple cases of failures or performance degradation to the module required to be tested. Let’s summarized for the sake of education some categories deﬁ ned as Operational Classiﬁ cations.  Depending upon the vehicle manufacture it could have different nomenclature or naming convention. The purpose of this exercise is to communicate to the reader about the functional performance degradation allowed under certain conditions. 7.13.1     Operational Classiﬁ cation 1  There is no performance degradation allowed. The module must function to its designed operational envelop during and after the exposure to the radiant or conducted energy disturbances. A good example is an airbag module where no performance deg-radation is possible. The sole responsibility of ﬁ ring the airbag squib to deploy the airbag cannot be compromised. The safety of airbag system for in-time airbag deploy-ment, and to greater extent occupant’s safety equipment must not be compromised.  7.13.2     Operational Classiﬁ cation 2  There is a minor performance degradation allowed. The module may deviate from its designed operational envelop during exposure to radiant or conducted energy disturbances, but the safety of the vehicle and occupants must not be compromised. Furthermore the module must return to normal operational mode automatically once the radiated or conducted energy disturbances have been removed.  A good example is a module losing functionality when the disturbances have been applied; however, after the disturbances are removed the module recovers without out any degradation of functions either because of a fail-safe hardware or by a software procedure through a controlled recovery.  7 Module and Vehicle EMC Compliance2477.13.3     Operational Classiﬁ cation 3  There is some performance degradation allowed. The module may deviate from its designed operational envelop during the exposure by the radiant or conducted energy disturbances, but the safety of the vehicle and occupants must not be com-promised. Furthermore the module must return to normal with some minor manual intervention when the radiated or conducted energy disturbances have been removed. The Operational Classiﬁ cation 3 module must not be allowed to experi-ence irrecoverable damage to the module software and hardware.  A good example is a module working as a slave module for an up-level master module, the disturbances causes the slave-module to enter in a degraded perfor-mance, but immediately upon learning that slave module is not responding, master tries to restart the operational readiness of the slave-module by sending commands either through the manual intervention or by an automatic procedure. So, if the slave module gets back to work after the disturbances are removed then the slave module complies with operational classiﬁ cation 3.  7.13.4     Operational Classiﬁ cation 4  A complete loss of function or a major degradation of performance is allowed. The module must not experience permanent damage to its electronics, printed circuit board and software features after working through series of conducted or radiated disturbances that have been applied—while the module was either powered-up or powered-down  A good example is an electrostatic discharge (ESD) testing where module must survive the high voltage ESD discharge points, the module may render unresponsive for a short or long period of time, yet after ﬁ nishing the tests it must recover when reenergized or get back to fully operational mode upon receiving a master reset signal deﬁ ned in software as the cold start.  In the real world a lightning strike may drive the modules to go in an undeﬁ ned state that could render module completely unresponsive, or where it may become permanently damaged. But this is a situation that may not be comprehended in any electronics design let alone automotive design space.   7.14     Module Wire Coupling Tests  This is where rubber meets the road. In previous sections we had deﬁ ned how the noise coupling could affect systemic wiring issue in a typical vehicle. The question is what type of signal noise coupling is possible in a real vehicle harness? There are many, and the answer is tabulated in Table  7.2 .7.14  Module Wire Coupling Tests248   Table 7.2    Signal coupling chart    Source  Type of signal  Attribute  Copper wire  Current  Coupling  EMC coverage  Module  PWM dimming  Duty Cycle Modulated  Single  Low to medium  High  Required  Module  Digital, discrete  Differential, Single  Twisted, single  Low  Low  Optional  Module  Analog  Differential  Twisted  Low  Low  Optional  Relay Contacts  Transient pulse  Subject to loading type  Single  Extremely high  High  Required  Transistor Switch  Impulse  Subject to loading type  Single  High to low  Extremely high  Required  Starter Motor  In-rush current  Transient inductive voltages  Single  High  Extremely high  Required  Relay Coil Drive  Chattering relay  Pulsating noise  Single  Low  High  Required  Alternator  Charging current  Duty Cycle Modulated  Single  Low to high  High to low  Required  Blower Motor  High current  Duty Cycle Modulated  Single  Medium to high  Medium to high  Required  Ampliﬁ er  Audio  Differential  Twisted shielded  Low to medium  Low  Optional  RF Antenna  Low energy  Spectrum  Twisted shielded  Extremely low  Subject to spectrum  Required 7 Module and Vehicle EMC Compliance249   Coupling issues in the vehicle are attributed to the signal variations, source type, and proximity of wiring. So a unique test ﬁ xture is devised to test the coupling by simulating the signals, and/or by changing the signal attributes. The ﬁ xture is accordingly designed that it allows one-wire from the module harness, and one-wire from the noise-source placed side-by-side to couple electrically—but bear in mind— not connected electrically . A well-deﬁ ned length of wire is utilized to pair the wire-under-test with noise-inducing-wire [wire under test in Fig.  7.14 ]. Both wires coexist to simulate condition in the vehicle where neighboring wire could be gener-ating noise. The noise inducing wire is deﬁ ned as [noise inducing conductor] in Fig.  7.14 . The noise inducing conductor is connected to the noise injection electron-ics driven by the computer controlled DC ampliﬁ er so that the application software could generate different types of signal attributes with varying current and pulses.   The red lines show the path of noise travelling through the wire-loop, inducing noise to the module wire. If the module is equipped with 40 wires, then the test has to be repeated 40-times. The Junction Point 1 to Junction Point 2 is the mechanical test ﬁ xture that could be built by different methods like employing a ﬁ xed thick cop-per conductor with a ﬁ xed plastic enclosure on a wire-grooved-door to secure the wire under test, or by an aluminum enclosure or an aluminum foil.  The details of ﬁ xture design rests with the vehicle manufacturer. While the tests are being performed—each wire must have to be brought in to the ﬁ xture, and then returned back to the harness before the next wire is ready for testing.  The monitoring equipment works exactly the same way as it does in other immu-nity tests. However the test requires that the harness of the module must split open with each wire capable of being exposed to the noise-inducing-coupling-wire in the ﬁ xture. Noise InjectionHarness Length Defined  by the Vehicle ManufacturerNoise Coupling Conductor Length Defined by the Vehicle ManufacturerMonitoringEquipmentBattery Noise Inducing ElectronicsComputer ControlJunctionPoint 2JunctionPoint 1ModuleModuleFunctionalLoad BoxWire Under TestNoise Coupling Conductor  Fig. 7.14    Wire coupling tests        7.14  Module Wire Coupling Tests250 If the twisted and shielded pairs are the established part of the vehicle harness, then it must be cracked open partially for a small length of opening to be exposed to [noise coupling conductor]—while the coupling tests are being performed.  It is a standard practice in the automotive EMC testing that two sets of harness are deployed to run tests smoothly, where one set is used for coupling tests and other for rest of the testing.   Knowledge Test     Q :  If a module is attached to a harness having a total of 100 pins, how long it takes to ﬁ nish the wire coupling tests?    Answer: If each wire has to be coupled by ﬁ ve perturbations simulated by the noise inducing electronics, and if an average of 3 min is required to complete one pertur-bation test then a total of 100  ×  5  ×  3 = 1,500 min are required to test the module. This equates to 25 man hours of workload. If calculated at the rate of $57.35 per hour, a total of $1433.75 is needed for this test. About three shifts are required to furnish the testing    7.15     Module ESD Test  The ESD tests on modules simulate the conditions of the real world. A person walking on a carpet could be charged up to 25,000 V or 25 kV subject to relative humidity, see Table  7.3  for details. However If that person touches an unpowered module, an unfor-giving 25 kV Electrostatic Discharge surely applied right there at the touch point.   An ESD test on a module must be conducted either in powered-off or powered- on conditions. A powered-off condition exists while the modules are handled and trans-ported. A power-on condition mostly resides for in-vehicle usage. Yet lab testing could not be ruled out for a possible ESD event. In the vehicle if module is hidden under the seat away from human touch then the likelihood of ESD discharge are remote, but if the module, or module’s surface is touchable by the customer then there are good chances that an ESD event could happen over the life of the vehicle.  To countermeasure such events in the module, a testing method is required so that the weakness in the electronics design could be found. Before the test begins it should be known to the A2LA certiﬁ ed EMC lab where to apply the electrostatic    Table 7.3    Static voltage generation examples (Source: ESD Association)    Scenario  RH 10–25 % (V)  RH 65–90 % (V)  Walking across carpet  35,000  1,500  Walking across vinyl tile  12,000  250  Worker at bench   6,000  100  Poly bag picked up from bench  20,000  1,200  Chair with urethane foam  18,000  1,500    RH  relative humidity  7 Module and Vehicle EMC Compliance251discharge points to perform testing by utilizing the ESD gun. The ESD gun is the only equipment required for the tests. The test strike points are deﬁ ned inside the EMC test plan with clear pictorial representation like Fig.  7.16 . It is imperative to deﬁ ne strike points that are relevant to the electronics with a good sound under-standing of highly likely use-case of human body touch.  In the world of modules, many modules have customer touchable surfaces and these touchable surfaces are enormously critical for the ESD testing. However that does not mean that rest of the modules does not need ESD testing; almost all other modules require ESD testing.  If the electronics behind the control knobs in a vehicle has human touchable surfaces like station tuning knob, temperature adjustment knob, or fan speed con-trol, it is the best starting point to deﬁ ne the strike points right at the knobs because customer will touch these knobs more often than others.  Figure  7.15  shows the powered ESD test set-up, the module is required to be powered-up, but the monitoring is not forcefully desired. It is a standard protocol to check the functionality of the module after the testing has completed. As stated earlier it is the operational classiﬁ cation 4, where a module could go completely ‘wondering’, but will return back to normal when the power is re-cycled, or a mas-ter reset is issued.   The ESD gun could be programmed to strike 1–25 kV. Depending upon the type of module and the installation location in the vehicle, different voltage levels could be selected to perform testing. The 4, 8 or 25 kV are some of the common selections used in the testing. Multiple strike points are required to cover the testing. The strike points could strike ESD as contact discharge or air discharge. Both conditions may apply subject to module attributes and the location in the vehicle. Imagine yourself walking towards a vehicle, and if you can touch any module without even entering inside the car then there is a remote chance for it to an ESD event. Such conditions warrant a 25 kV air discharge test. ESD GunModule FunctionalLoad BoxModuleBatteryZAP  Fig. 7.15    An ESD Testing, module Powered-On        7.15  Module ESD Test252 The results of these tests usually encompass the weak electronic component that gets damaged during the tests. The permanent corrective of damaged component is the robustness improvement of the product. It is pretty common in the industry that failures happen in the ﬁ eld and happens at the module manufacturing locations, or in the vehicle manufacturing plants and the accountability goes to the electrical overstress (EOS).  The EOS related failures are subject to thorough investigative review by the semiconductor industry to understand their side of the story. The ﬁ eld warranty returns across the board in the industry ﬁ nd EOS as a signiﬁ cant contributor of fail-ures. However it is handled case by case basis, and at the end of the day, ESD is ‘blamed’ for all the ‘ills’.  So, it is greatly needed to develop strike points relevant to real world usage so that the weakness of the design could be found before the real world failures are going to occur (Fig.  7.16 ).   The unpowered ESD tests are simpler to perform. There are no wires, and no pre-deﬁ ned length of harness needed to get attach with the module. Yet, there is a need to bring out all the connector pins in a wider space so that the exposure to the ESD gun is optimally spaced.  In unpowered ESD testing all the module pins and enclosures are subject to ESD discharge path. The contacts discharge is required to perform testing on each and every pin.  7.16     Module Conducted Immunity Tests  The conducted immunity tests have a broader spectrum on the B+ line. However other attributes deﬁ ned in Table  7.1  are covered as well. In order to comply with conducted immunity, a test set-up is utilized to control B+ line of the module. XXXXFrontX     X = Strike PointsXXXXTopSide  Fig. 7.16    ESD strike points        7 Module and Vehicle EMC Compliance253The purpose of controlling the B+ line is to drive the module in controlled environ-ments so that all the conditions speciﬁ ed in Table  7.1  could be veriﬁ ed. There are ISO documents that could help to understand the wisdom and compliance, one of the documents worth reading is ISO 16750-2. Even so, in order to make it easier and simpler a broad spectrum of testing is listed below:(cid:129)    Fixed frequency noise to B+  (cid:129)   B+ Voltage Fluctuations  (cid:129)   Ground shift to B+  (cid:129)   Controlled B+ thresholds and Transient Noise  (cid:129)   Load dump pulse to B+    7.16.1     Fixed Frequency Noise to B+  The set-up requires that the noise is injected to the power input of the module. In order to add noise a programmable function generator is attached to the program-mable power source to superimpose noise on a clean DC power to verify the module operational performance under a noisy power rails. The test set-up drawing is depicted in Fig.  7.18 .  A noise coupled on B+ 13.5 is shown in Fig.  7.17 .   The test set-up is inducing noise by the help of programmable function genera-tor, whereas the programmable power source is providing power to the module. The module is connected to the functional load box to make it correctly operational before the monitoring equipment is hooked up with the set-up, the monitoring equipment could be just speciﬁ c to the module system design or may utilized stan-dard measuring equipment (Fig.  7.18 ).   TTime (s)0.002.50m5.00m7.50m10.00mVoltage (V)0.005.0010.0015.0020.0013.5V  Fig. 7.17    B+ ﬁ xed frequency noise induction        7.16  Module Conducted Immunity Tests2547.16.2     B+ Voltage Fluctuations  The set up requires that the module must undergo conditions where the power to the module must be interrupted at multiple voltage ramps for a brief interval to check the functional degradation of the module. Furthermore to this scenario, the module must see the noise injection during that brief interval. The module power must also be tested for 14 V, 11 V, 10 V, 8 V to verify intervals with noise injections. The test set-up drawing is depicted in Fig.  7.19  for educational purposes   TTime (s)0.0025.00m50.00m75.00m100.00mVoltage (V)0.005.0010.0015.0020.00  Fig. 7.19    B+ line voltage ﬂ uctuations       Harness Length Defined  by the Vehicle ManufacturerProgrammable Function GeneratorModule FunctionalLoad BoxModuleProgrammable Power SourceMonitoringEquipment  Fig. 7.18    B+ line ﬁ xed frequency noise induction test set-up         7 Module and Vehicle EMC Compliance2557.16.3     GND Shift to B+  The set-up requires that a controlled shift to ground-line is exercised to verify the operation of the module under GND shift conditions. A controlled ground shift ranging from 100 mV to 1.1 V can be tested to simulate the vehicle harness voltage drop. The test set-up drawing is depicted in Fig.  7.20 .   While the module under goes the GND shifts testing, the key features of the module are monitored to make sure that it complies with manufacturer’s pre-deﬁ ned fail-pass criterion. There are different intervals, and ground shift levels adapted by the vehicle manufacture, nonetheless an educational version of ground shift pulse is shown in Fig.  7.21 .   Harness Length Defined  by the Vehicle ManufacturerGROUND SHIFTCONTROLModule FunctionalLoad BoxModuleProgrammablePower SourceMonitoringEquipmentComputer Control  Fig. 7.20    GND shift test set-up       Time (s)0.0050.00m100.00m150.00m200.00mVoltage (V)0.00250.00m500.00m750.00m1.00  Fig. 7.21    GND shift pulse application         7.16  Module Conducted Immunity Tests2567.16.4     Controlled B+ Threshold and Transient Noise  These tests require that B+ is varied with sustained controlled thresholds and tran-sient pulse behavior to check the module susceptibility against these conditions as shown in Fig.  7.22 .   There are variety of B+ threshold adjustment which must be tested based on the module proﬁ le like for example if the module is designed to absorb power loss for 100 ms then tests must be performed in controlled environment to make sure that module sustain 100 ms drop-out conditions. Likewise on the same token the thresh-old levels must be mixed with random noise to perform testing  7.16.5     Load Dump Pulse  The load dump pulse is an electrical overstress applied to the module, it is required that the module must have to survive with all of its electronics, when the load dump pulse is applied. The ISO standards 16750 could be utilized to perform testing, however in the real world, a test of 37 V for a period of 150 ms may sufﬁ ce, but when developing electronics module for a particular vehicle manufacturer a review of load dump pulse requirement must be deﬁ ned. The vehicle alternator design and the centralized load dump protection placed inside the alternator is a contributing factor to determine the actual load dump pulse requirements. Harness Length Defined  by the Vehicle ManufacturerModule FunctionalLoad BoxModuleProgrammablePower SourceMonitoringEquipmentProgrammableTransientGenerator  Fig. 7.22    B+ line transient noise        7 Module and Vehicle EMC Compliance257 The module must be functionally tested before the load dump pulse is applied, it is then thoroughly inspected visually, and retested after the load dump pulse testing has furnished. A visual veriﬁ cation of power supply components and load dump protection mechanism is absolutely mandatory to determine the pass and fail crite-rion (Fig.  7.23 ).      ModuleLoad Dump Pulse  Fig. 7.23    Load dump test set-up