The shift that we are witnessing toward vehicle connectivity and autonomy is going
to be perhaps, the most disruptive since the early days of automobiles and could rev-
olutionize movement of people and goods. According to one estimation, the number
of connected cars sold globally will grow to 152 million across the globe by 2020, a
sixfold increase with respect to 2015 [1]. Another estimate puts the number of con-
nected vehicles at 250 million vehicles by 2020 [2], a fourth of the billion cars that
are in service today. In 2016 the US Department of Transportation issued a notice of
proposed rule making, that if implemented would require Vehicle-to-Vehicle (V2V)
connectivity on all new light-duty vehicles and was intended to reduce the number
of car accidents [3]. Similar provisions and guidelines are envisioned for Vehicle-to-
Infrastructure (V2I) communication [4]. With implementation of such mandates, the
number of connected cars with access to information and data will rapidly increase.
On a different front, major auto manufacturers, technology ﬁrms, and startup
companies have started a race toward building fully automated cars. Many automated
functions such as adaptive cruise control and lane keeping assist are already available
on several production vehicles. It is expected that ﬁrst fully automated vehicles be
available for sale in the next few years [5, 6]. A projection is that 20–40% of vehicle
sales be automated by 2030 and full penetration could happen in several stages over
the next few decades [7].

This level of connectivity and autonomy will transform transportation of people
and goods in several dimensions with important societal and economical impacts:
improved safety, increased comfort, time saving potential, and more efﬁcient road
utilization are among the most widely discussed positive impacts of CAVs. Fully
automated vehicles could improve mobility for young, elderly, and people with dis-
ability who are unable to drive today. Ride sharing and on-demand mobility services
could gain more popularity due to reduced labor cost, in turn inﬂuencing urban
planning and land use.
Energy Saving Potentials of CAVs

Table 1.1 Potential Impact of CAVs on a energy intensity or user intensity according to [8], b
operational energy use by year 2050 according to [9]. Here EI, UI, and FI respectively represent
Energy, Use, and Fuel Intensity. Reference [8] deﬁnes factors affecting vehicle miles traveled
(VMT)/vehicle as Use Intensity (UI); factors affecting Energy/VMT as Energy Intensity (EI); and
factors affecting Liquids Energy Fuel Intensity (FI)
Contributing factors

Platooning
Eco-driving
Eco-routing
Congestion mitigation
De-emphasized performance
Vehicle light-weighting
Vehicle right-sizing
Changed mobility services
Infrastructure footprint
Reduced parking search
Enabling electriﬁcation
Higher highway speeds
Increased features
Travel cost reduction
New user groups

Ref. [8]
(−)10% EI
(−)15–40% EI
(−) 5% EI
NA
NA
(−) 50% EI
(−) 12% UI
NA
NA
(−) 4% UI
(−) 75% FI
(+) 30%
NA
(+) 50% UI
(+) 40% UI

Ref. [9]
(−) 2–10%
(−) 20%
NA
(−)2–4%
(−) 5–23%
(−) 5–23%
(−) 20–45%
(−) 0–20%
(−) 2–5%
NA
NA
(+) 5–25%
(+) 0–10%
(+) 5–60%
(+) 2–10%

Energy use has not been the core consideration in development of connected and
automated vehicles, but it could be impacted signiﬁcantly. The impact could be pos-
itive or negative according to [8, 9] as summarized in Table 1.1. A careful scenario
analysis in [9] shows vehicle automation could cut energy use and green house gas
emissions in half in an optimistic scenario or double them in a “dystopian night-
mare”, depending on the effects that come to dominate. Increased opportunities for
eco-driving and platooning, trafﬁc harmonization, vehicle light-weighting enabled by
lower crash risk, vehicle right-sizing for number of travelers, de-emphasized vehicle
performance, car-sharing and on-demand mobility, and reduced infrastructure foot-
print of automated vehicles all contribute to improved energy utilization according
to [9]. But according to the same study, the increase in vehicle distance traveled due
to lower travel costs, addition of new user groups (young, elderly, disabled), higher
highway speeds, and increased vehicle features can also dramatically increase the
energy footprint of vehicle automation. The outcomes depend on which scenarios
prevail and proactive policy making is essential to steer the technology toward energy
efﬁciency as also emphasized in [6, 9, 10]. The authors of [11] speculate that the
aggregate energy and environmental impact of automated and on-demand mobility
could be positive, but acknowledge a big shift from historical trends that needs to be
carefully watched by policy makers and planners.

1.1 Introduction

3

This chapter provides an overview of increased opportunities for energy efﬁcient
driving with connected and automated vehicles, disregarding second order effects of
connectivity and automation, such as increased vehicle distance traveled or reduced
vehicle weight. Because CAVs are capable of sensing more accurately, process-
ing more information, and can be more tightly controlled, they beneﬁt more from
information offered by connectivity and road preview. With higher penetration rate
of CAVs, opportunities increase for vehicle to vehicle communication and cooper-
ative control, which can lead to additional energy efﬁciency gains. Despite these
prospects, connected and automated vehicle research and development have been
mostly on software, sensing, and safety and there are limited results on energy efﬁ-
ciency potentials.

In particular in this chapter we discuss opportunities that arise for individual
CAVs by choosing energy efﬁcient routes, anticipating future road slope and geome-
try, macroscopic state of trafﬁc, state of upcoming trafﬁc signals, and motion of their
neighboring vehicles. This allows CAVs to more judiciously choose their velocity
and lane to minimize wasteful braking and idling and also enables predictive pow-
ertrain control due to increased certainty about future vehicle motion. With higher
penetration of CAVs, more opportunities arise for collaborative driving which could
further enhance energy efﬁciency as discussed in Sect. 1.4. In particular we discuss
platooning, cooperative adaptive cruise control, cooperative lane change and merge,
and cooperative intersection control for a CAV ﬂeet. The impact on mixed trafﬁc
is discussed brieﬂy in Sect. 1.4.4. This sets the stage for the rest of the book where
algorithms for energy efﬁcient driving and detailed case studies are presented.

1.2 Minimal-Energy Route Navigation

Modern navigation systems are becoming indispensable parts of our every day com-
mutes. Relying on their up-to-date maps and efﬁcient routing algorithms, onboard or
mobile navigation systems can calculate the shortest or fastest route between origin-
destination pairs across a continent in a blink of an eye in what would have been an
unthinkable feat not very long ago. Enabled by connectivity, an increasing number of
navigation systems receive the latest trafﬁc information and road closings and adjust
their route recommendation accordingly. Road elevation and slope information may
be embedded in onboard maps or could be retrieved by connecting to an online Geo-
graphic Information System (GIS) server. One could envision real-time access to
more rapidly changing road information such as state of trafﬁc signals or weather
related road conditions, in the near future. With access to information such as road
topography and trafﬁc conditions, it is now possible to ﬁnd routes with the lowest
energy cost or environmental impact in what is referred to as energy-efﬁcient or eco
routing. Eco-routing has been the subject of many recent publications focusing on
algorithms, simulation case studies, or real-world deployments. And it is not only the
environmentally concerned and energy conscious that favor eco-routes. The limited

4

1 Energy Saving Potentials of CAVs

driving range of electric vehicles requires accurate estimation of each route’s energy
cost and determination of the minimal energy route as an option.

Eco-routing algorithms start by assigning an energy consumption (or pollutant
emission) cost to each link of a road network. A routing algorithm searches for the
path connecting an origin-destination pair with the lowest sum of link costs. More
details of well-established optimization-based routing algorithms are described in
Chap. 5. Here we provide a short overview of potential energy beneﬁts of eco-routing
based on published literature.

In one of the ﬁrst published case studies on eco-routing [12] the authors used a
collection of 15437 recorded commutes to compute typical consumption on streets
of Lund, Sweden. Using a smaller subset of 109 real journeys, the authors estimated
that fuel efﬁciency could be enhanced for 46% of the trips and that fuel savings would
be 8.2% on the average.

Field study results reported in [13] of 39 trips taken between same origin-
destination pair but some via a highway route and others via a slower arterial route
show 18–23% energy saving when taking the arterial road. Such a trend is also
observed in a case study conducted in Netherlands [14] showing energy advantage
of local and provincial roads over highways could be as much as 45%. The network-
wide effect of eco-routing algorithms is simulated for two US major cities in [15]
which shows the average fuel savings of eco-routing vehicles range from 3.3% to
9.3% compared to algorithms that ﬁnd the shortest-time path. By trading travel time
and driving more slowly, energy loss to aerodynamic drag is lower which contributes
to the reported energy savings on slower roads.

Eco-routing for electric and hybrid vehicles present new algorithmic challenges
as discussed in [16]. For electric vehicles limited range, long recharge times, and the
ability to regenerate energy during deceleration invalidate use of standard shortest-
path search methods and require new treatments [17] and different solutions have
been proposed. A model-based eco-routing strategy for electric vehicles in large
urban networks is presented in [18]. A model-based eco-routing approach tailored
for hybrid vehicles is presented in [19] while [20] addresses eco-routing for plug-in
hybrid vehicles. We note that eco-routing for electric vehicles with consideration of
in-trip charging poses new challenges as described in [21, 22].

Eco-routing may be even more attractive for ﬂeet operators where small energy
beneﬁts could add up to signiﬁcant savings. This could include operators of delivery
trucks, long-haul heavy vehicles, or mobility-on-demand services. Other factors such
as delivering the heavier items ﬁrst could be considered in the routing algorithm as
discussed in [23] and could result in additional energy savings.

Table 1.2 provides a summary of energy beneﬁts of eco-routing as reported in the

literature.

1.3 Anticipation in CAV Driving

5

Table 1.2 Summary of selected published results on energy efﬁciency gain enabled by eco-routing.
Simulation and Experimental results are denoted by S and E respectively
Refs.

Methods and conditions

Efﬁciency gain (%)
+8.2

[12]

[14]

[13]

[15]

[18]

[23]

S, Lund street network, Sweden
Links’ fuel consumption estimated based on 15437 recorded
trips
22 street classes, peak/off-peak hours, 3 types of cars
Eco-route compared to original route for 109 of these trips
50 of 109 trips could beneﬁt from Eco-routing
E, Delft city network, Netherlands
Delft-Zoetermeer routes, off-peak
Compares highway, local, and provincial routes
40 trips per route
Ford Focus vehicles with 1.6 liter engines
Empirical model for fuel consumption estimation
E, Washington DC suburb, USA
21 highway and 18 arterial recorded trips
Same origin and destination for all
Fuel consumption estimated using several empirical models
Arterial trips 17% slower but more energy efﬁcient
S, downtown Cleveland and Columbus, Ohio, USA
Network wide effects of eco-routing using micro-simulations
Fuel consumption estimated using an empirical model
S, city center of Lyon network, France
5400 nodes and 9500 links
1,000 different origin-destination pairs
Network topology, road grade, trafﬁc from HERE Maps [24]
S, truck delivery routing
Time-constrained, multiple-stop, class 8 truck-routing
Optimize to unload heavier loads ﬁrst

+45

+18–23

+3–9

+6 w.r.t
Shortest
+10 w.r.t
Fastest
+4.9–6.9
w.r.t.
Shortest

1.3 Anticipation in CAV Driving

CAVs offer huge potentials for boosting road safety, capacity, and efﬁciency, because
of their ability to process data from many more sources and their ability for more
precise positioning and control than human drivers. While similar information can
be processed, and provided to connected human-driven vehicles [25, 26] (e.g. as
optimal speed/lane advisories), only fully automated vehicles can be made to comply
with and reliably follow real-time energy-efﬁcient commands. Even in mixed-trafﬁc
that involves other non-automated vehicles, energy-efﬁcient automated vehicles can
have a positive impact on the energy efﬁciency of surrounding trafﬁc as will be
illustrated later. Automated cars have the potential to uncover the “driving signature”

6

1 Energy Saving Potentials of CAVs

of their neighboring vehicles and predict their most likely actions. They can also
anticipate probable locations of slow-downs by systematic evaluation of historical
data. Connectivity between cars and infrastructure can make much more information
available to each vehicle and the vehicles can form groups and act cooperatively. All
of these advances, when put into an organized framework, can help better anticipation
and improve trafﬁc ﬂow, increased safety, and reduce energy consumption.

1.3.1 Anticipating the State of the Road

Prior knowledge of road speed limits, safe speeds on curved roads, and an estimate of
average trafﬁc speed allows for more energy efﬁcient velocity transitions in anticipa-
tion of the change in velocity constraints. Speed limit is a standard feature on modern
onboard navigation units. Road curvature may be extracted from navigation maps to
calculate the likely (safe) speed on a curve. Curve speeds can also be inferred from
connected vehicle data. Average trafﬁc speeds for upcoming segments of a trip can
be queried from a Trafﬁc Management Center (TMC) that operates based on local
sensors and cameras or estimated from trafﬁc feeds that mostly rely on crowdsourced
information. As of 2019, sources of such data include feeds of Google, Here, Waze,
and Inrix. Dynamic spatiotemporal evolution of trafﬁc speed can be estimated via a
faster-than-real-time trafﬁc simulation model which is initialized by current trafﬁc
speed, deterministically [27] or probabilistically [28]. In absence of real-time trafﬁc
information services, time- and location-speciﬁc historical trafﬁc data can be used as
a baseline predictor [29]. Trafﬁc speed can be imposed as a spatio-temporally vary-
ing upper bound on the CAV speed [27]. Speed limit, curve and trafﬁc speeds can be
uniﬁed [30] into a single spatiotemporal bound on CAV velocity and used not only
to optimize velocity transitions of a CAV but also inform its predictive powertrain
control functions.

Another dominating factor in vehicle power demand is road grade, in particular
on steep roads, and more so for heavier vehicles. Road grade inﬂuences velocity
and torque constraints and gear selection. Therefore advanced knowledge of the
road grade, obtained from 3D road maps, is very beneﬁcial in predictive powertrain
control as shown for instance in [36, 38]. Additionally, due to constraints on velocity,
prior knowledge of road grade will allow more judicious use of available velocity
band and better gear selection [31–33, 35, 39–42]; for instance a vehicle can slow
down in anticipation of a steep descent or speed up in preparation for a climb. The
optimal solution can be non-trivial as shown for a heavy duty vehicle in [34]. Daimler
already has a predictive cruise control function in production that adjusts a heavy
duty truck speed [43] and gear [44] in anticipation of upcoming road grade to increase
its energy efﬁciency by 3% on a highway. This level of achievable improvement is
consistent with results in literature as summarized in Table 1.3.

Predicted velocity transitions and road grade can also reduce energy use via predic-
tive power split in hybrid powertrains [45], fuel cut-off [46] and cylinder deactivation
[47] in combustion engines, and thermal load management [48]. While such predic-

1.3 Anticipation in CAV Driving

7

Table 1.3 Summary of selected published results on energy efﬁciency gain enabled by road grade
preview. Simulation and Experimental results are denoted by S and E respectively
Refs.

Methods and Conditions

Efﬁciency gain (%)

[31]

[32]
[33]

[34]

[35]

[36]

S, 32 ton class 8 truck
Constrained NLP, preview horizon: 1500 m
Optimized velocity, gear, and throttle input
Route 1: −3.7◦ (cid:2) θ (cid:2) +4.7◦, μθ = 0.29◦, σθ = 1.32◦
Route 2: −4.3◦ (cid:2) θ (cid:2) +3.0◦, μθ = −0.21◦, σθ = 1.06◦
E 39 ton SCANIA truck
120 km highway, Södertälje to Norrköping, Sweden
Dynamic programming, preview horizon: 1500 m
Optimized velocity; gear was preselected
S, 29 ton class 8 Navistar truck
4 km single valley proﬁle h(s) = 30(1 − s/2000)2
Pontryagin Min. Principle & numerical continuation
Horizon = 4000 m, optimized velocity and gear
S, 1.3 Liter gasoline engine passenger car
Simpliﬁed polynomial fuel consumption model
Model predictive control, optimized velocity
2.5 km Yuniba Dori Road, Fukuka City, Japan
−5.0◦ (cid:2) θ (cid:2) +6.0◦
S, 2000 kg hybrid electric vehicle
Dynamic programming, preview horizon: full trip
Constant speed, optimized power split
36 and 48 km hilly roads, Contra Costa, California
PSAT [37] fuel economy evaluation
Route 1 −4.3◦ (cid:2) θ (cid:2) +3.0◦, μθ = −0.21◦, σθ = 1.04◦
Route 2: −8.0◦ (cid:2) θ (cid:2) +5.3◦, μθ = −0.17◦, σθ = 2.3◦

+2.6
+2.0
+3.5

+11.6
Over a
Single
Valley
+4–7

+0–3.0
+0–6.0

tive powertrain control functions can be exercised in conventionally driven vehicles
and some have been extensively studied, they will have a larger impact in CAVs.
Real-time access to information due to connectivity and absence of a human driver
in a CAV increases certainty of predictions and therefore effectiveness of predictive
powertrain control as schematically depicted in Fig. 1.1.

1.3.2 Anticipating Signal Phase and Timing

When driving on arterial roads, repetitive stops at trafﬁc signals result in loss of energy
due to braking and idling, engine and brake wear, and cause passenger discomfort and
frustration. Some of these stops are unnecessary, in particular under light to medium

8

1 Energy Saving Potentials of CAVs

Fig. 1.1 Eco driving in anticipation of upcoming hills, changes in speed limit, and slow trafﬁc. The
white CAV solves for the fuel minimal velocity trajectory given road power demand and constraints.
The image was created on https://icograms.com

Fig. 1.2 Schematic of eco-driving with SPaT preview. Shaded triangles contain feasible paths to
green intervals of the trafﬁc light for the 3 vehicles moving from bottom left to top right. Most
parts of the image were created on https://icograms.com

trafﬁc conditions, and are due to lack of information about the state of trafﬁc lights.
In an ideal connected urban area with Vehicle-to-Infrastructure (V2I) connectivity,
Signal Phase and Timing (SPaT) can be broadcast to approaching vehicles so that
connected vehicles adjust their speed for a timely arrival at a green light as shown
schematically in Fig. 1.2. Vehicle autonomy further facilitates this scenario by taking
the burden of speed adjustments away from human drivers.

Energy efﬁcient driving at signalized intersections and its impact on energy use has
been the topic of much research and development in recent years. One of the earlier
works was presented in [49] and expanded in [50] and showed potential for signiﬁcant

1.3 Anticipation in CAV Driving

9

fuel savings in a simulation study. These positive results have been corroborated in
[51–53] and many more publications that have followed them. Experimental results
in isolated environments [54, 55] and in real-world trafﬁc conditions [56–58] show
that considerable fuel saving (5–15%) is possible with human drivers in the loop.
Even more energy saving is expected in automated driving (or with automated cruise
control) where vehicles can adjust their speeds more precisely and effortlessly.

The technology for transmitting trafﬁc signal information to subscribing vehicles
has been demonstrated in several research projects [54, 58, 59] and described in more
detail in Chap. 3. The SPaT information may be directly transmitted to vehicles
within range using Dedicated Short Range Communications (DSRC) technology
[57] or may become available by the trafﬁc control center via cellular networks as
shown in [58]. A software architecture for cellular communication of SPaT from a
server to subscribing connected vehicles is described in [58]. Alternative means of
inferring SPaT information via on-board cameras [59] and via crowd-sourcing [60,
61] have also been proposed. There has also been commercial efforts to build a SPaT
information repository to provide speed advisory to human drivers via a mobile app
[62]. However, a much needed real-time server that covers large urban areas is still
missing. In absence of real-time SPaT information, it is still possible to use history
of observation during daily commutes and to estimate the probability of a green or
red over a future horizon, conditioned on the current color of the light [53] to allow
vehicles to target probable green windows. Even when SPaT is available in real-time,
the future color of the light is not known with certainty, for instance when the light is
actuated by the state of loop detectors. In such a scenario one can still use historical
trends to predict the probability of a red or green over a future time horizon [63].

While simple logical rules, such as those in [49], can be used when approaching a
trafﬁc signal, velocity planning can beneﬁt from more formal optimization methods
and will be discussed in more detail in Chaps. 6 and 7 of this book where the goal is
reducing energy consumption subject to the constraint imposed by red signals. Pas-
senger comfort and travel time could also be considered in formulating the approach
to trafﬁc lights; for instance penalizing both travel time and acceleration results in
smoother trajectories and less braking which also saves energy.

“Selﬁsh” optimization that focuses on eco-driving of a single vehicle could be dis-
ruptive to the ﬂow of following vehicles. In [71], while a vehicle-centric optimization
is still solved, the interest of following vehicles are taken into account.

Because such trafﬁc signal speed advisory technology is unlikely to be imple-
mented in every vehicle in the near future, it is important to evaluate the inﬂuence of
equipped vehicles on other vehicles in mixed trafﬁc ﬂow. It is currently prohibitively
difﬁcult to do ﬁeld experiments of a large number of CAVs in mixed trafﬁc. Therefore
trafﬁc simulation tools have been used in most studies. The impact of trafﬁc signal
advisory on mixed trafﬁc is studied, via microsimulations in [67, 69, 70]. In [3] the
impact of CAVs on mixed trafﬁc near signalized intersections is studied in trafﬁc
microsimulations. The CAVs receive the timing of signals in advance and adjust
their speed for a timely arrival at green. It is shown that CAVs not only improve
their energy efﬁciency but as their penetration increases they reduce the energy
consumption of conventional vehicles as well. With the increment of CAVs, other

10

1 Energy Saving Potentials of CAVs

conventional vehicles are more likely to follow a smoother-moving CAV. By their
simple car following strategy, such conventional vehicles may reduce the chance of
stopping at intersections as well. Potential impact on energy efﬁciency is summarized
in Table 1.4.

1.3.3 Anticipative Car Following

Human drivers are often reactive when following other cars as their view is often
blocked by the preceding car and therefore their event horizon is very limited. In
sudden slow downs, they often fail to consider the vehicles approaching from behind.
This is not only disruptive to trafﬁc ﬂow and is unsafe, but it can result in inefﬁcient
slow-down of multiple vehicles. Balancing the position dynamically with respect to
the cars in the front and back is cognitively demanding for humans. Most autonomous
cars without connectivity do not necessarily do better. Many are designed to behave
like human-driven vehicles and could be reactive to the perception of their immediate
surrounding which results in similar short-sighted decisions. In [72] a simulation
scenario depicts an automated vehicle that uses 3% more energy than a conventional
vehicle baseline due to its aggressive car following strategy.

The challenge is anticipation of road events, although experienced drivers do
exercise anticipation to some extent in driving [26, 73]. We pay attention to clues
and drive accordingly. For example, if we observe that a lead vehicle is accelerating
and decelerating erratically we increase our following distance or change lanes. If we
observe that a following vehicle is tail-gating us we try to induce a larger gap or allow
that vehicle to pass. But most of these precautions are practiced in an adhoc manner,
are constrained by our limited sensory and cognitive limits [74], and are inconsistent
across different drivers [75] and trafﬁc scenarios. These cause poor local judgments
that could lead to shock waves that slow us down to inefﬁcient crawls. Today much
more can be done: thanks to better sensing capabilities, CAVs have the potential to
anticipate the motion of their preceding vehicle and ﬁnely adjust their speeds for a
more steady and smooth motion. Additional information of the intent of preceding
vehicles via V2V communication can enhance such anticipative car following.

While the main goal should be to robustly maintain a safe following distance to
the preceding vehicle (imposed as position constraints), the inter-vehicle gap can be
judiciously used as a degree of freedom to ﬁlter abrupt slow-downs and application
of brakes [76] and increase energy efﬁciency of the ego vehicle as schematically
shown in Fig. 1.3. Smoother velocity transitions of the host vehicles are expected
to positively inﬂuence the motion of upstream trafﬁc and reduce the chance of a
phantom jam, in which trafﬁc comes to a halt with no apparent reason and because
of small disturbances [77–79]. This lowers fuel used by the entire queue of vehicles
as experimentally shown in [80].

Because of shorter relevant time scales in car-following, a moving horizon energy
optimization is a natural choice (as opposed to full trip optimization). The main
challenge that arises here is dependence of the inter-vehicle constraint on the position

1.3 Anticipation in CAV Driving

11

Table 1.4 Summary of selected published results on energy efﬁciency gain enabled by SPaT antic-
ipation with respect to conventional vehicles without SPaT information. Simulation and Experi-
mental results are denoted by S and E respectively. The efﬁciency gains are in vicinity of signalized
intersections and not an entire trip gain
Refs.

Methods and Conditions

Efﬁciency Gain (%)
+24–29

[49]
[50]

[51]

[65]

[53]

[54]

[56]
[58]

[57]

[59]

[67]

[69]

S, lone vehicle, 10 ﬁxed time lights
Real SPaT: Greenville, SC timing cards
1.7 L 4-cylinder gasoline engine,
High ﬁdelity vehicle model in PSAT [37]
S, 10 ﬁxed time lights,
Stochastic parameter variation
Passenger car and SUV, CMEM models [64]
S, 1 ﬁxed time light
Varying road conditions, random initialization
Virginia Tech fuel consumption model [66]
S, 3 ﬁxed and variable timing lights
Probabilistic SPaT, probabilistic planning
Monte Carlo Evaluation (3000 scenarios)
E, no trafﬁc
1 ﬁxed time signal, 4G cellular comm.
2011 BMW 535i
E, real city trafﬁc,
Real-time TMC data, 4G cellular comm.
Mix of 10 ﬁxed time and actuated signals
2011 BMW 535i, 4 complying drivers
E, real city trafﬁc
Coordinated actuated signals, DSRC comm.
2008 Nissan Altima, 2 complying drivers
E, real city trafﬁc
2 ﬁxed time lights
Camera SPaT estimation- V2V comm.
2001 2.4 L PT Cruiser, 1 complying driver
S, network wide effect
4 ﬁxed time signals, multi lane
Paramics [68] microsimulations, mixed trafﬁc
50% CAV penetration, 900 veh/hour/lane
Polynomial fuel consumption model
S, network wide effect
11 ﬁxed time signals, one lane
Paramics microsimulations, mixed trafﬁc
50% CAV penetration, 300 veh/hour/lane
CMEM [64] fuel consumption model

+12–14

+20

+16

+13

+9

+2–6

+25

+25
(CAV)
+6
(surrounding trafﬁc)

+12.5
(CAV)
+7.5
(all trafﬁc)

(continued)

12

[70]

Table 1.4 (continued)
Refs.

Methods and Conditions

S, network wide effect
1 ﬁxed time signals, single lane at grade
INTEGRATION microsimulation package
Varied CAV penetration
VT-micro fuel consumption model

1 Energy Saving Potentials of CAVs

Efﬁciency Gain (%)
+26
(100% CAV)
none
(≤50%)
CAV)

Fig. 1.3 Anticipative car following and lane selection. The yellow CAV receives the imminent
intentions of its preceding white CAV or predicts it using past statistical data and plans its motion to
minimize its acceleration and velocity deviation while enforcing safe gap constraints. The blue CAV
which is preceded by a bus anticipates right lane trafﬁc slow down near a bus stop and proactively
starts a lane change. Its goal could be minimizing a weighted sum of its acceleration and deviations
from desired velocity and lane. Most parts of the image were created on https://icograms.com

of the preceding vehicle which is typically unknown. Therefore despite a relatively
simple optimization problem formulation, we are faced with a difﬁcult prediction
problem.

In absence of any information and when only instantaneous velocity or acceler-
ation of the preceding vehicle is known, the position of the preceding vehicle can
be projected over the horizon assuming that it travels with constant speed [81] or
constant acceleration [82]. Or perhaps it is reasonable to assume that acceleration of
the preceding vehicle decays over the horizon to zero with some time constant [30].
When information from the road and infrastructure is available one can construct
a deterministic proﬁle that the preceding vehicle is expected to follow as will be
discussed later in Chaps. 4 and 8.

More complex driver modeling methods have also been proposed in the literature.
For instance [83] proposes ﬁtting a nonlinear autoregressive model to historical data
to predict the motion of preceding vehicle. In [76] the future motion of a group

1.3 Anticipation in CAV Driving

13

of preceding vehicles is estimated via trafﬁc microsimulations. Many have used
probabilistic models to capture the statistics of velocity transitions [29, 84–86]. This
topic is visited in more detail in Sect. 8.2.3 of this book.

In an ideal scenario when all vehicles communicate, each vehicle can pass on its
intended action to the vehicles that follow it [87, 88]. This allows the ego vehicle to
know, with more certainty, the position of the preceding vehicle(s) over its planning
horizon and is believed to result in smoother ﬂow and improved overall energy
efﬁciency. Note that in this scenario, the vehicles are just sharing intentions and do
not necessarily cooperate toward a common goal. Later in Sect. 1.4.1 we discuss
a cooperative cruise control scenario where the vehicles could cooperate toward a
“social” optimum.

A different approach is proposed in [76] where it is assumed that all vehicles
in a queue communicate their immediate state (position, velocity, acceleration) but
not their intentions. The ego vehicle assumes a standard car following model for
the preceding vehicles to anticipate their positions over its optimization horizon. A
similar approach is discussed in [89, 90]. In a less than ideal scenario, when only a
portion of the vehicles in a queue communicate, the position of non-communicating
vehicles is inferred in [91] at signalized intersections. Communication delay makes
the problem even more complex and is discussed in [89, 92]. Packet drops result in
stochastic delays and their impact is discussed in [93].

Table 1.5 highlights selected results that show the impact of anticipative car fol-
lowing on energy efﬁciency. As can be seen, the reported gains vary signiﬁcantly
even for vehicles of the same size. This could be due to design and parameters of the
car-following algorithms and scenario setups.

1.3.4 Anticipative Lane Selection and Merging

Most existing literature on eco-driving assume the vehicle maintains a single lane,
reducing planning of the vehicle motion to the choice of its velocity. In multi-lane
roads, the freedom to choose a different lane provides a new dimension and many
more possibilities for optimizing the motion of the vehicle to safely improve its
energy efﬁciency and may also harmonize trafﬁc. But every day driving experience
indicates that choice of lane is a complex decision making problem, perhaps due to
its combinatorial nature and typical lack of information about the average speed (or
efﬁciency) of adjacent lanes. The same is true when merging into a highway from an
on-ramp or exiting to an off-ramp. Lane selection can be a dilemma point for average
drivers; aggressive lane change on the other hand can be unsafe and disruptive to the
ﬂow and efﬁciency of upstream trafﬁc.

In a connected and automated vehicle environment, more information about the
intention of neighboring vehicles can become available via V2V communication,
speed of each lane could be broadcast from roadside sensors, and therefore automated
vehicles can change lanes more judiciously and smoothly as schematically illustrated
in Fig. 1.3. A rather comprehensive survey of lane change/merge for CAVs can be

14

1 Energy Saving Potentials of CAVs

Table 1.5 Summary of selected published results on energy efﬁciency gain enabled by anticipative
car following. Simulation and Experimental results are denoted by S and E respectively
Refs.

Methods and conditions

Efﬁciency gain (%)
+13–35
w.r.t.
No preview

[94]

[84]

[82]

[95]

[83]

[86]

[96]

S, 1.6 ton vehicle
3 standard driving cycles for phantom lead vehicle
Rule-based preview car following, horizon = 50 s
S, 2 ton vehicle
Recorded real-data for lead vehicle
Winding road from Clemson, SC to Highland NC
Chance constrained MPC, horizon = 15 s
Markov chain prediction of lead vehicle velocity
Fuel economy evaluated in ANL’s PSAT [37]
S, 1.4 ton electric vehicle, no regeneration loss
3 real city driving proﬁles for lead vehicle
MPC, horizon = 100 s
Assumes constant acceleration for lead vehicle
Physical polynomial model for energy use
S, 1.8 ton simulated vehicle with combustion engine
Following lead car with constant speed
Optimal control yields pulse and glide strategy
Efﬁciency gain is speed dependent
E, engine-in-the-loop simulations,
Microsimulation + engine test bench measurement
Driver prediction: nonlinear autoregressive model
Prediction horizon =15 s
Results depend on allowable inter-vehicle gap
E, real ego vehicle, 2007 Ford Edge
12 rounds city/highway driving on Michigan-39
Following phantom vehicle with constant speed
Stochastic DP policy calculated ofﬂine
Restricted to ± 2 mph speed difference w.r.t. lead
Resulting strategy is pulse and glide
E, real ego vehicle, 3.8 L V6 engine, 8 speed trans.
Hyundai-Kia proving grounds, California
Simulated lead vehicle with sinusoidal velocity
MPC tracking, perfect preview, horizon = 6 s

+15
w.r.t.
Lead
Vehicle

+12–44
w.r.t.
Lead
Vehicle

+0–32
w.r.t
Lead
Vehicle
+6.5–22

+3.6
w.r.t.
Lead
Vehicle

+39–50
w.r.t.
Imperfect
Preview

1.3 Anticipation in CAV Driving

15

Table 1.6 Summary of selected published results on energy efﬁciency gain enabled by anticipative
lane selection. All results are simulation results denoted by S
Refs.

Methods and conditions

Efﬁciency gain (%)

[100]

[101]

[103]

S, microscopic simulations
MPC velocity & lane selection, horizon=15 s
Tested 2 cases, 2 km road, varying CAV levels
At 50% penetration, w.r.t. conventional vehicles:
At 50% penetration, w.r.t. CACC vehicles:
S, micro-simulation in merging zone, 30 vehicles
Optimal coordinated merging into a highway
Fuel economy via polynomial metamodel in [102]
Reported gain for merging period only
S, microscopic simulations
2.3 km two lane road, 4 CAVs, full intent communication
MPC velocity & lane selection, horizon=10 s
Mixed integer quadratic program formulation

aEquipped vehicles (all trafﬁc)

+14.3 (12.9)a
+7.8 (5.1)a
+48
w.r.t.
Yield
& merge
+8.4
w.r.t.
Rule-based

found in [97, 98]. One of the original formulations in this area can be found in [99,
100] where choice of lane is an additional integer decision variable in the energy
cost of the vehicle.

Merging from ramps often causes breakdown and a trafﬁc jam in a highway.
Today, solutions such as ramp metering are being used to remedy the situation [104,
105], requiring infrastructure investment and maintenance. With CAV technology
the merge can be coordinated much more safely as experimentally shown in [106]
resulting in smoother trafﬁc [107, 108] and higher energy efﬁciency [101]. Equipped
with more data and processing power, the CAV can anticipate more systematically
the motion of the neighboring vehicle during a merge as shown schematically in
Fig. 1.4. The impact could go beyond individual vehicles; by reducing the chance of
a phantom jam, the overall energy efﬁciency of trafﬁc will improve. Table 1.6 lists
the limited results that authors could ﬁnd on the impact of lane selection on energy
efﬁciency.

1.4 Increased Opportunities for Cooperative Driving

In a connected vehicle world, deliberate exchange of intentions by vehicles and infras-
tructure reduces the need for guessing the surrounding trafﬁc patterns and therefore
enables better coordination. Automated vehicles can cooperate rather than compete
for right of way in urban areas and highways, thus contributing to harmony in motion
and improved mobility and efﬁciency of a group of vehicles. Therefore “coopera-
tion” in what follows, refers to sharing information and coordinating movements

16

1 Energy Saving Potentials of CAVs

Fig. 1.4 Anticipative merging. The white CAV anticipates the imminent motion of its neighboring
vehicle in response to its intended lane change. The image was created on https://icograms.com

for a “common” good. Even with the best intentions of human drivers, cooperation
among conventional vehicles is rather challenging due to often unknown plans of
neighboring vehicles and complexity of coordination at speed. For instance, merging
from a ramp into a highway lacks a clear protocol and is often done in an “ad hoc”
manner in the hope that fast approaching vehicles act with “consideration”. This is
not only unsafe, but the need for frequent braking in dilemma zones increases energy
use and could negatively impact trafﬁc ﬂow. Information sharing via connectivity
allows establishing more systematic coordination protocols that increase safety and
efﬁciency. Automated vehicles can be programmed to take full advantage of such
protocols that may require precise movement coordination. We describe below coop-
eration in car following, merging, lane changing, and intersection crossing and also
discuss their potential impact on efﬁciency of cooperating vehicles as well as beneﬁts
to mixed trafﬁc.

1.4.1 Cooperative Car Following

Cooperative car following in which vehicles coordinate in longitudinal formations
is perhaps the most researched topic in cooperative driving, under the contexts of
platooning and cooperative adaptive cruise control. A schematic is shown in Fig. 1.5.
Tight platooning gained popularity in the 1990s for its potential to increase high-
way throughput. In a platoon of communicating and partially automated vehicles,
the gap between a group of following vehicles can be safely reduced to increase

1.4 Increased Opportunities for Cooperative Driving

17

Fig. 1.5 Collaborative car following and lane selection. The two front trucks maintain a platoon
formation relying on V2V communication and automated longitudinal control. A third truck com-
municates with the platoon to join. In a collaborative lane change maneuver enabled by V2V
communication, the passenger car leaves a gap for the third truck to change lane. Most parts of the
image were created on https://icograms.com

road capacity. Moreover at short following distances, the aerodynamic drag coefﬁ-
cient is smaller resulting in considerable energy savings, in particular for heavy duty
vehicles. Recognized research programs in the USA [109, 110], Europe [111–113],
and Japan [114] have demonstrated the feasibility of the technology in well docu-
mented road experiments as discussed in [115] showing potential for 5–15% energy
saving. Experimental results in [112, 113] show between 4 and 7% energy saving
potential for a heavy truck. Over the years, important technical challenges such as
platoon string stability [116], communication needs [117, 118], control design [119,
120], and formation scheduling [121] have been addressed. Today the technology has
matured to the extent that major manufacturers and startup companies plan to deliver
truck platooning solutions to market in the near future with the goal of reducing
energy and personnel costs [122].

Over the past few years and with increased prospects for vehicle connectivity,
Cooperative Adaptive Cruise Control (CACC), has gained popularity in the research
community. CACC is essentially an enhanced Adaptive Cruise Control (ACC) sys-
tem that, in addition to range sensor feedback, relies on wireless communication
of the acceleration of the preceding vehicle(s) for feedforward control. V2V com-
munication is intended to increase safety and allows string-stable reduction of the
inter-vehicle gap for improved road utilization [123]. With a correct design, velocity
variations are much better attenuated than in ACC car following, as shown in road
experiments with six equipped vehicles in [124]. The 2011 Driving Challenge in
Netherlands was a successful showcase of CACC technology by multiple teams. An

18

1 Energy Saving Potentials of CAVs

overview of this competition is presented in [125, 126]. CACC formations could
positively or negatively impact surrounding trafﬁc as demonstrated in a simulation
study [127], for instance long formations may prevent those that intend to merge
into a highway. But overall, CACC is expected to have a harmonizing impact on
participating vehicles and on surrounding trafﬁc, reducing braking events and low-
ering energy consumption. Despite these beneﬁts there are few papers documenting
the energy efﬁciency impact of CACC, for instance [83]. It appears that increasing
energy efﬁciency has been mostly the focus of truck platooning projects.

While the platoon and CACC terminologies are sometimes interchangeably used
in the literature, there are some differentiating features. The original concept of
a platoon relied on a designated lead vehicle and a hierarchical control structure
from the lead to the following vehicles. This hierarchy is not needed in CACC car
following and each vehicle can individually switch to its CACC mode as long as it
receives messages communicated by its preceding vehicles. The information ﬂow
between vehicles can vary from one implementation to the other. A vehicle can
receive information from the lead vehicle only, from its preceding vehicle only, or
from multiple preceding vehicles as schematically shown in [89, 128].

Depending on the information ﬂow and content shared between vehicles, we can
envision enhanced versions of current platooning and CACC practices. Ideally each
vehicle will share its intended acceleration proﬁle over a future horizon, rather than its
instant acceleration, with all its following vehicles [87, 88]. This reduces the uncer-
tainty about the movement of preceding vehicles, as was discussed in Sect. 1.3.3,
aiding each vehicle to better plan its motion and reduce braking events.

Note that in this scenario, cooperation is only via information sharing, and each
vehicle plans “selﬁshly”. In a true collaborative environment, collaborating CAVs not
only share information but also plan for their common good [88] or follow formation
consensus rules [129]. Their common goal for instance could be reducing the energy
consumption of the entire ﬂeet [71, 130, 131], string stability [132], or collision
mitigation [133]. Optimization can be distributed onboard each vehicle based on
information communicated by neighboring vehicles to reach a consensus [131, 132].
Alternatively in a centralized control framework described in [131], the ﬂeet energy
useage is optimized on a central cloud server for a group of freight trucks and the
decision is issued to low-level controllers of individual trucks. Table 1.7 summarizes
some of the limited results on energy efﬁciency impact of cooperative car following,
including platooning.

1.4.2 Cooperative Lane Change and Merge

In Sect. 1.3.4 we discussed that individual CAVs can beneﬁt from connectivity and
autonomy and more safely and efﬁciently merge and change lanes. Additional gains
are expected if CAVs cooperate, not only by sharing intentions but also by being
“considerate” of neighboring vehicles. In such a cooperative scenario, each vehicle
considers the impact of its decision on neighboring vehicles. Lane change and merge

1.4 Increased Opportunities for Cooperative Driving

19

Table 1.7 Summary of selected published results on energy efﬁciency gain enabled by cooperative
car following. Simulation and Experimental results are denoted by S and E respectively
Refs.

Methods and conditions

Efﬁciency gain (%)
+10.5

[131]

[87]

[109]

[113]

[114]

[110]

S, group of ﬁve 1.2 ton electric vehicles
Eco-platooning for reduced group consumption
Considered drag reduction
Nonlinear MPC, prediction horizon = 120 s
Studied centralized and distributed solutions
S, microsimulation, combustion engine vehicles
10 CAVs follow lead vehicle, share partial info
Drag reduction is not considered
Each CAV solves MPC, horizon = 12 to 20 s
Fuel use evaluated using an engine map
Compared against IDM car following
E, truck platooning
2.4 km unused runway, Crows Landing
Two identical Freightliner tractors, 16 m trailers
90 km/h constant speed, 3–10 m spacing
E, truck platooning, 45 km Swedish highway
Three 18 m, 37–39 ton Scania tractor-trailers
Wirelessly communicate vel., accel., parameters
Time headway = 1 s
E, truck platooning on a test track
3 fully-automated 25 ton trucks & 1 light truck
Communicate vel., accel., brake via DSRC
80 km/h constant speed, 4.7 m gap
E, truck platooning on test track
2 Peterbilt tractors, full aerodynamic packages
16 m trailers weighing 30 ton
High-speed oval track, banked turns
105 km/h and 10 m following distance

+50
For

FTP
Cycle
Following
+8–11

+4–6.5

+15

+7.0

decisions can then be made in a distributed manner with each vehicle deciding (opti-
mizing) its motion and sharing its intentions [134]. Alternatively, in a centralized
framework, a single decision-making (optimization) problem is solved for a group
of cooperative vehicles [135]. Cooperative lane selection and merge not only con-
tributes to efﬁciency of the cooperating ﬂeet but can also have a positive harmonizing
effect on surrounding trafﬁc.

There is a large body of literature on lane change models for trafﬁc microsimula-
tions, such as the widely used MOBIL lane change model which will be described
later in Chap. 4. However cooperative lane selection and merging for CAVs has only
been recently discussed. In [136] a cooperative lane-changing algorithm is simulated

20

1 Energy Saving Potentials of CAVs

that considers follower vehicles in current and target lanes when making a lane change
decision. The simulations in [136] show improvement with respect to MOBIL, in
terms of merge time and rate, wait time, fuel consumption, average velocity, and
ﬂow at the cost of slightly increased travel time for main road vehicles. In [137] a
merging assistant system that relies on vehicle cooperation, reduces the number of
“late-merging” vehicles and subsequent likelihood of ﬂow break-downs. Different
algorithms for cooperative merging have been proposed, for instance [138] proposes
a decentralized control method and [135] formulates it in a receding horizon opti-
mization framework. A cooperative V2V “negotiation” process for lane changing is
described in [139] while [140] proposes interaction protocols for cooperative lane
changing. Experiments with three CAVs performing a semi-automated cooperative
lane change maneuver are described in [141] and show the potential for smoother
velocity trajectories. The focus of the above results has not been energy efﬁciency and
only [136] reports energy efﬁciency gains. However, we expect considerable energy
saving from wide deployment of cooperative lane changing and merging systems
due to reduced braking events and harmonizing effect on trafﬁc ﬂow.

1.4.3 Cooperative Intersection Control

The coordination and optimal timing of trafﬁc signals are by nature complex prob-
lems and backed by years of research in trafﬁc engineering and operations research.
Current signal timings are mostly scheduled ofﬂine. The optimized timings are then
deployed as ﬁx timetables for different times of the day and are further discussed
in Chap. 4. Many signals are actuated by trafﬁc and have rules to override their pre-
optimized timetables based on the state of their loop-detectors to reduce idling at
intersections. While these trafﬁc responsive control strategies calculate their timing
in real-time [142], they act based on the immediate state of loop-detectors. On the
other hand, smart trafﬁc signal controllers in connected vehicle environments will
do more than just signaling right of ways by acting intelligently as hubs that sense,
route, and harmonize the ﬂow of arterial trafﬁc.

The research on uni-directional signal to vehicle communication for improv-
ing efﬁciency by providing speed advisory to individual vehicles was discussed in
Sect. 1.3.2. Another research direction has focused on improving intersection ﬂow
by optimizing timing of traditional trafﬁc signals informed by uni-directional com-
munication from connected vehicles [143, 144]. In addition, bi-directional vehicle-
signal communication allows the geographical data of the connected vehicles to be
also wirelessly transmitted in real-time to smart trafﬁc signal controllers [145]. This
increases energy efﬁciency and intersection ﬂow as signals adjust their timings and
vehicles their speeds [146].

Automated vehicles can further beneﬁt from the communicated trafﬁc signal infor-
mation because they not only process the incoming information rather effortlessly but
also can precisely control their speed and arrival time at a green light. The situation
can get even better with 100% penetration of automated vehicles since a physical

1.4 Increased Opportunities for Cooperative Driving

21

Fig. 1.6 Schematic of a cooperative intersection. CAVs subscribe to an intersection control server
as they approach the intersection, the controller assigns access times to each approaching vehicle
allowing only vehicles of the same movement in the intersection area at the same time. In this
schematic vehicles on movements X and O are grouped together when assigning access times
which reduces idling and saves energy. Most parts of the image were created on https://icograms.
com

trafﬁc light is not needed anymore as shown schematically in the cooperative inter-
section of Fig. 1.6 and in concept papers in [147–149]. Also because automated cars
have much faster reaction times than human driven vehicles, the intersection con-
troller can rapidly switch between phases [150]. Some of the beneﬁts of eliminating
trafﬁc signals in an all-automated vehicle environment is discussed in [147] and
demonstrated by interesting simulation results in a recent publication [151]. In [152]
the authors show the potential for 50% energy efﬁciency gain via such reservation-
based intersection control systems. In [153] increasing the intersection throughput
is formalized as an optimization problem with details in a case study discussed in
Chap. 9 of this book. They show signiﬁcant reduction in number of stops and fuel use
compared to traditional intersection control schemes. In a one hour microsimulation
case study it is shown that the number of stops can be reduced 100 times [154]. Via a
vehicle-in-the-loop experiment also described in Chap. 9, the authors measure 20%
improvement in energy efﬁciency of a real-vehicle that interacts with the intersection
controller and hundreds of simulated vehicles. Simulations indicate beneﬁts of such
systems greatly increase if vehicles move in platoons, in certain cases doubling the
arterial network capacity with the coordination of platoons and intersections [155].
In [156] a platoon-based approach shows up to 20% energy efﬁciency beneﬁt with

22

[152]

[156]

[149]

[159]

1 Energy Saving Potentials of CAVs

Table 1.8 Summary of selected published results on energy efﬁciency gain enabled by cooperative
intersection control. Simulation and Experimental results are denoted by S and E respectively
Refs.

Methods and Conditions

S, microsimulation in Paramics [68]
Real-world road network, 3 intersections
CMEM [64] fuel efﬁciency evaluation
S, microsimulation in Sumo
1 intersection with 2 single lane approaches
Vehicles form platoons to pass intersection
CMEM fuel efﬁciency evaluation
S, Microsimulation in DIVERT [157]
Simulated entire network of Porto, Portugal
EMIT [158] fuel consumption and emission model
1.3 ton combustion engine vehicle
Mostly studied emissions reduction
E, real vehicle interacting with microsimulation
Real vehicle: 2011 Honda Accord 2.4 L engine
Custom microsimulation written in Java
12 laps, 1.6 km track, single virtual intersection
Scheduling via mixed integer linear programming

Efﬁciency gain (%)
+50%

+11–21

+25
(fuel)
+1–18
(CO2 emissions)

+20
For
Real
Vehicle

respect to signalized intersections, but under simulation conditions of [156] energy
efﬁciency was slightly sacriﬁced to form platoons. Table 1.8 highlights some of the
key results on energy beneﬁts of cooperative intersection control.

1.4.4 Indirect Beneﬁts Through Trafﬁc Harmonization

Coordinated and smoother motion of CAVs could harmonize the surrounding trafﬁc
and contribute to energy efﬁciency of conventional vehicles, even at low penetration
levels. While it is difﬁcult to establish the network-wide beneﬁts experimentally,
there are microsimulation case studies and isolated experiments that show such pos-
itive impacts. For instance in Sect. 1.3.2 we explained that according to [67] trafﬁc
signal speed advisory can reduce the energy consumption of conventional vehicles
at moderate penetration rates. Several papers have shown the harmonizing effect of
automated cruise control on the upstream trafﬁc [76, 160] which is expected to posi-
tively inﬂuence energy efﬁciency of upstream trafﬁc. CACC not only increases road
utilization due to smaller gaps [123, 127, 161], but is shown to attenuate velocity
variations as shown in road experiments in [124, 162]. These ﬁndings are corrob-
orated by microsimulation studies, reported in [163], that show reduction of shock
waves with increased penetration of connected and automated vehicles. In [164] a

1.4 Increased Opportunities for Cooperative Driving

23

“theory for jam-absorption driving” is presented which is a method for driving a
single car to attenuate a trafﬁc shockwave, followed by experiments in [165]. An
interesting experiment with a group of 22 vehicles moving on circle, showed that
a single automated vehicle using relatively simple control rules, could dissipate the
phantom jam waves formed by the 21 human driven vehicles. This contributed to
between 20 and 40% improvement in average fuel economy of the ﬂeet across the 3
experiments [80]. Harmonizing impact of CAVs in an open highway is demonstrated
via interesting experiments in [166]. Three CAVs were driven side-by-side in real
shock-wave trafﬁc and their inﬂuence was measured by three probe vehicles that
were deployed downstream and upstream. It was observed that CAVs reduced the
oscillation induced by the shock-waves and harmonized the trafﬁc with expected
network-wide energy efﬁciency impact. Secondary effects due to reduced number of
accidents, could further lower delays and loss of energy which is difﬁcult to quantify.

*
* *

As mentioned several times in this chapter, CAVs have a huge potential in terms
of energy consumption reductions of road mobility, thanks to their enhanced control
capabilities. However, to exploit this potential at its best, simple rule-based control
strategies are often not sufﬁcient and a more systematic approach, based on mathe-
matical optimization, is needed.

In the rest of this book we formalize the science of energy-efﬁcient driving by
laying out the mathematical modeling, control, and optimization foundations for
it. We also describe the software and hardware technologies needed to implement
energy-efﬁcient driving functions and conclude by presenting a number of simulation
and experimental case studies.

Trafﬁc control and planning might beneﬁt from CAV technology and help reduce

overall energy consumption but are not the subject of this book.
Fundamentals of Vehicle Modeling

At least three energy conversion steps are relevant for a comprehensive analysis of
energy efﬁciency of passenger cars and other road vehicles. As illustrated in Fig. 2.1,
in a ﬁrst step (“grid-to-tank”), energy carriers that are available at stationary distribu-
tion networks, such as gasoline, electricity, etc., are transferred to an on-board storage
system. This energy is then converted by the propulsion system to mechanical energy
aimed at propelling the vehicle (‘“tank-to-wheels”). In the third energy conversion
step (“wheel-to-distance”), this mechanical energy is ultimately converted into the
kinetic and potential energy required by the displacement. Unfortunately, all of these
conversion processes may cause substantial energy losses.

Tank-to-wheels efﬁciency may be improved by several approaches, both at the
component level and at the system control level [1]. Methods to improve grid-to-tank
efﬁciency by choosing the appropriate charging time slots and proﬁles are currently
being studied for electric vehicles. The maximization of wheel-to-distance efﬁciency
is one of the main topics of this book. Although minimizing the energy at wheels
EW for a given amount of the useful energy EM is theoretically possible and will
be actually treated in the following chapters, it is often more interesting to try to
minimize the energy consumed by the on-board sources (“tanks”), ET . To analyze
such a problem, we shall introduce in the following section vehicle-speciﬁc models
of powertrain components.

The standard tool to evaluate tank-to-distance efﬁciency and predict energy con-
sumption of road vehicles as a function of how they are driven is the use of modular
modeling of the vehicle and its propulsion system. As Figs. 2.2, 2.3, 2.4, 2.5 and
2.6 suggest, such models are composed of several sub-models representing each
relevant energy conversion step from ET to EM . To evaluate the tank energy for a
given driving proﬁle, these models are typically solved “backwards”, i.e., the model
inputs are at the road level (speed, acceleration), and the energy conversion chain is
followed in the opposite direction of the physical energy ﬂow, to eventually evalu-
Fundamentals of Vehicle Modeling
Backward calculation of energy consumption rate in a parallel hybrid-electric vehicle.
Nomenclature deﬁned in Sect. 2.4

ate the power drained from on-board sources. In contrast, the physical energy ﬂow
(from the sources to the road) is followed to predict the effects of powertrain control
strategies on driving and, consequently, on energy consumption. For this purpose,
the same modular approach of Figs. 2.2, 2.3, 2.4, 2.5 and 2.6 can be used, albeit with
physical causality (“forward” modeling).

In Sect. 2.1, a model for the energy required at the wheels that is common to all
types of road vehicles is presented. Then, each propulsion system is modeled sepa-
rately, and the main equations that are useful to evaluate the tank energy consumption
are summarized (Sect. 2.2–2.5).

2.1 Road Load

Road
load

Drive-
train

v

Fp

ωm

Tm

Motor
and
inverter

Pm

Power
link

35

Pb

Pf

Pl

Pg

Battery

APU

Fig. 2.5 Backward calculation of energy consumption rate in a series hybrid-electric vehicle.
Nomenclature deﬁned in Sect. 2.4

Road
load

Drive-
train

v

Fp

ωh

Th

Cyclist

Ph

Fig. 2.6 Backward calculation of energy consumption rate in an human-powered vehicle. Nomen-
clature deﬁned in Sect. 2.5

2.1 Road Load

From a dynamic viewpoint, road vehicles are generally treated as semi-rigid bodies
and described by their linear and angular position along three coordinated dimen-
sions. For our purposes, however, the longitudinal motion often sufﬁces.1 We shall
therefore consider the dynamics of longitudinal position, s(t), and speed, v(t) (cid:2) ˙s(t).

2.1.1 Forces Acting on Road Vehicles

The vehicle’s longitudinal dynamics is governed by Newton’s second law of motion,
see Fig. 2.7,

mt

d v(t)
dt

= Fp(t) − Fres(t) − Fb(t) .

(2.1)

In this equation, mt = m + mr is total effective mass, sum of the overall mass m of the
vehicle (curb mass) and of its occupants, plus a term mr that describes the effect of
the inertia of rotating parts (engine, motor, etc.) transferred to the wheels. The latter
term is usually varying with time as transmission ratio changes, but this variation is
often neglected. Of course, vehicle mass has a wide range, from less than 100 kg for
bicycles (where the cyclist’s mass is prominent over the vehicle) to several thousand
kg for heavy-duty trucks.

1Even in the presence of lateral maneuvers such as lane changes (see, e.g., Sect. 9.4), the energy
consumption associated with such transient maneuvers will be neglected.

36

2 Fundamentals of Vehicle Modeling

1/2ρaCDA f v2

Fw

Crrmg

α

α

mt g

Ccrm2v4/R2

z

s
x

Fig. 2.7 Schematic representation of the forces acting on a vehicle in motion

The force Fp is the sum of forces applied by the powertrain at the wheels, as
explained below. The term Fb is the force applied by frictional brakes only, while
“regenerative” brake possibly provided by electric, hydraulic, pneumatic, or kinetic
means coupled with accumulators is considered here as part of the propulsion system.
The term representing road load, Fres, may include several contributions. Limiting

our analysis to the most relevant ones, we shall write the road load as

Fres(t) = 1
2

ρaCD(t)Af (v(t) − w)2 + Crrmg cos(α(s(t))) +

+ Ccr

m2v(t)4
R(s(t))2

+ mg sin(α(s(t))) ,

(2.2)

where Crr is the coefﬁcient of rolling resistance, α and R are the road slope and
the out-of-the-pictured-plane radius of curvature, which are generally functions of
the vehicle’s position s, ρa is air density, w is longitudinal wind speed, Af is vehi-
cle’s frontal area, Ccr the coefﬁcient of cornering resistance [2, 3], and CD is the
aerodynamic drag coefﬁcient.

The ﬁrst three terms in the right-hand side of (2.2) must be regarded as approx-
imations of physically complex phenomena [1]. Basically, these terms deﬁne the
coefﬁcients Crr, Ccr, and CD to represent rolling, cornering, and aerodynamic resis-
tance forces. Typical values for Crr on dry roads range from 0.002 (high-quality
bicycle racing tires) to 0.02 (car tires at low pressure). Typical values for CD range
from 0.15 (low-drag concept cars) to 1.2 (utility bicycles with cyclist). The order of
magnitude of Ccr is of 10−5.

The main factors that inﬂuence such parameters are described in standard books on
vehicle systems [1]. They comprise of vehicle, road, and weather factors, such that for
a given trip, they can be generally considered as constants.2 Perhaps the only relevant
exception is the variation of CD as a function of the inter-distance with a leading
vehicle. Since the reduction of this coefﬁcient when the inter-distance approaches to

2From here on, we shall always make use of this assumption, unless explicitly stated.

2.1 Road Load

37

zero can be very relevant, both for the follower and, albeit less markedly, the leader
[4, 5], this property is the basis of energy-saving techniques such as platooning (for
heavy-duty trucks) or drafting (for bicycles).

Often Fres is identiﬁed as a whole by letting the vehicle coast (Fp = Fb = 0) on
a ﬂat and straight road (α = 0, R → ∞) with no wind (w = 0), and observing the
speed variation, then expressed as a polynomial function of v(t),

Fres(t) = C0 + C1v(t) + C2v(t)2 ,

(2.3)

where the C’s are called the road load coefﬁcients.

Note that, in the “backward” approach presented at the beginning of this chapter,
(2.1)–(2.3) are used to evaluate Fp(t) as a function of v(t), its derivative d v/dt, and
s(t).

2.1.2 Energy Requirement at the Wheels

Based on the longitudinal dynamics introduced in the previous section, in this section
we shall derive equations for the energy needed at the wheels, EW , to follow a
prescribed speed proﬁle v(t) covering a distance sf in tf units of time. For such a
“trip”, the useful energy EM will be deﬁned as

EM = 1
2

mt(v2
f

− v2
i

) + mg(cid:3)z ,

(2.4)

where vi and vf are velocities at origin and destination respectively, and (cid:3)z is total
elevation change during the trip.

Let us ﬁrst deﬁne the net force at the wheels as Fw(t) (cid:2) Fp(t) − Fb(t). The instan-
taneous power needed at the wheels is thus Fw(t)v(t). From (2.1–2.2), assuming a
straight road with no wind,3 the net energy EW can then be calculated as

(cid:2)

tf

0
(cid:3)

tf

EW =
(cid:2)

Fw(t)v(t)dt =

Using (2.4), integration yields

mt

d v(t)
dt

+ mg(sinα(s(t)) + Crrcosα(s(t)) + 1
2

0

(cid:4)

ρaAf CDv2(t)

v(t)dt .

EW = EM + mgCrr(cid:3)x + 1
2

ρaAf CD

v3(t)dt ,

(cid:2)

tf

0

(2.5)

(2.6)

3From here on, we shall always make use of this assumption, unless explicitly stated.

38

2 Fundamentals of Vehicle Modeling

where (cid:3)x is the horizontal distance covered. Note that road grade does not appear
after integration. However, it shall be explained later that, because of constraints on
velocity and powertrain output, the elevation proﬁle along a trip can have a signiﬁcant
effect on energy use and prior knowledge of it can help save fuel via better constraint
management.

The analysis of (2.6) shows that the term EM does not offer opportunities for
reducing EW , since it is dictated by initial and terminal conditions only. The term
mgCrr(cid:3)x represents the irreversible frictional loss and could be reduced by choosing
shorter routes with lower Crr. The last term, the energy lost to aerodynamic drag, is
the only term that can be inﬂuenced by the decisions along the route and therefore
should be a core consideration in eco-driving.

In this regard, lower speeds obviously result in lower losses to drag. More specif-

ically, the drag term can be explicitly evaluated as in [6]:

1
2

ρaAf CD

(cid:2)

tf

0

v3(t)dt = 1
2

ρaAf CD

(cid:3)

bvσ 3
v
¯v

(cid:4)

+ 3σ 2
v

+ ¯v2

sf ,

(2.7)

where

is the average speed (ﬁrst raw moment of speed),

is its variance (second central moment), and

(cid:5)
tf
0 v(s)dt
tf

=

,

sf
tf

¯v (cid:2)

(cid:5)

tf
0

(cid:5)

tf
0

σ 2
v

(cid:2)

(v(t) − ¯v)2dt

,

tf

bv (cid:2)

(v(t) − ¯v)3dt
tf σ 3
v

,

(2.8)

(2.9)

(2.10)

is speed skewness (third standardized moment). A generalization of (2.6) with the
parametrization (2.3) for the ﬂat road load thus reads

(cid:3)

EW = EM +

C0 + C1 ¯v + C2 ¯v2 + C1

+ 3C2σ 2
v

sf .

(2.11)

σ 2
v
¯v

(cid:4)

+ C2bvσ 3
¯v

v

In summary, the wheel-to-distance energy loss EW − EM depends on four driving
parameters (sf , ¯v or, alternatively, tf , σ 2
v , and bv) and three vehicle parameters (C0,
C1, C2). Their relative inﬂuence can be evaluated with a sensitivity analysis, deﬁning
the sensitivity with respect to the generic parameter π as

Sπ (cid:2)

∂(EW − EM )
∂π

·

π
EW − EM

.

(2.12)

2.1 Road Load

Sensitivities

0.5

1

0

39

S ¯v

Sσ2
v

Sbv

SC0

SC2

Urban

Mixed

Highway

Increasing ¯v

Fig. 2.8 Relative inﬂuence of driving proﬁle parameters on the wheel-to-distance losses of a typical
full-size passenger car, for urban, mixed, and highway type proﬁles

Typical values of sensitivities to driving and vehicle parameters are shown in
Fig. 2.8 for urban, mixed, and highway driving proﬁles. While the inﬂuence of C0
(largely representative of rolling resistance) is larger than that of C2 (aerodynamic
drag) at low average speeds, the situation is the opposite as ¯v increases. For high
average speeds, the relative inﬂuence of ¯v also becomes dominant over that of the
(cid:6)
is only relevant for urban and mixed
other driving parameters. The sensitivity
driving conditions. Finally, the skewness bv has generally a little inﬂuence.

σ 2
v

The previous analysis shows that, while vehicle parameters play an important role
in determining the energy demand, the approach of improving wheel-to-meters efﬁ-
ciency by “controlling” the driving proﬁle reveals all its potential when considering
that it does not require structural or material changes to the system.

2.1.3 Energy Required from the Powertrain

The wheel energy evaluated with (2.6) or (2.11) does not take into account the
energy dissipated in friction brakes that are acting on the wheels. To include this
term, powertrain energy can be deﬁned as

Ep =

Fp(t)v(t)dt = EW +

Fb(t)v(t)dt ,

(2.13)

(cid:2)

tf

0

(cid:2)

tf

0

where the braking force Fb ≥ 0 explicitly appears.

The amount of this force (total braking effort) depends on the braking strategy
and is usually split between the wheel axles. Of course, brakes are normally activated
only for slowing a moving vehicle, thus to provide a required deceleration in addition
to that induced by resistive forces. For our purposes, it is reasonable to assume that

40

2 Fundamentals of Vehicle Modeling

(cid:7)

Fb(t) =

−(1 − kb(t))Fw(t),
0,

if Fw(t) < 0
otherwise

,

(2.14)

where kb is the ratio of regenerative braking force (recuperated by the powertrain
and stored in the onboard tank) to the total braking force. For engine-based vehicles
without recuperation devices, kb is close to zero, while for electriﬁed vehicles 0 <
kb < 1. An ideal vehicle would have kb = 1 (perfect recuperation) and, in this case,
Ep would be the same as EW .

The condition Fw < 0 means that the vehicle transfers power to the powertrain
or brakes and deﬁnes the braking mode B. Contrarily, in the traction mode T (when
Fw > 0), the vehicle is receiving power from the powertrain. The separating situation
is called coasting. In such a mode, the vehicle is moving solely due to the resistive
forces (mtd v/dt = −Fres, Fw = 0), thus both Fp and Fb are zero. In the stop mode
S, if present, the speed is also equal to zero.

Inserting (2.14) into (2.13), the powertrain energy can be evaluated as
(cid:4)

(cid:3)

(cid:3)

(cid:4)

(cid:2)

(cid:2)

Ep =

T

mt

d v(t)
dt

+ Fres(t)

v(t)dt +

kb(t)

mt

+ Fres(t)

v(t)dt .

d v(t)
dt

B

(2.15)
The ﬁrst term in the right-hand side of (2.15) can be explicitly computed with the
methods introduced in Sect. 2.1.2, but with the driving parameters (distance, average
speed, higher moments) now evaluated for the traction phase only. The second term
is negative by deﬁnition. Its explicit evaluation is made complex by the variability of
kb. However, if kb is considered as a constant parameter, the methods of Sect. 2.1.2
still apply.

*
* *

We switch now our attention to the evaluation of the tank energy, that is, the energy
consumed from the onboard source(s), differentiating this evaluation by the type of
powertrain.

2.2 Internal Combustion Engine Vehicles

Among fuel-powered vehicles, the vast majority are composed of vehicles (cars,
trucks, buses, and others) propelled by a reciprocating internal combustion engine
(ICE). Such powertrains consists of an engine that burns fuel stored in a tank, deliv-
ering mechanical power to a rotating shaft, from which it is transmitted to the wheels
by a drivetrain (see Fig. 2.2).

In ICE-powered vehicles (ICEVs), the tank energy consumption corresponds to

the chemical energy burned with the fuel,
(cid:2)

(ICEV )
E
T

=

Pf (t)dt ,

tf

0

(2.16)

2.2 Internal Combustion Engine Vehicles

41

where Pf is the fuel power, the product of fuel mass ﬂow rate and its lower heating
value. How Pf is related to the driving proﬁle will be now described by following
the approach of Fig. 2.2 and analyzing separately the drivetrain and the engine.

2.2.1 Drivetrain (Gearbox)

In ICE-powered vehicles, the output of the engine is transmitted to the driving wheels
by a drivetrain. The components in the drivetrain vary according to the type of drive
(front-wheel, rear-wheel, four-wheel) but generally include a clutch, a transmission,
a drive shaft, and a ﬁnal drive with differential.

Apart from rarely used continuously-variable transmissions (CVT), usually trans-
missions with a ﬁnite number of gear ratios (gearboxes) are used, with the ability to
switch between them. The drivetrain transmission ratio γe in this case is the product
of the transmission ratios of the gearbox and the ﬁnal drive, and can take the G
discrete values γe ∈ {γe,g}, g = 1, . . . , G. The gear selected at a particular time t
is determined either by the driver (manual transmissions, automated manual trans-
missions (AMT)) or by the transmission controller (automatic transmissions). In the
latter case, gear ratio is the result of a gear shift law that can be expressed as a map

γe(t) = (cid:8)(v(t), Fp(t)) .

(2.17)

A common speed-only-dependent form for such a map is4

(cid:8)(v) = γe,1 +

(γe,g+1 − γe,g)(1 + sin(arctan(αg(v − vsh,g)))) ,

(2.18)

G−1(cid:8)

g=1

1
2

where vsh,g are the gear-shift speeds and the coefﬁcients αg are chosen to make the
gear transition sufﬁciently smooth, see Fig. 2.9.

Following the backward calculation approach illustrated in Fig. 2.2, the engine
torque Te is related to the powertrain force Fp through the overall transmission ratio,

Te(t) =

Fp(t)rw
γe(t)ηsign (Fp(t))

t

,

(2.19)

where rw is the wheel radius and ηt is the transmission efﬁciency. This quantity
depends on the gear ratio used, although this dependency is often neglected.
Conversely, engine rotational speed ωe is related to the vehicle’s speed v,

4This approximation is usually valid only for small and large force values. For intermediate values,
the gear-shift speeds would increase with force. Also, the gear-shift speeds are usually different for
upshifts than for downshifts.

2 Fundamentals of Vehicle Modeling

g = 1

g = 5

42

Engine
Speed

Launch
Speed

Launch vsh,1 vsh,2

vsh,3

vsh,4

Vehicle Speed

Fig. 2.9 Qualitative speed-only-dependent gear shift law described by (2.18)

ωe(t) =

v(t) .

γe(t)
rw

(2.20)

Note that (2.19) implies a discontinuous derivative ∂Te/∂Fp at Fp = 0 (coasting
operation). A particular case of coasting is when the transmission is in the neutral
state, with a clutch opening to disconnect the engine from the wheels. Commonly
reserved for the stopped vehicle state, this operation is nowadays used also in sailing
maneuvers, aimed at prolonging coasting by suppressing the engine brake effect to
save fuel. The neutral cannot be described by setting γe = 0 in (2.19) and (2.20). In
this case the engine is either stopped or idling (see below).

Note also that, during clutching maneuvers (in manual transmissions) or torque
converter maneuvers (in automated transmissions), the relation between engine and
vehicle speeds and torques cannot be described by (2.19)–(2.20).

2.2.2 Engine

Although engines can differ substantially concerning the type of fuel (gasoline,
diesel, alternative fuels such as LPG, natural gas, E85), the thermodynamic cycle fol-
lowed (four-strokes, two-strokes), the aspiration method (naturally aspirated, super-
charged), and generally the technology used, they share a similar representation for
our purposes.

The fuel power Pf can be modeled under a steady-state approximation using

tabulated data (“engine map”) as a function of engine torque and rotational speed,

Pf (t) = f (Te(t), ωe(t)) .

(2.21)

Te,η

Te,min

2.2 Internal Combustion Engine Vehicles

43

Fig. 2.10 Example
efﬁciency map of a
naturally-aspirated
spark-ignition engine

Te

Te,max

ηe

0

ωe,idle

ωe,launch

ωe,max

ωe

Equivalently, an engine map can be expressed in terms of efﬁciency

ηe (cid:2) Teωe
Pf

,

(2.22)

as depicted by the contour lines in Fig. 2.10.

This ﬁgure also shows that the engine operation is restricted by a certain number of
limitations, namely: (i) the full-load torque Te,max, which depends on the rotational
speed; (ii) the fuel-cutoff torque Te,min, which is negative due to friction and also
dependent on speed; (iii) the maximum speed ωe,max; and (iv) the launch speed at
which the engine starts producing stable torque, ωe,launch.

When the vehicle is stopped or coasting, the engine might be disconnected by
putting the transmission in neutral, and run at the idle speed ωe,idle. To cover this
situation, the idle consumption must be considered alongside the engine map. How-
ever, modern engines are often equipped with a stop-start device that turns the engine
off during these operations.

The curve Te,η is the locus of the engine operating points for which the efﬁciency—
deﬁned by (2.22)—is the highest for those at the same output power. It is referred to
as optimal operating line (OOL) of the engine and does not in general coincide with
the maximal torque curve.

For the online applications described later in this book, e.g., in Chap. 8, approxi-
mated polynomial expressions are preferred to (2.21). The most used of such expres-
sions is the afﬁne-in-torque Willans model [1]

Pf (t) = Te(t)ωe(t) + Pe,min(ωe(t))

,

e(ωe(t))

(2.23)

deﬁned by the speed-dependent parameters e (efﬁciency of the thermodynamic
energy conversion from fuel to cylinder pressure) and Pe,min = ωeTe,min (mechan-

44

2 Fundamentals of Vehicle Modeling

(a)

Pf [kW]

180

150

120

90

60

30

ωe = 5000 rpm

e = 0.36

ωe = 3000 rpm

e = 0.43

Pe,min = 2 kW
Pe,min = 4.8 kW
Pe,min = 7.6 kW
Pe,min = 11.5 kW

ωe = 2000 rpm

e = 0.44
ωe = 1000 rpm
e = 0.4

-10

0

10

20

30

40

50

Pe [kW]

(b)
Pe,min
e

[kW]

45

30

15

0
0

2.55 − 0.0016ωe+
+2.93 · 10−8ω2
e

(c)

1/e [-]

2.8

2.6

2.4

2.2
0

43.3ωe + 0.0396ω2
e

1 2 3 4 5 6

ωe [krpm]

1 2 3 4 5 6

ωe [krpm]

Fig. 2.11 Willans lines (dashed) and actual map data (solid marked) of a naturally-aspirated spark-
ignition engine, with ﬁtted values of e and Pe,min for various speeds (a). Parametrization of Pe,min/e
(b) and 1/e (c) leading to (2.24) (ωe in rad/s)

ical friction and pumping losses). An example Willans representation of an engine
map is shown in Fig. 2.11a.

The further parametrization of the terms 1/e and Pe,min/e as a function of speed

leads to the closed-form expression [7]

Pf (t) = (ke,0ωe(t) + ke,1ω2
e

(t)) + (ke,2 + ke,3ωe(t) + ke,4ω2
e

(t))Te(t)ωe(t) ,

(2.24)

2.2 Internal Combustion Engine Vehicles

45

where the kei’s, i = 0, . . . , 4 are design-dependent coefﬁcients. An illustrative exam-
ple of the data ﬁtting leading to (2.24) is shown in Fig. 2.11b, c. Note that (2.23)
or (2.24) also capture the idle speed consumption, obtained by setting Te = 0 and
ωe = ωe,idle.

In the example of Fig. 2.11, the afﬁne dependency of the fuel power on torque or
mechanical power is reasonably valid for all speeds shown, and up to the maximal
torque allowed at each speed. In more general terms, however, the afﬁne range extends
only up to an intermediate torque, often coincident with or close to Te,η, after which
the curve Pf − Pe becomes visibly convex.5

The engine brake torque curve Te,min(ωe) is obtained from (2.24) by setting Pf = 0
(fuel cutoff). For the maximum torque curve Te,max, convenient parametrizations [7]
are the quadratic relation

Te,max(t) = ke,5 + ke,6ωe(t) + ke,7ω2
e

(t)

(2.25)

for SI, naturally-aspirated engines, and a piecewise-afﬁne relation of the type

Te,max(t) = min

ke,8 + ke,9ωe(t), ke,10, ke,11 + ke,12ωe(t)

(2.26)

(cid:9)

(cid:10)

for turbocharged engines.

2.2.3 Fuel Energy Consumption of ICEVs

With the models introduced in the previous sections, it is possible to evaluate the
fuel energy consumption of an ICEV deﬁned by (2.16). It is further assumed that
in the braking phase B (Fw < 0) the fuel injection is disabled (fuel cut-off ), thus
the engine absorbs the power Pe,min (engine brake). With the notation of Sect. 2.1.3,
kb = −Pe,minηt/(vFw). Consequently, the integral in (2.16) is limited to the traction
phase and, inserting (2.23), is evaluated as

(cid:2)

(ICEV )
E
T

=

v(t)Fw(t)/ηt + Pe,min(ωe(t))
e(ωe(t))

T

dt ,

With the parametrization of (2.24), the integral in (2.27) can be written as a sum of
terms

(cid:8)

(ICEV )
E
T

=

E

(ICEV )
T ,g

=

(cid:2)

(cid:8)

g
(cid:9)
ke,2 + ke,3ωe,g(t) + ke,4ω2
e,g

g

+

(cid:9)
ke,0ωe,g(t) + ke,1ω2
e,g
(cid:10)

+

(cid:10)

Tg

(t)

v(t)Fw(t)/ηt

dt ,

5A behavior that is seen for the last point at 5000 rpm in Fig. 2.11a. For some engine technologies,
e.g., downsized-supercharged engines that require spark retard to avoid knock at high torque, these
curves might become more convex at high engine power, especially at low speed.

(2.27)

(2.28)

46

2 Fundamentals of Vehicle Modeling

(ICEV )
T ,g

where each term E
corresponds to the gear g and is evaluated by integrating
over Tg, the particular portion of T where gear g is engaged. Developing all terms,
an explicit formula is obtained, which reads

E

(ICEV )
T ,g

=

(cid:11)

(cid:3)

ke,0γe,g
rw
ke,1γ 2
e,g
r2
w

(cid:11)

(cid:11)

(cid:3)

(cid:11)

ke,2C2
ηt

(cid:4) (cid:2)

ke,3γe,gC2
rwηt
mtke,2
ηt
mtke,4γ 2
e,g
r2
w

ηt

(cid:4) (cid:2)

+ ke,2C0
ηt

v(t)dt +
(cid:12) (cid:2)

Tg
+ ke,3C0γe,g
rwηt
ke,4γ 2
e,gC0
ηt
r2
w
(cid:12) (cid:2)

+

+ ke,2C1
ηt
+ ke,3γe,gC1
rwηt
ke,4γ 2
e,gC1
ηt
r2
w

+

v(t)d v +

Tg
(cid:12) (cid:2)

v3(t)d v

Tg

v2(t)dt +

Tg
(cid:12) (cid:2)

v3(t)dt +
(cid:11)

Tg

ke,4γ 2
e,gC2
ηt
r2
w

(cid:12) (cid:2)

.

v5(t)dt +

Tg

v4(t)dt +
(cid:4) (cid:2)

(cid:3)

Tg
mtke,3γe,g
rwηt

v2(t)d v +

Tg

(2.29)
In this formulation, the fuel energy consumption is expressed as a sum of many terms,
each being the product of a vehicle-dependent factor and a driving-dependent factor
under the form of an integral. Each of these integrals can be further expressed as a
function of the average speed over the partial phase Tg and higher moments, using
the procedure illustrated in Sect. 2.1.2.

2.3 Electric Vehicles

Electric vehicles (EV) are powered by a battery that accumulates electrochemical
energy and delivers electric power at its terminals. Batteries are reversible storage
systems, thus they can be recharged during their operation if electricity is provided.
Otherwise, they are ﬁlled back by external chargers when the vehicle is stopped
at charging stations. The EV powertrain is completed by one or more reversible
electric machines, that can be operated as motors or generators. Usually, three-phase
alternating current machines are used. The direct-current electricity at the battery
terminals is transformed to alternating current and back by a power electronic device,
an inverter. The mechanical power at the machine shaft is linked to the wheels by
the drivetrain.

In EVs, the tank energy corresponds to the electrochemical energy drained from

or supplied to the battery,

(EV )
E
T

=

Pb(t)dt ,

(cid:2)

tf

0

(2.30)

2.3 Electric Vehicles

47

where Pb is the electrochemical power. How this quantity is related to the driving
proﬁle, will be now described by following the approach of Fig. 2.3 and analyzing
separately the drivetrain, the motor with its inverter, the power link, and the battery.

2.3.1 Drivetrain

In electric vehicles the drivetrain is usually equipped with a transmission with a ﬁxed
conﬁguration (single-gear reductor). Deﬁning the drivetrain transmission ratio γm as
the product of the ﬁnal drive and reductor ratios, (2.19)–(2.20) are replaced by

and

Tm(t) =

Fp(t)rw
γmηsign(Fp(t))

t

ωm(t) =

v(t) ,

γm
rw

respectively, where Tm and ωm are motor torque and speed.

2.3.2 Motor and Inverter

Traction motors adopted in electric vehicles are usually permanent-magnet, syn-
chronous AC machines or, to a lesser extent, induction (asynchronous) AC machines,
although newer technologies are emerging. For our purposes, all these motor types
share a similar representation.

Electric power supplied to or generated by the motor, including its inverter, Pm, is
usually tabulated (“motor map”) as a function of motor torque and rotational speed,

Equivalently, a motor map can be expressed in terms of efﬁciency

Pm(t) = f (Tm(t), ωm(t)) ,

ηm (cid:2)

(cid:3)

Tmωm
Pm

(cid:4)

sign(Tm)

,

as depicted by the contour lines in Fig. 2.12. Note that the motor map extends
to two quadrants of the torque-speed plane, reﬂecting the reversible nature of these
machines, that are able to operate as a motor (Tm > 0) as well as a generator (Tm < 0).

(2.31)

(2.32)

(2.33)

(2.34)

48

2 Fundamentals of Vehicle Modeling

Fig. 2.12 Example
efﬁciency map of an electric
machine

Tm

ηm

0

ωm,base

ωm,max

ωm

Tm,max

Tm,min

The operation of electric machines is restricted by a number of limitations, namely:
(i) the maximum torque Tm,max that can be provided continuously,6 a speed-dependent
quantity that is constant from zero speed up to a certain value known as base speed,
ωm,base, then decreases with speed roughly hyperbolically; (ii) the maximum torque
in the generator range, Tm,min that is a similar function of speed; and (iii) the maximum
speed ωm,max. Contrarily to engines, there is no minimum speed and the motor can
produce torque at rest.

For the online implementation described in Chap. 8, approximated closed-form
expressions are used instead of (2.33). For instance, the physics of DC motor inspires
the quadratic model [8]

Pm(t) = b2(ωm(t))T 2
m

(t) + b1(ωm(t))Tm(t) + b0(ωm(t)) ,

(2.35)

where the b’s are tunable parameters. Further parametrization of the b’s coefﬁcients
as a function of the motor speed leads to the closed-form expression

(cid:9)

(cid:10)

Pm(t) =

km,4 + km,5ωm(t) + km,6ω2
(t)+
m
(t) + km,1ωm(t) + km,0

+ km,3ωm(t)Tm(t) + km,2ω2
m

T 2
m

(t)

(2.36)

6Higher torque levels can be delivered for short times; correspondingly, motor maps often present
peak torque curves for various delivery times.

300

200

100

-100

-200

(c)

b1
×103
1.5

1

0.5

2.3 Electric Vehicles

49

(a)

Pm [kW]

ωe = 14000 rpm

ωe = 10500 rpm

ωe = 7000 rpm

ωe = 3500 rpm

-300

-200

-100

100

200

300

0

Tm [N]

b2

3

2

1

0

as

(b)

0.27 − 0.001ωm+
+1.27 · 10−6ω2
m

4670 − 0.7ωm+
+0.004ω2
m

(d)

b0
×104
1.5

1

0.5

ωm

5 10 15

ωm
[krpm]

0

5 10 15

ω m
[krpm]

0

5 10 15

ω m
[krpm]

Fig. 2.13 Quadratic model (dashed) and actual map data (solid marked) of a synchronous
permanent-magnet motor (a). Parametrization of b2 (b), b1 (c), and b0 (d) leading to (2.36) (ωe in
rad/s)

that, as Fig. 2.13 illustrates, is often sufﬁciently accurate, at least in the operating
regions not too far above the base speed. Even simpler representations, for instance,
constant motoring and generating efﬁciency, have also been adopted in energy efﬁ-
ciency studies.

As shown in Fig. 2.12, the maximum torque curve can be effectively approximated

Tm,max(t) = km,7

min(ωm,base, ωm(t))
ωm(t)

,

(2.37)

50

2 Fundamentals of Vehicle Modeling

where the coefﬁcient km,7 corresponds to the nominal torque and the base speed is the
ratio of nominal power to nominal torque. As for the minimum torque curve Tm,min,
it is often equaled to −Tm,max.

2.3.3 Power Link

The power link electrically connects the battery terminals to the inverter input, allow-
ing for bi-directional ﬂow of electricity. Although losses inevitably occur in power
links, usually these contributions are neglected, such that, following the backward
calculation ﬂow in Fig. 2.3, it is assumed that

Pl(t) = Pm(t) .

(2.38)

where Pl is the electric power out of the battery.

2.3.4 Battery

As of 2017, most of automotive traction batteries embody one of the variants of
the lithium-ion technology, which has superseded older technologies such as nickel-
metal hydride or lead-acid. Although lithium-ion batteries can differ substantially
among each other concerning the speciﬁc chemistry of the cathode (NMC, LMO,
LFP, LCO, NCA, etc.), the anode, and their sizes, for our purposes they share a
similar representation.

The battery power is calculated by modeling the battery electro-chemistry as an
equivalent electric circuit, with an ideal voltage source Vb0 and an internal resistance
Rb in series, see Fig. 2.14. With this representation, the electrochemical power to be
used in (2.30) is Pb = Vb0Ib and it is further evaluated as a function of the terminal
power Pl = VbIb as

Fig. 2.14 Equivalent circuit
of a battery

Vb0

Vb

Rb

Ib

2.3 Electric Vehicles

Fig. 2.15 Constant-
efﬁciency model (dashed)
and actual tabulated data
(solid marked: ∗ 50% SoC,
(cid:7) 90% SoC, (cid:3) 10% SoC) of
a lithium-ion battery

51

1.095Pl

-80

-60

-40

-20

20

40

60

80

Pl [kW]

Pb [kW]

80

60

40

20

-20

-40

-60

-80

0.91Pl

(cid:13)

Pb(t) =

− Vb0

V 2
b0
2Rb

V 2
b0

− 4Pl(t)Rb

.

4R2
b

(2.39)

Note that Pb and Pl are deﬁned as positive for discharging and negative for charging.
The difference between Pb and Pl is due to inner battery losses. For the online
use described in Chap. 7, these effects are sometimes further simpliﬁed to a constant
efﬁciency model

Pb(t) = Pl(t)η−sign(Pl (t))

,

b

(2.40)

see Fig. 2.15, or even neglected, Pb(t) = Pl(t).

The open-circuit voltage Vb0 and internal resistance Rb may actually vary with time
as they depend on the level of energy accumulated in the battery. The usual measure
of such energy is the State of Charge (SoC), deﬁned as ξb = qb/Qb, where qb is the
remaining charge and Qb is the nominal battery capacity, a quantity that is usually
expressed in ampere-hour units (Ah). Assuming a simple “Coulomb-counting” model
for the battery charge depletion, dqb(t)/dt = −Ib(t), the SoC dynamics reads
˙ξb(t) = − Pb(t)
Vb0Qb

(2.41)

.

The SoC is useful to describe the limitations imposed on the battery operation. Of
course, in principle 0 ≤ ξb ≤ 1, however, automotive batteries are often managed in
such a way that ξb,min ≤ ξb ≤ ξb,max, where the admissible range tends to be wider for
batteries equipping EVs and plug-in HEVs. Additional operating limits are imposed
on battery voltage and, consequently, on output power Pl.

We deﬁne for later use the energy stored in the battery as εb (cid:2) qbVb0.

52

2 Fundamentals of Vehicle Modeling

2.3.5 Electric Energy Consumption of EVs

With the models introduced in the previous sections, it is possible to evaluate the
electric energy consumption of an EV. It is further assumed that friction brakes are
not used so that the recuperation potential is exploited at its maximum (kb = 1 in the
nomenclature of Sect. 2.1.3).7

Since the drivetrain model (2.31) and the battery model (2.40) have a different
form for traction/discharge (Tm > 0, Pm > 0) and braking/charge (Tm < 0, Pm < 0),
the integral of (2.30) is conveniently split in two parts,

(2.42)

(2.43)

(2.44)

(EV )
E
T

=

E

(EV )
T ,σ

,

(cid:8)

σ

(EV )
T ,σ =
E

ij Cσ
Eσ

ij

.

i,j,σ

Cσ
ij

(cid:2)

vi ˙vjdt ,

σ

with σ ∈ {T , B} spanning the two phases deﬁned in Sect. 2.1.3. Using the parametric
models (2.36) and (2.40), and developing all terms, an involved but explicit formula
is obtained, of the type
(cid:8)

Each term in the summation is the product of a vehicle-dependent factor (E) and a
driving-dependent factor (C), deﬁned as
(cid:2)

with the integral extended only to times where the mode σ is active. For instance,
when km,5 = km,6 = 0 and ηb = 1, one obtains

(EV )
T ,σ =
E
(cid:2)

(cid:4) (cid:2)

(cid:3)

dt +

(cid:3)
km,0 + C2
0 km,4r2
w
η2σ
γ 2
t
m
(cid:3)
C1km,3
ησ
t

v(t)dt +
(cid:3)

+

σ
γ 2
mkm,2
r2
w
(cid:4) (cid:2)
+ 2C1C2km,4r2
η2σ
t
(cid:4) (cid:2)

γ 2
m

w

σ
(cid:3)

σ

+

C2km,3
ησ
t

(cid:3)

(cid:4)

·

+

C0km,3
ησ
t
+ C2
1 km,4r2
w
η2σ
γ 2
t
m

v3(t)dt +

w

w

γ 2
m
(cid:4) (cid:2)

γmkm,1
+ 2C0C1km,4r2
η2σ
rw
t
+ 2C0C2km,4r2
η2σ
γ 2
t
m
(cid:4) (cid:2)
(cid:3)
C2
2 km,4r2
w
η2σ
γ 2
t
m
+ 2C1km,4mr2
η2σ
t
(cid:4) (cid:2)

σ
(cid:4) (cid:2)

γ 2
m

w

σ

σ

v4(t)dt+

v(t)a(t)dt+

v2(t)dt+

+

2C0km,4mr2
w
η2σ
γ 2
t
m
+ 2C2km,4mr2
η2σ
t

γ 2
m

w

(cid:2)

σ

a(t)dt +

σ

a(t)v2(t)dt +

(cid:3)

km,3m
ησ
t
km,4m2r2
w
η2σ
γ 2
t
m

a2(t)dt ,

σ

(2.45)
where the exponents σ ’s stand here for +1 (traction) and −1 (braking), respectively.

7In practice the situation kb < 1 is common, since in most braking maneuvers both vehicle axles
must brake due to stability issues, and often recuperation is available only on one axle.

2.3 Electric Vehicles

53

Each of these integrals can be further expressed as a function of the average speed
and higher moments over the phases T and B, using the procedure illustrated in
Sect. 2.1.2.

2.4 Hybrid-Electric Vehicles

Hybrid-electric vehicles (HEV) are a combination of an engine-based vehicle and
an electric vehicle. According to how the power is combined, HEVs are classiﬁed
as parallel (coupling of the mechanical power of the engine with that of the motor),
series (coupling of the electric power of the battery and of an engine-based electrical
generation unit), or series-parallel (both couplings are present, often with a power-
split device such as a planetary gear-set). According to the position of the coupling,
parallel hybrids are further classiﬁed to several types, typically labeled from P0, if
the motor is coupled to the engine belt, to P4, if the motor is mounted on one of the
axles. According to the battery operation strategy, HEVs are classiﬁed as charge-
sustaining hybrids, where the battery cannot be recharged from an external source,
or plug-in hybrids.

In HEVs, energy is generally drained both from the fuel tank and the battery. The
measure of energy consumption adopted depends on the type of battery operation.
However, a common deﬁnition of an HEV energy consumption can be written as

(HEV )
E
T

=

(Pf (t) + s · Pb(t))dt ,

(2.46)

(cid:2)

tf

0

where s is an “equivalence factor” that weights the electricity consumption with
respect to the fuel consumption.

For charge-sustaining HEVs, s is vehicle- and cycle-dependent and must be deter-
mined by interpolation of two or more tests, e.g., using the procedure [9]. For plug-in
hybrids, standards such as [9] recommend fuel economy evaluation rules that can be
transcribed as (2.46), where s is a prescribed coefﬁcient.

How the quantities Pf and Pb are related to the driving proﬁle, will be now
described by following the approach of Figs. 2.4 and 2.5. Models of the engine, the
electric machine, and the battery presented in the previous sections still apply to
HEVs. However, the nature and role of drivetrain and power link depends on the
hybrid architecture, as will be now discussed.

2.4.1 Drivetrain and Power Link

In parallel HEVs the powertrain force results from the combination of the engine
torque and the motor torque,

54

2 Fundamentals of Vehicle Modeling

(2.47)

(2.48)

(2.49)

Te(t) = u(t)

Tm(t) = (1 − u(t))

,

Fp(t)rw
γe(t)ηsign(Fp(t))
Fp(t)rw
γmηsign(Fp(t))

t

t

,

ωm(t) =

v(t) ,

ωe(t) =

v(t) .

γm
rw
γe(t)
rw

Pg(t) = u(t)Pm(t) ,
Pl(t) = (1 − u(t))Pm(t) ,

where u(t), the torque split ratio, is the degree of freedom offered by the parallel
hybrid architecture. In other terms, one between Te and Tm can be chosen freely to
satisfy a given Fp. In contrast, the speed levels are unambiguously related to the
vehicle speed,

As for the power link, in parallel HEVs it links a single electric source (battery) to a
single electric load (motor), therefore (2.38) applies.

In series hybrids, the drivetrain is described by (2.31) and (2.32), while the power

balance at the electric link reads

where u(t) is now the power split ratio, a degree of freedom offered by the series
architecture, and Pg is the electric power generated by the auxiliary power unit (APU).
This electric generation unit is composed of an engine and an electric machine,
the latter exclusively operated as a generator, mechanically connected such that Te
is rigidly tied to Tg and so are ωe and ωg. For such a system, the relation between
Pf (t) and Pg(t) is not unambiguous, as it depends on the rotational speed at which
the two machines are operated. The latter is a second degree of freedom offered by
the series architecture and is usually chosen such as to maximize the APU efﬁciency,
following the optimal operating line of the APU (Fig. 2.16). This curve ultimately
provides the speeds and torques as a function of the generated electric power Pg,
while the engine models of Sect. 2.2.2 eventually provide Pf .

In series-parallel HEVs, coupling relations are more complex than (2.47)–(2.49),
as they involve coupling of rotational speeds. The reader is therefore referred to
standard vehicle modeling books [1].

The role of determining the degree of freedom u(t), either torque or power split,
or even more complex combination for architectures not detailed here, is played by
the hybrid energy management strategy (EMS). A description of such a strategy is
therefore necessary in order to predict the fuel and electric consumption of a HEV
for a given driving proﬁle.

2.4 Hybrid-Electric Vehicles

55

ηg

OOL

Pg

Te, Tg

0

Fig. 2.16 Example optimal operating line (OOL) of an APU. Also shown are contour lines of Pg:
the OOL is the locus of points that maximize ηg for different values of Pg

ωe, ωg

2.4.2 Energy Management Strategy

Several control designs are used for the EMS, including heuristic strategies and
optimization-based strategies.

Heuristic EMS are based on predeﬁned rules of the type

u(t) = f (Fp(t), v(t), ξb(t), γe(t), θe(t), . . .) ,

(2.50)

where the arguments in the right-hand side of (2.50) describe the vehicle state and the
driver’s request. The function f (·) is implemented in the onboard control unit under
the form of look-up tables, algorithms, or ﬁnite-state machines. As an example, in a
parallel HEV these rules might prescribe the use of the purely electric mode (u = 0)
only under certain driving situations, typically low speed and acceleration, and for
sufﬁciently high SoC. Heuristic strategies are heavily dependent on threshold values
or maps, which are to be tuned point by point with a relevant calibration effort.

Alternatively, optimal EMS are inspired by the solution of an optimal control
problem that aims to minimize the fuel consumption over the horizon tf , under a
constraint over the battery state of charge at the end of the horizon. In mathematical
terms,

Pf (u, v(t), . . .)dt ,

(2.51)

with u(t) subject to all physical limits described in the previous sections, and such
that

(cid:2)

Pb(u(t), v(t), . . .)dt = (cid:3)Eb ,

(2.52)

(cid:2)

tf

min
u(t)

0

tf

0

56

2 Fundamentals of Vehicle Modeling

Proﬁle

v(t),
Fp(t)

ζ

(2.54)

u(t|ζ)

Model

Pf (t|ζ)

Pb(t|ζ)

(cid:2) t f
0

t = 0, . . . ,t f

E f (ζ)

Eb(ζ) =
ΔEb?

Eb(ζ)

Iterations

(a) Ofﬂine

ζ(t)

ECMS

u(t)

(b) Online

ξ(t)

Power-
train

Pf (t)

Pb(t)

Driver

(2.54)

v(t),
Fp(t)

Fig. 2.17 Schematic ﬂowcharts of ofﬂine and online optimal EMS

where (cid:3)Eb is the target electric consumption. Generally, (cid:3)Eb = 0 for charge-
sustaining HEVs, while it is often taken as the remaining useful energy in the battery
for plug-in hybrids, in such a way that the EMS provides full discharge at the end of
the trip with minimum fuel consumption.

Using the theory of optimal control, this problem is solved by forming a Hamil-

tonian function H and then ﬁnding u(t) such that

u(t) = arg min H (u, v(t), . . .)

H (u, v(t), . . .) = Pf (u, v(t), . . .) + ζ ∗Pb(u, v(t), . . .) .

(2.53)
(2.54)

The quantity ζ ∗ is determined as the particular value that, when applied in (2.54),
gives place to trajectories u(t|ζ ∗) and consequently Pf (t|ζ ∗), Pb(t|ζ ∗), that fulﬁll
(2.52). As such, ζ ∗ is a vehicle-dependent constant that is additionally a function
of the whole proﬁle v(t), t ∈ [0, tf ]. It can be found by iterations for a prescribed
driving proﬁle known in advance (“ofﬂine optimal EMS”), see Fig. 2.17a.

However, the optimal ζ ∗ is generally not predictable during a real operation, since
the future driving proﬁles are generally not known in advance. Therefore, online EMS
can only be sub-optimal by adopting some kind of rule to provide estimations ζ (t)
of ζ as time advances. Often the Equivalent Consumption Minimization Strategy
(ECMS) approach is used, where ζ (t) is regulated as a function of deviations of SoC
from its target value, see Fig. 2.17b.

The use of connectivity in CAVs and conventional vehicles can improve the esti-
mation of ζ ∗ and thus the optimality of the EMS, by anticipating the fact that future
road slopes and trafﬁc conditions will lead to an over- or under-usage of the battery.
The resulting predictive energy management strategies are currently a subject of
research [10] but won’t be treated further in this book.

2.4 Hybrid-Electric Vehicles

57

2.4.3 Energy Consumption of HEVs

A closed-form expression of the energy consumed by an HEV along a given driving
proﬁle is harder to obtain than for ICEVs or EVs, even with suitable approximations
for Pf and Pb, because of the fundamental role played by the energy management
strategy in deﬁning such consumption. In particular, if the minimal fuel consumption
is to be predicted, that would imply an iterative process to ﬁnd the optimal ζ ∗.

The method called fully-analytical consumption estimation (FACE) [7] is based
on the assumption, conﬁrmed by observation, that the overall consumption (2.46) is
only slightly dependent on the particular choice of ζ , if an optimal EMS (2.54) based
on this value is applied. Under this assumption, any “reasonable” value of ζ would
provide a good estimate of the overall energy consumption (2.46).8 A reference value
can, for instance, be evaluated “ofﬂine” for a known driving proﬁle, then applied in
(2.46) to evaluate the energy consumption of any other proﬁle, even if ζ does not
satisfy condition (2.52).

According to this method, an estimation of the energy consumed is thus

(HEV )
E
T

=

Pf (t|s)dt + ζ

Pb(t|s)dt .

(2.55)

Using the models and methods already illustrated for ICEVs and EVs, (2.55) can be
reorganized as

(HEV )
E
T

=

ij Cgσ
Fgσ

ij

+ ζ

ij Cgσ
Egσ

ij

,

(2.56)

(cid:2)

tf

0

(cid:8)

i,j,g,σ

(cid:2)

tf

0

(cid:8)

i,j,g,σ

that is, a sum of many terms, each being the product of a vehicle-dependent factor
(F or E) and a driving-dependent factor (C). The latter are deﬁned as

Cgσ

ij

(cid:2)

vi ˙vjdt ,

(cid:2)

g,σ

(2.57)

with the integral extended only to times when the gear g and the mode σ are active.
Note that (2.29) and (2.43) are particular cases of (2.56). However, in HEVs the set
of possible operating modes is larger than in ICEVs or EVs, where σ ∈ {T , B}, since
it may include a fully-electric mode (u = 0), a fully-ICE mode (u = 1), a “boost”
mode (0 < u < 1), a recharge mode (u > 1), etc. Additionally, how a given proﬁle
is split into the various modes also depends on ζ .

8Only the overall, or “equivalent”, consumption can be estimated with this method; it does not
allow to ﬁnd separately the two energy contributions, i.e., the minimal fuel consumption for a given
battery consumption.

58

2 Fundamentals of Vehicle Modeling

2.5 Human-Powered Vehicles (Bicycles)

The most common human-powered vehicles (HPV) are bicycles. We shall thus limit
our analysis to such systems, where the powertrain is usually composed of the cyclist,
pedals, and a chain transmission. Besides purely-human-powered bicycles, motor-
ized bicycles also exist. While this concept has been historically dominated by engine-
based designs, today an increasingly greater role is played by electric bicycles, which
assist the cyclist with integrated electric motor and battery. Electric bicycles are fur-
ther classiﬁed as pedal-assist, where the motor augments the efforts of cyclists when
a sensor detects that they are pedaling, and power-on-demand systems (sensorless),
where the motor is activated by a throttle. The European legislation limits the electric
assistance at 250 W and up to 25 km/h speed. Those pedal-assist systems that exceed
these limits (e-bikes or s-pedelecs) are usually legally classed as motorcycles.

The human body is (also) a power converter that takes energy through food and
drink and produces useful energy in the form of muscular movements. The “tank”
energy of a bicycle is thus deﬁned as the metabolic energy spent by the cyclist,

(HPV )
E
T

=

Ph(t)dt ,

(cid:2)

tf

0

(2.58)

where Ph is the metabolic power, usually deﬁned with respect to the oxygen uptake,
that is, as the product of the volumetric consumption rate and the energy density of
oxygen.

How this quantity is related to the cycling proﬁle will be now described by follow-
ing the approach of Fig. 2.6 and analyzing separately the drivetrain and the cyclist’s
physiology.

2.5.1 Drivetrain

For a discrete-gear chain transmission, the force exerted by cyclist on pedals is
evaluated as a function of the needed force at wheels as

where γt is the chosen transmission ratio, ηt its efﬁciency (supposed constant), rw is
the wheel radius, lc the crank arm length. The cadence, or pedal rotational speed, is

Fc(t) = 1

γt(t)ηt

rw
lc

Fp(t) ,

ωc(t) =

γt(t)v(t)
rw

.

(2.59)

(2.60)

Consequently, the mechanical power is Pc = Tcωc = Fclcωc.

2.5 Human-Powered Vehicles (Bicycles)

For electric bicycles, (2.59) is replaced by

where u(t) is the power split ratio, while the motor power is

Fc(t) = u(t)

1
γt(t)ηt

rw
lc

Fp(t) ,

Pm(t) = (1 − u(t))

v(t)Fp(t)
ηt

.

59

(2.61)

(2.62)

For pedal-assist electric bicycles (pedelecs), u(t) is constant and determined by
design. For power-on-demand electric bicycles, the determination of u(t) is the role
of an energy management strategy, similarly to HEVs. However, in this case, u is
usually not a continuous variable but can be chosen only among a discrete set of
values.

2.5.2 Cyclist

The evaluation of the oxygen consumption as a function of the cycling conditions
is a complex subject that lacks a general and widely accepted model. Some simple
equations could be nevertheless found in the specialized physiology literature [11–
15].

The conversion from the metabolic power to the mechanical power is the result
of two pathways to produce ATP (adenosine triphosphate), the energy carrier to
the muscles: aerobic and anaerobic. The former is a process that takes place in
the presence of oxygen and is thus associated with oxygen uptake. In contrast, the
anaerobic pathway depletes stored resources, leading to lactate formation whose
accumulation in the muscles generates feelings of fatigue and exhaustion. While
the aerobic pathway is characterized by unlimited available energy but ﬁnite power
capability, the anaerobic pathway is characterized by larger power but ﬁnite energy,
thus it is available only for short times.

Under quasi-stationary conditions, the anaerobic pathway is not active and the
oxygen uptake is a function of the power exerted and the pedaling cadence. This
dependency can be expressed with a Willans-type model,

Ph(t) =

Pc
eh(ωh(t))

+ Ph,0(ωh(t)) ,

(2.63)

where Ph,0 is the metabolic power with cyclist freewheeling (zero-work) and eh the
net efﬁciency [11]. These parameters are subject-dependent but experimental tests
suggest that on average they both increase with the pedaling cadence. Consequently,
the (gross) cycling efﬁciency

60

2 Fundamentals of Vehicle Modeling

Force
¯Fc,max

Fig. 2.18 Illustration of the
various mechanisms leading
to the maximum force
exerted by the cyclist. Area
between the curves Fc,max
and Fc,max,aer is proportional
to the anaerobic work
capacity AWC

anaerobic

Fc,max,aer

Fc,max

aerobic

ηh (cid:2) Pc
Ph

Time

(2.64)

is a function that increases with power but decreases with cadence. Typical values
of ηh do not exceed 20%.

The maximum power that can be generated under stationary conditions, Ph,max,
is proportional to the maximum oxygen uptake (also known as ˙VO2,max) and often
called anaerobic threshold or critical power (CP). However, as Fig. 2.18 suggests,
this limit power is not instantaneously available from the aerobic pathway, while,
on the other hand, it can be exceeded for a limited amount of time by consuming
the reserves in the anaerobic pathway. This limited energy reservoir is often called
anaerobic work capacity (AWC).

A general result of these processes is that, contrarily to engines or electric
machines,9 the maximal force that can be generated, Fc,max, varies with time as the
effort above the CP progresses, see Fig. 2.18. This phenomenon is generally called
fatigue. If the effort falls below the CP or ceases, the stored energy is replenished by
the aerobic pathway. A simple model that describes such effects, adapted from [16],
is

dFc,max(t)
dt

=

(cid:7)

(cid:9)
−kfat
Fc,max(t) − Fc,max,aer
(cid:9)
¯Fc,max(t) − Fc,max
krec

(cid:10)

,

(cid:10)

,

if Fc ≥ Fc,max,aer
otherwise

,

(2.65)

where kfat and krec are two subject-dependent coefﬁcients, while ¯Fc,max is the
maximum force that an individual can develop from rest, also known as maximum
voluntary contraction (MVC). The model (2.65) clearly captures the experimental
observations that the drop of Fc,max below MVC is quasi-exponential in time, and
that the recovery mechanism tends to bring Fc,max back to the MVC.

9As it was mentioned in Sect. 2.3.2, electric motors can actually deliver extra torque for short
periods of time before thermal limitations are reached, and this is also true for some engines,
particularly turbocharged ones. Although their time constants is much smaller, these processes
could be described similarly to (2.65).

2.5 Human-Powered Vehicles (Bicycles)

61

The coefﬁcients kfat and krec are physically related to the conservation of the avail-
able anaerobic energy AWC. Experimental observation suggests that kfat increases
with the relative force ratio (Fc − Fc,max,aer)/ ¯Fc,max. Correspondingly, the maximum
endurance time (MET), i.e., the time at which Fc,max = Fc after having applied a
constant Fc, which is roughly proportional to the time constant of (2.65) and thus to
1/kfat, decreases with the relative force ratio [17].

Since the drop of Fc,max described by (2.65) is an effect of fatigue accumulation,

a measure of the fatigue level has been naturally proposed in [16] as

ξh(t) =

¯Fc,max − Fc,max(t)
¯Fc,max − Fc,max,aer

.

(2.66)

In analogy to battery SoC, the ratio ξh is often called state of fatigue (SoF).

2.5.3 Cycling Proﬁles

There is limited literature on behavioral models of cyclists. The model proposed
in [18] consists of a parametrization of the cyclist power as a function of speed,
Pc(t) = f (v(t)). This model is based on the assumption that cyclists preferably ride
at constant nominal power, rather than at constant speed. The nominal power equals
the power needed to cruise (zero acceleration) at a certain “comfort” speed on a
ﬂat terrain. Above the comfort speed, cyclists stop pedaling, while above a higher
“feared” speed (that might be reached on steep downhills), they brake. In contrast,
as the speed falls below a minimum speed (typically, at steep uphills), cyclists exert
a power higher than the nominal.

The cycling speed and power proﬁle could in principle be optimized along a
trip, in particular for electric bikes. The optimization objective could be related to
the cyclist’s and the electric consumption. However, this concept is not adequately
documented in the literature and won’t be treated further in this book.
Perception and Control for Connected
and Automated Vehicles

In this book, by connected vehicles we are referring to vehicles that use commu-
nication technologies such as DSRC and cellular for vehicle-to-everything (V2X)
communication. The U.S. Department of Transportation’s National Highway Trafﬁc
Safety Administration (NHTSA) deﬁnes fully automated vehicles as those in which
operation of the vehicle occurs without direct driver input to control the steering,
acceleration, and braking and are designed so that the driver is not expected to con-
stantly monitor the roadway while operating in self-driving mode [1]. In categorizing
partial automation, NHTSA’s federal automated vehicles policy adopts that of Soci-
ety of Automotive Engineers (SAE) deﬁnitions for levels of vehicle automation as
shown in the reproduced Table 3.1. Automation levels range from no automation
with full driver control (Level 0) to full automation with no driver control (Level 5).
Many of the beneﬁts discussed in this book are realizable with partial level 2 or 3
automation as they mostly rely on automated speed and steering control which can
be overseen and overridden by a human driver.

In this chapter, after a review of V2X technologies for connected vehicles in
Sect. 3.1, we provide a brief overview of automated vehicle localization and per-
ception in Sect. 3.2 and planning and control in Sect. 3.3. A schematic overview is
shown in Fig. 3.1.

3.1 V2X Communication

Connected vehicles could ideally beneﬁt from Vehicle-to-everything (V2X) com-
munication channels and protocols to exchange data and information with a wide
variety of entities. Some of the main beneﬁts are increased road safety, harmonized
trafﬁc ﬂow, and energy savings. For instance Vehicle-to-Vehicle (V2V) communica-
tion allows equipped vehicles to exchange their coordinates and intentions to prevent
Planning

Web-Based Services

Navigational
Maps

Real-Time
Trafﬁc

Historical Data

GPS

INS

Sonar

Radar

Lidar

Camera

V2X
HD maps

Perception

Sensor Fusion

Localization

Real-Time
Mapping

Obstacle
Detection

Prediction

Mode Planning

Mission
Planning

Motion
Planning

Control

Motion Control

Powertrain
Control

Fig. 3.1 Sensing, perception, planning, and control in CAVs

collision or to move in coordination. Vehicle-to-Infrastructure (V2I) communication
allows vehicles to communicate with roadside units and infrastructure such as traf-
ﬁc signals enabling better coordination between them. A few other communication
modes to name are Vehicle-to-Pedestrian (V2P), Vehicle-to-Device (V2D), Vehicle-
to-Network (V2N), Vehicle-to-Cloud (V2C) and Vehicle-to-Grid (V2G) communi-
cation. In this book our main results only require V2V or V2I.

Today there exists two main communication technologies for V2X: (i) Wireless

Local Area Network (WLAN) and (ii) Cellular Network.

WLAN technology allows vehicles moving at high speeds to establish ad-hoc
and direct communication channels with neighboring vehicles and roadside trafﬁc
units without the need for additional communication infrastructure. Several coun-
tries have allocated a spectrum for Intelligent Transportation Systems communica-
tion that enables WLAN V2X. For instance in the United States, a 75 MHz band
in the spectrum of 5.850–5.925 GHz has been set by the US Federal Communica-
tion Commission (FCC) since 1999. In Europe 30 MHz has been assigned for the
same purpose. Currently the IEEE 1609 family, IEEE 802.11p, and the Society of
Automotive Engineers (SAE) J2735 [3] form the key parts of the currently proposed
Wireless Access in Vehicular Environments (WAVE) protocols. [4]. The architecture,
communications model, management structure, security mechanisms and physical
access for high speed (up to 27 Mb/s) short range (up to 1000 m) low latency wireless
communications in the vehicular environment is deﬁned by the IEEE 1609 Family
of Standards [5]. Society of Automotive Engineers (SAE) uses the term Dedicated
Short Range Radar Communication (DSRC) for the WAVE technology with J2735
set of standards which deﬁne the message payload at the physical layer. The SAE
J2735 [6] supports interoperability among DSRC applications through the use of
standardized message sets, data frames, and data elements.

Cellular V2X or in short C-V2X technology was initially deﬁned as LTE in the
Third Generation Partnership Project (3GPP) Release 14 [7] and is designed to oper-
ate in several modes: (1) Device-to-device and (2) Device-to-cell-tower. The device-

66

3 Perception and Control for Connected and Automated Vehicles

to-device mode allows direct communication without necessarily relying on cellular
network involvement. On the other hand, device-to-cell-tower relies on existing cell
towers, network resources, and scheduling. Direct device-to-device communication
improves latency and supports operation in areas without cellular network coverage.

3.2 Localization and Perception for Automated Driving

A key to successful automated driving is effective localization, obstacle detection,
and perception. The vehicle must not only determine with high precision its loca-
tion in the world and on the road but it should perceive accurately its surrounding
environment such as neighboring vehicles, pedestrians, animals crossings, lane mark-
ings, trafﬁc signs and signals, street signs, curbs and shoulders, buildings and trees,
etc, and measure their relative distance and speed. These are perhaps the hardest
technical challenges to overcome for highly automated driving. Here we present a
brief overview of sensors and algorithms that are currently used for localization and
perception.

3.2.1 Sensors for Perception and Localization

An overview of sensors for perception and localization is provided in Fig. 3.2. Self-
or proprioceptive-sensors measure the ego vehicle internal states such as its velocity,

Blind Spot
Detection

Rear Collision
Warning

Park Assistance
Surround View

Park Assist

Surround View

Park Assist

Emergency Braking
Pedestrial Detection
Collision Avoidance

Trafﬁc Sign
Recognition

GNSS

Adaptive Cruise Control

Lane Departure
Warning

Surround View

Cross Trafﬁc
Alert

LIDAR

Camera

Sonar

LR Radar

SR Radar

GNSS

Fig. 3.2 Schematic of vehicle sensors for perception and localization. Adapted from [8]

3.2 Localization and Perception for Automated Driving

67

acceleration, wheel speed, yaw, steering angle, engine speed, and engine torque.
Odometers, accelerometers, Inertial Measurement Units (IMU), and information
from Control Area Network (CAN) bus are used for proprioceptive-sensing and
are not limited only to automated vehicles; many modern human driven vehicles rely
on them for state estimation and advanced control functions. For example, IMUs
contain gyroscopes, accelerometers, and sometimes magnetometers along each axis
that provide dead reckoning capability in combination with the vehicle’s wheel speed
sensors. Since an IMU relies on integrating acceleration to determine positions, they
are prone to drift and may require GPS-fusion (or camera-fusion when indoor) for
more accurate localization.

Global Navigation Satellite Systems (GNSS) sensors also known commonly as
Global Positioning System (GPS) are becoming standard on modern vehicles for
navigation and localization. Other regional GNSS systems are Russia’s GLONASS,
Europe’s Galileo, and China’s Beidou. While current GNSS may not provide the
needed sub-meter precision for localization of automated vehicles, ﬁltering algo-
rithms that fuse GNSS and IMU readings could offer more precise localization. Still
centimeter precision levels needed for some automated vehicle functions, such as
lane determination, may beneﬁt from more precise positioning systems. Reduction
in cost of highly accurate GNSS is expected in near future making it available to the
mass market [9]. Today Real-Time Kinematic (RTK) GPS technology is available
and relies on a roadside base station to correct GPS readings to within centimeter
accuracy. Simultaneous Localization And Mapping (SLAM), which we discuss in
more detail later under localization algorithms, are used by many autonomous vehicle
developers to localize the vehicle with respect to the surrounding environment.

Extroceptive sensors such as sonar, radar, LIght Detection And Ranging (LIDAR)
and cameras are used for sensing the surrounding environment and objects as sum-
merized in Table 3.2. Sonar, radar, and Lidar are called active sensors because they
emit energy in the form of sound and electromagnetic waves and measure the return
to map the surrounding environment, e.g. distance to nearby objects. On the other
hand light and infrared cameras are called passive sensors since they do not emit
energy and only measure the light/electromagnetic waves in the environment [10].
Sonar can measure distance to nearby objects but only has a very limited range
(<2m) and has low angular resolution. Radars rely on reﬂection of radio waves that
they emit to measure distance to and velocity of moving objects and have a much
higher range than sonar but are weak in classiﬁcation, pedestrian detection, and in
detecting static objects. Also radars may suffer from interference from other radars
and create false alarms. Lidar works similarly to radar but relies on infrared light
(laser) instead of radio waves. Lidars emit laser at wavelengths beyond the visual
light spectrum at typical scan frequency of 10–15 Hz. They emit millions of pulses
per second giving them high resolution, a large ﬁeld of view, and the capability to
create a 3D point cloud of surrounding environment. This has made them an essential
sensor for most automated vehicle developers. Nevertheless, Lidar cannot directly
measure velocity, may have difﬁculty with detecting highly reﬂective objects and
has degraded performance in fog, rain, or snow. Segmentation, classiﬁcation, and
sometimes time integration algorithms are still needed to convert the 3D raw data

68

3 Perception and Control for Connected and Automated Vehicles

Table 3.2 Comparison of different extroceptive sensor technologies for automated driving. The
results are compiled from [10, 12–14]

Sonar

Radar

Lidar

Perceived Energy Sound waves

Millimeter wave
radio signal

2–5
Tracking

0.15–250
Tracking

Single vision
camera

Visible light

250
Appearance,
motion

600–1000
nanometer wave
laser signal
2–100
Spatial
segmentation,
motion

Range [m]
Vehicle
recognition
versus other
objects
Resolution
Field of view

–
–

+

−−

Distance
measurement
Velocity
measurement
Operation in poor
weather
Poor lighting
performance
Other challenges Poor

++

++

++
++

–

–

–

−−

+
++

++

+

o

++

o
+ (short range
radar)- (long
range radar)
++

++

++

++

Poor
classiﬁcation,
poor pedestrian
detection, poor
static object
detection, prone
to interference
50–200

classiﬁcation low
range low
resolution

high
computational
cost

Poor
classiﬁcation
compared to
vision, difﬁculty
with highly
reﬂective objects

Cost (US $)
++Very good

50
+good

o average

– poor

−−very poor

7,000–70,000

100–200

to classiﬁed objects [11]. While laser emitting detection technology is not new, it
was not till 2005 that Velodyne put 64 rotating lasers in one compact package for
360◦ detection needed in automated driving. Since then Lidar technology has been
adopted by almost all autonomous vehicle teams. Still current Lidars are not designed
to withstand many years of harsh conditions in open road driving. Both radar and
Lidar also are weak in detecting very near objects (<2m) where sonar performs well
[10].

Cameras provide high ﬁeld of vision and high resolution, and capture information
that Lidar cannot such as color and texture which helps object classiﬁcation. However
with monocular camera vision it is more difﬁcult to measure depth; this can be
overcome with stereo vision provided by two cameras. Computationally, camera
vision is more demanding than Lidar. Converting 2D images to 3D understanding of

3.2 Localization and Perception for Automated Driving

69

the environment requires computationally demanding software and machine learning
algorithms. Camera vision is sensitive to lighting conditions and its performance
degrades in bad weather [12].

The algorithmic aspects of perception and localization are brieﬂy discussed next.

3.2.2 Algorithms for Perception and Localization

Given the pros and cons of extroceptive sensors, in particular camera and Lidar, it
is common to use both and rely on ﬁltering and data fusion algorithms to increase
accuracy and robustness. Measurement error covariance when using two sensors
is always smaller than the error covariance achieved by each individual sensor. So
it often makes sense to fuse data from two inexpensive sensors and achieve similar
accuracy of a single high end sensor [11]. V2X communication can provide additional
information from other vehicles and roadside units for higher accuracy perception
and localization.

3.2.2.1 Perception Algorithms

Perception algorithms could be vision-based relying on camera data, or rely on active
sensors which capture objects by a large number of points on their surface, also
called point clouds. Camera and active sensors can be employed together to detect
and perceive the surrounding environment and objects (such as vehicles, pedestrians,
animals, curbs) more precisely. While there are mature machine vision and statistical
learning and classiﬁcation algorithms for parsing information embedded in an image
or point cloud, recent advances in deep learning and artiﬁcial intelligence provide new
supervised learning methods for real-time object detection. Rapidly growing training
datasets, increased computing power, cheaper storage, and widely available open-
source algorithms seem to be bringing about revolutionary advances. For instance an
open source real-time object detection algorithm presented recently in [15] based on
convolutional neural networks has the ability to process 45–150 frames per second,
label objects in it with a bounding box, and assign a conﬁdence score to each as
illustrated in Fig. 3.3.

In automated driving three paradigms have been proposed for perception: (i) medi-
ated perception, (ii) behavior reﬂex perception, and (iii) direct perception [16]. In the
more common mediated perception, a detailed map and distance to relevant objects
around the ego vehicle including other vehicles, pedestrians, trees, and road mark-
ings are extracted ﬁrst using standard machine vision or deep learning algorithms.
Planning and control algorithms will then use this map to plan the motion of the
vehicle considering the constraints imposed by the road and stationary and dynamic
obstacles. Quite differently, behavior reﬂex perception algorithms use artiﬁcial intel-
ligence to construct a direct mapping from the sensory input to a driving action thus
bypassing intermediate layers such as localization, path planning, decision making

70

3 Perception and Control for Connected and Automated Vehicles

Fig. 3.3 An example of application of YOLO real-time object detection [15] to a driving scene.
The numbers next to each label show the conﬁdence in that label. Picture courtesy of Austin Dollar
and Tyler Ard of Clemson University

and control [17]. While they reduce complexity, such end-to-end solutions, lack trans-
parency, are too low-level missing the big picture, and sometimes may be ill-posed
in training. For instance in [18] it is shown that stability can be lost when applying
supervised learning to a training set of locally exponentially stable controllers. Direct
perception methods proposed in [16] aim to strike a balance between the former two
approaches. They abstract an image to a selected and meaningful set of indicators
of the road situation, such as the angle of the car relative to the road, the distance
to the lane markings, and the distance to cars in the current and adjacent lanes. The
outcome is much more compact than what a mediated perception approach would
generate and only contains the most relevant information to the the planning and
control layers which could now be simpliﬁed according to [16].

3.2.2.2 Prediction

While perception by itself is an important and challenging step, predicting the motion
of neighboring vehicles or pedestrians based on perceived current and historical
information may be as important for CAV planning purposes. This is a difﬁcult topic
and still an open problem. In Sect. 1.3.3 we discussed relevant prediction literature
in the context of anticipative car following where probabilistic prediction was a
common theme for predicting the longitudinal motion of a preceding vehicle. Other
examples are assuming a constant speed in [19], a speed-dependent acceleration in
[20], probabilistic trajectory prediction in horizontal plane using a variational mixture
model in [21], a Gaussian mixture model in [22], or classiﬁcation and particle ﬁltering

3.2 Localization and Perception for Automated Driving

71

in [23]. Most of these prediction methods target a 1–3 second prediction window
which may be limited. With V2X connectivity the opportunity exists for receiving
future intentions of neighboring vehicles and nearby trafﬁc controllers which should
enable predicting with more accuracy over longer horizons. We will come back to
this topic in Sect. 8.2.3 in the context of energy efﬁcient driving.

3.2.2.3 Localization and Mapping

CAVs require rather precise localization not only for navigational purposes but also
to situate themselves within the road and the lane, with respect to other (connected)
vehicles, and for use of mapped information such as location of trafﬁc signals, upcom-
ing hills, curves, dynamic congestion tail, etc. While localization and mapping is a
well established topic in indoor robot navigation and mature algorithms exist [24],
outdoor, dynamically changing, and high speed road environments present extra
challenges for CAV localization.

Fusing GPS, IMU, and wheel odometer readings could provide meter-level pre-
cision in determining the position of the vehicle on the road. The raw coordinates
determined by GPS may not match a logical model of the world where vehicles are
expected to be on a road. Established map matching methods [25] are commonly used
to correct the raw GPS recordings to a logical position on a road. The (corrected) GPS
data can be fused with IMU and odometry readings via Extended Kalman Filtering
(EKF) methods that rely on a model of vehicle kinematics or dynamics. Velocity
of the vehicle could be determined as a by-product. Accurately determining vehicle
heading is more difﬁcult due to reliance on IMU readings which are subject to drift.
Algorithms relying on GPS inertial navigation could be challenged in urban
canyons with tall buildings due to loss of GPS signals [26]. Also autonomous vehicle
control may require centimeter level position accuracy not provided by conventional
GPS/IMU fusion. While RTK GPS provides high level of position accuracy, its
reliance on additional roadside stations makes it impractical on today’s roads. To
overcome this challenge many automated driving vehicles such as Waymo’s and
Uber’s rely on a priori mapped roads. Instrumented mapping vehicles drive roads
of interest and collect detailed 3D image or Lidar data linked to highly accurate
GPS information, process and store them in large databases. Subsequent CAVs can
localize by comparing their sensor readings against these a priori maps and trian-
gulating their position with the aid of ﬁxed objects. Moreover they can more easily
distinguish dynamic objects absent from a priori maps. An early successful imple-
mentation can be found in [27]. Such a method works as long as the mapped roads
remain unchanged. Construction zones, changes in lane markings or road geometry
could render parts of these maps obsolete.

This problem can be overcome by High Deﬁnition (HD) mapping where a priori
maps are dynamically updated in the cloud based on latest sensory information
communicated from CAVs traversing these roads [28]. For instance a consortium
formed by BMW, HERE, and Mobileye aims to crowdsource HD maps relying
on accurate prior maps from HERE, BMW connected ﬂeet, and Mobileye REM

72

3 Perception and Control for Connected and Automated Vehicles

technology that transmits changes detected with respect to prior map to cloud servers
to update the maps. The dynamically updated maps become then accessible to the
connected ﬂeet in real-time via HERE servers.

In this context Simultaneous Localization And Mapping (SLAM) arises when the
vehicle has to simultaneously localize and map the environment and obviously are
more difﬁcult than only localization or only mapping. SLAM is well established in
indoor robotic navigation [24] often in well-structured and well-lit environments.
SLAM is more challenging for automated vehicles due to variable lighting, less
structured road environments and higher speeds that require faster computations
[10].

3.2.3 Web Services

Connected vehicles can query web-based Application Programming Interfaces (API)
to retrieve map, trafﬁc congestion, and weather information in real-time. For instance
the cloud based Google Map Platform [29] provides several APIs for retrieving
maps, elevation, trafﬁc, directions, travel times and distances, and places in real-
time. Similar services are provided by HERE APIs [30]. Inrix offers a trafﬁc and a
parking API [31]. There are several weather information APIs such as Yahoo Weather
API [32]. Today computational clouds such as Amazon Web Services (AWS) offer
their computing and machine learning tools to connected [33] and automated [34]
vehicle developers. The idea is to ofﬂoad the onboard computations and data analytics
partially to the cloud.

3.3 Planning and Control

Once an automated vehicle localizes itself with respect to a 3D map of the environ-
ment and identiﬁes constraints imposed by the surrounding stationary and moving
objects, trafﬁc rules, trafﬁc control infrastructure, and road geometry, it can plan its
long- and short-term moves. This plan is then executed by a hierarchy of motion
planners and controllers in the longitudinal and lateral directions. Both planning and
control layers can beneﬁt from the extended preview of the upcoming road and trafﬁc
scene provided by V2X connectivity to make longer term judicious decisions. Here
we provide a brief overview of the planning and control layers as shown schematically
in Fig. 3.4.

3.3 Planning and Control

Fig. 3.4 Logical scheme of
planning and control layers
in CAVs

73

Mission Planning

Route

Mode Planning

Stops, Modes, Horizon, . . .

Motion Planning

Speed, Lane

Motion Control

Pedals, Steering

Powertrain Control

Actuators

3.3.1 Mission Planning

At the highest planning layer, the route is decided, for instance to minimize trip
distance, time, delay, or energy. The road network is often modeled as a directed
graph with its edge weights reﬂecting the relevant cost of travel on that link. The
minimum cost path can then be found via optimization which can be executed very
efﬁciently today as explained in [35]. For electric vehicles, visits to charging stations
may also be planned at this stage. The mission planning layer can then set waypoints
along the chosen route as targets for the lower level motion planning layer. More
details of algorithms employed in the mission planning layer in the context of eco-
routing are described in Chap. 5.

3.3.2 Mode Planning

Another distinct planning layer may exist that chooses between a ﬁnite set of driving
modes in consideration of mission waypoints, road rules, and trafﬁc conditions.
For instance the vehicle may choose lane keeping, a lane change, (adaptive) cruise
control, stopping at a stop sign, or emergency braking. This will be a ﬁnite set of
modes that can be handled in a ﬁnite state machine framework or via decision trees.
We refer to this layer as Mode Planning, but in the literature other terms such as
driving strategy [36], maneuver planning [37] and behavioral decision making [35]
are also used.

74

3 Perception and Control for Connected and Automated Vehicles

We will show in Chaps. 6 and 7 that optimal eco-driving in a trip could consist of
several modes for example maximum acceleration, constant speed cruising, coasting,
and maximal braking between two stopping intervals.

3.3.3 Motion Planning

After a driving mode is selected, the motion planning layer generates legal, collision-
free, smooth, comfortable, and efﬁcient paths or trajectories for longitudinal and
lateral motion of the vehicle. The literature distinguishes a trajectory from a path
in that a path is in the spatial conﬁguration space of the vehicle while a trajectory
has a temporal component as well [38]. For instance in the longitudinal direction
s, usually the velocity trajectory ˙s(t) is planned with safety, ride comfort, travel
time, and energy efﬁciency considerations while respecting constraints imposed by
speed limits, trafﬁc lights and stop signs, surrounding vehicles, road curvature, and
longitudinal vehicle dynamics.

For example in Cruise Control (CC) mode the vehicle tracks a constant reference
speed while Adaptive Cruise Control (ACC) adjusts the velocity to maintain a safe
time or distance headway to the preceding vehicle. More details on that are discussed
in Sect. 4.2.2. In Predictive Cruise Control (PCC) mode, the velocity is adjusted
relying on V2I communication and in anticipation of future events such as changes
in road slope or trafﬁc signal phase and timing. Cooperative Adaptive Cruise Control
(CACC) mode relies on V2V communication to allow vehicles cruise in coordination
with neighboring vehicles. In emergency braking mode, the vehicle could apply
maximal braking to avoid a collision.

Lane change, merge, and collision avoidance need to determine a feasible path in
the 2D x-y plane which is by itself complex due to many choices in a 2 dimensional
space and the non-convex drivable regions. Furthermore due to velocity and time
dependent constraints arising from vehicle dynamics and movement of surrounding
vehicles, the motion planning algorithms should also determine safe and comfortable
acceleration and velocity proﬁles on these paths; thus a trajectory planning problem.
In Sect. 3.3.6 we discuss optimal planning algorithms applicable to motion plan-

ning.

3.3.4 Motion Control

The trajectory or path planned at the motion planning layer is issued as a reference to
the vehicle longitudinal and lateral controllers for feedforward and feedback tracking.
In the longitudinal direction, throttle and braking control adjusts acceleration and
velocity. Lateral control relies mainly on steering and sometimes on differential
braking to control lateral acceleration, velocity, and vehicle yaw rate.

3.3 Planning and Control

75

3.3.4.1 Longitudinal Control

When the reference speed is determined at the planning layer, well-established clas-
sical or modern control techniques can be used at the motion control layer, to follow
the planned reference by accelerator or brake actuation. For instance standard ﬁxed
gain or gain-scheduled PID type controllers can actuate accelerator and brakes for
velocity reference tracking [39]. An integrator anti-windup mechanism [40] must be
added to properly handle actuator saturation. Logical checks should be in place to
ensure safe operations under all perceivable circumstances. Switching between accel-
erating and braking modes needs to be handled with care for smooth performance
[41].

For instance [42] proposed the following PID type controller with an added non-

linear term shown below:
(cid:2)
ev − 1
Tt

u(s) = −k pev − ki

1
s

[u − sat(u)]

− kd

ev − kq ev|ev| ,

(3.1)

(cid:3)

τd s
τd s + 1

1
N

where the equation should be read in the Laplace domain with s denoting the Laplace
variable. Here u commands accelerator or braking, and ev is the velocity tracking
error. Tunable proportional, integral, and derivative gains are denoted by k p, ki , kd
[u −
respectively, while kq is a tunable gain for the last nonlinear term. The term 1
Tt
sat(u)] prevents integrator windup where the sat(u) function saturates at actuator
limits and Tt is a time constant that determines how fast the integrator is reset.
Because a pure derivative term would be non-causal and prone to noise, a pseudo-
derivative term is employed by augmenting a ﬁrst order lag, wherein parameter N
determines the amount of ﬁltering on the derivative term. The last nonlinear term
kq ev|ev| is termed the quadratic component in [42] and is intended to achieve fast
tracking while limiting the overshoot. Asymptotic convergence of tracking error to
zero is established in [42] via a Lyapunov analysis.

Feedforward control along with feedback control can enhance the responsiveness
of the longitudinal control loop. For instance when the planning layer commands an
acceleration proﬁle, a feedforward pedal/braking input can be issued [43] based on
pedal-to-acceleration and braking-to-deceleration response mappings along with a
feedback controller.

Input saturation, vehicle state constraints, and toggling between accelerator and
braking actuators can be more systematically handled in a constrained control frame-
work. For heavy vehicles sensitivity to often unknown mass of the truck can also be
handled by adaptive control techniques as shown in [44].

3.3.4.2 Lateral Control

Lateral control engages steering and sometimes differential braking to control the
vehicle in scenarios such as lane changing, merging, turning, and parallel parking.
The assumption is that an appropriate reference path or trajectory is already deter-

76

(a)

3 Perception and Control for Connected and Automated Vehicles

(b)

δ

R

P

l d

θ

δ

L

2θ

Fig. 3.5 A simpliﬁed bicycle model of a 4 wheeled vehicle: geometric bicycle model (a) and pure
pursuit geometry (b). Adapted from [46]

mined in the motion planning layer. A widely used approach for path tracking with
mobile robots and autonomous vehicles is pure pursuit control that was ﬁrst intro-
duced in [45] and is relatively simple to implement. The pure pursuit algorithm has a
simple formula for choice of the steering angle that steers the rear axle on a circular
arc to the center of the path. If a bicycle model, as shown in Fig. 3.5, is used to relate
the steering angle of the front wheels δ(t) to vehicle heading θ(t), the pure pursuit
algorithm formula is

(cid:2)

δ(t) = tan−1

(cid:3)

,

2L sin(θ(t))
ld

(3.2)

where L is the wheelbase, ld is the the distance from the rear wheel to a look-ahead
point on the center of the path, and θ is angle between the heading vector and the
look-ahead vector pointing to the center of the path ld units ahead. In practice the
look-ahead distance is chosen as a function of vehicle speed [46].

Another method [47], adjusts the steering as a function of vehicle heading mis-

alignment with the path and a nonlinear function of cross track error,

δ(t) = θ(t) − θ p(t) + tan−1

(3.3)

(cid:2)

(cid:3)

key
vx (t)

,

where θ is heading angle of the vehicle, θ p is path heading at the point nearest to the
front wheel, ey is the cross-track error measured from the center of the front wheels
to the nearest point on the track, vx is vehicle’s forward velocity, and k is a gain
parameter. Using an idealized bicycle model, the cross-tracking error is shown to be
monotonically convergent to zero.

The above lateral control methods are easy to implement, but rely on feedback
from a single point of the lane at each time. For smoother performance, the lane
tracking problem can be formulated as a ﬁnite horizon optimal control problem
with full horizon preview of lane reference trajectory. The optimal steering control
action will not only be a function of instantaneous vehicle state but also will include
a feedforward term that integrates the entire lane preview. An analytical solution

3.3 Planning and Control

77

to this preview optimal control problem exists when the vehicle model is linear,
the tracking cost is quadratic, and input and states are unconstrained as shown in
[48]. Input and state constraints must be considered for aggressive or emergency
maneuvers or when driving on slippery roads with the tires at their traction limit.
In such scenarios the trajectory tracking problem can be formulated in a model
predictive control framework with higher ﬁdelity vehicle models and with explicit
consideration of traction constraints. Successive model linearizion results in a Linear
Time-Varying (LTV) MPC problem as shown in [49] along with experimental results
that demonstrates the feasibility of real-time implementation.

Planning and control algorithms that can handle more sophisticated conditions
than the relatively simple longitudinal and lateral control methods described above,
are described later in Sect. 3.3.6.

3.3.5 Powertrain Control

The powertrain control modules of a CAV can be programmed to take advantage
of extra information that is available to them due to connectivity and increased cer-
tainty in that information due to driving automation as highlighted in Sect. 1.3.1.
Depending on the powertrain type as described in Chap. 2, we have several actuators
to coordinate such as throttle, braking, ignition, injection, cam phasing, wastegate,
valve lift, cylinder deactivation, and transmission for SI ICEVs, battery utilization
in HEVs, and vehicle-level actuators for accessory loads. Anticipated future veloc-
ity and road grade proﬁle provide an estimate of the future power demands. This
anticipated power demand proﬁle can be used to better schedule choice of gears,
battery utilization in hybrid vehicles, thermal load management, and handling of the
powertrain auxiliary loads such as air-conditioning load.

The powertrain controllers can beneﬁt from longer term plans of the mission
planning and mode planning layers as well as more imminent intentions of motion
planning and motion control layers. For example scheduling a hybrid vehicle’s battery
utilization can beneﬁt from the long term mission plan due to the slow dynamics
associated with the battery state of charge; so is thermal management due to relatively
slow thermal dynamics as discussed respectively in Sects. 2.4.2 and 4.4.4. On the
other hand, shorter term decisions at motion planning and control layers could be
beneﬁcial to functions with faster dynamics such as anticipative gear shift, fuel cut-
off, engine start/stop, and cylinder deactivation.

3.3.6 Algorithms for Planning and Control

Two main schools of thoughts dominate the planning and control literature and
practice. One approach guided by the robotics and computer science community
employs (model-free) learning methods that aim to emulate human drivers, leverag-

78

3 Perception and Control for Connected and Automated Vehicles

ing abundant training data and advances in deep learning and reinforcement learning
algorithms. The second approach spearheaded by the automatic control community
casts planning in a (model-based) optimal control framework aiming to minimize
a mathematical cost of the motion (be it time, discomfort, energy, risk, etc.) while
respecting all motion constraints. For instance, in a reinforcement learning approach
to lane changing, the motion planning layer gradually learns a lane change policy
that maximizes a cumulative reward function. The policy deﬁnes what action to take
given the state of the road and neighboring vehicles and associates a reward to a suc-
cessful lane change and gets penalized for a collision. The algorithm goes through a
systematic trial and error process in a realistic simulation or real-world environment
until it is “sufﬁciently” trained. It can then employ its learned policy in real-world
driving.

An alternative to learning from training scenarios is optimal control that relies on
models of the vehicle and its surrounding environment, a carefully designed objective
function, and well characterized motion constraints. The plan can then be determined
by solving a dynamic constrained optimization problem. For example in an optimal
control approach to lane selection, the objective could be to balance a trade off
between deviation from a desired velocity and a deviation from a desired lane. The
predicted path of the surrounding vehicles can be imposed as motion constraints
and a bicycle model of the vehicle can approximate the ego vehicle motion under
candidate input sequences [50].

Closed-form analytic solutions for optimal control and planning problems rarely
exist. Exact numerical solutions are often NP hard and not solvable in polynomial
time. But one can often ﬁnd approximations that simplify the problem. For example
discretization, linearizing the models and constraints, and using a quadratic cost are
common and reduce an optimal control problem to a quadratic program for which
computationally efﬁcient solution methods exist and enable its real-time implemen-
tation. The planning problem can be solved over a receding temporal or spatial
horizon using feedback from the current state of the vehicle to update its plan at each
optimization stage in what is referred to as Model Predictive Control (MPC) [51].
More details of numerically solving an planning problem in an MPC framework are
described later in Sect. 8.2.5.

Numerical methods for optimal planning problems can be categorized to varia-
tional, graph search, and incremental search sample methods [38]. Under this cat-
egorization, Pontryagin Minimum Principle (PMP) is a variational approach that
reduces the optimal control problem to a two point boundary value problem using
variational calculus, the more details of which is described in Sect. 6.2.2.1. PMP is
considered an indirect method because it is based on analytical construction of the
necessary and sufﬁcient conditions for optimality, and then discretizing these con-
ditions and solving them numerically. Direct methods on the other hand discretize
state and control trajectories and convert the optimal control problem to a nonlin-
ear program [52], which is then solved using well-known optimization techniques.
Pseudospectral optimal control methods [53] are among direct variational methods.
In graph search methods, the conﬁguration space is discretized and represented by
a graph consisting of vertices and edges. The graph is then explored to ﬁnd the mini-

3.3 Planning and Control

79

Optimal Motion Planning Techniques

Graph search

Variational

Heuristic:
Ant colony,
PSO

Global search:
DP,
Dijkstra,
A∗

Incremental search:
RRT

Direct

Indirect:
Pontryagin

Collocation

Single shooting

Multiple shooting

Local Collocation

Global Collocation:
Pseudospectral

Fig. 3.6 Numerical methods for optimal motion planning

mum cost motion. Dijsktra [54], A∗ [55] and its variants, and Dynamic Programming
(DP) [56] are among graph search methods. We will describe Dijkstra’s algorithm
in more detail in Sect. 5.1.2.1 in the context of eco-routing (mission planning) and
DP in Sect. 6.2.2.2 in the context of eco-driving (motion planning).

A popular incremental search method is the Rapidly-exploring Random Tree
(RRT) algorithm [57] designed to efﬁciently search nonconvex, high-dimensional
spaces by randomly growing a space-ﬁlling tree in the reachable set of the vehicle.
RRT algorithm is suited to problems with obstacles and differential constraints and
is therefore widely used in robotic motion planning.

Heuristic methods such as ant colony optimization [58] and particle swarm opti-
mization [59] have also been employed for path planning of autonomous agents and
robots. A schematic of these categorizations is shown in Fig. 3.6.

*
* *

In the rest of this book, the main focus in on higher level decisions at Mission
Planning, Mode Planning, and Motion Planning layers. Readers interested in Motion
Control and Powertrain Control may refer to many articles and books that exist on
vehicle control such as [60].

80

3 Perception and Control for Connected and Automated Vehicles
Route and Trafﬁc Description

In order to predict and minimize the energy consumption of road vehicles, modeling
the vehicle and its powertrain is not sufﬁcient. Several quantities introduced in the
previous chapter (e.g., time horizon, grade, curvature, constraints to speed, etc.) are
in fact functions of the road followed, its infrastructure, and the vehicle’s trafﬁc
environment. This chapter aims at providing some information about state-of-the-art
road network modeling (Sect. 4.1), microscopic (Sect. 4.2), and macroscopic (4.3)
modeling of trafﬁc. The chapter ends with the illustration on how to combine such
information with the models of Chap. 2 to predict the energy consumption on road
networks (Sect. 4.4).

4.1 Road Network Modeling

Geographic Information Systems (GIS) are systems designed to collect, store, ana-
lyze, and present geographical data. We focus here on those GIS where the particular
type of information treated is about transportation networks, sometimes called GIS-
T.

The heart of any GIS is its data model, i.e., the abstract representation of geograph-
ical features in terms of data and their organization in a database. GIS technology
utilizes two basic types of data. These are: (i) spatial data that describe the location of
geographic features, and (ii) attribute data that describe their characteristics. Attribute
data are usually maintained using a Database Management System (DBMS). Spatial
data is usually encoded and maintained in a proprietary ﬁle format.

Two basic types of spatial data models have evolved for storing geographic data
digitally. These are referred to as: vector data models and raster/image data models,
see Fig. 4.1. Usually a map consists of several layers of both vector and raster data.
urban area

river

4 Route and Trafﬁc Description

raster data

Cell ID

x

2.25

3.25

y

2.25

1.75

1

2

1

2

2

a

1

Node ID

vector data

1

5.7
Arc ID Node I Node II

0.4

x

1

y

2

a

Fig. 4.1 Illustration of raster and vector data, with an example of their data models. Adapted
from Wikimedia Commons (Raster_vector_tikz.png by user Wegmann) under Creative Commons
license

Raster data format is based on a grid-cell structure where the geographic area is
divided into cells identiﬁed by their spatial coordinates. Any geographic feature
is thus identiﬁed by some cell identiﬁers. Both regularly spaced grids and other
tessellated data structures do exist in GIS systems. Probably the most important—
for energy-related applications—information that can be encoded as raster data is the
elevation, although vector-based representations exist, too. Digital Elevation Models
(DEM) are often classiﬁed as terrain (DTM) and surface (DSM) models, where
the former represent the bare ground surface without any objects like plants and
buildings.

In contrast, vector data format is based on discrete elements, namely, vertices or
shape points deﬁned by their spatial coordinates. Several vector data models exist,
however the most popular method of retaining spatial relationships among features
is to explicitly record adjacency information in what is known as the topological data
model. The most common topological data structure is the arc/node data model. This
model contains two basic entities, the arc and the node. The arc is a string of points,
linked by straight line segments, that start and end at a node. The node can be an
intersection point where two or more arcs meet, while isolated nodes, not connected
to arcs, represent point features. An area feature is comprised of a closed chain of
arcs (polygons). Most GIS software record the topological relationship between these
elements in tables. For instance, a node table stores information about each node and
the arcs that are connected to it. An arc table contains the nodes of each arc, and the
polygons that the arc is an element of. A polygon table lists the arcs that compose
each polygon.

4.1 Road Network Modeling

85

In most cases, a separate data model is used to store and maintain attribute data.
A variety of different data models exist for this purpose. The tabular model is the
manner in which most of early GIS software packages stored their attribute data.
The relational models are those most commonly implemented in DBMS. The object
oriented approach is newer but rapidly gaining in popularity for some applications.
The relational data model organizes data in tables. Each table is identiﬁed by a
unique name, and is organized by rows and columns. Each column within a table also
has a unique name. Columns (ﬁelds) store the values for a speciﬁc attribute. Rows
represent one record in the table. In vector-based GIS, each row is usually linked to
a separate spatial feature through its identiﬁer and each column contains a speciﬁc
value for that geographic feature.

As of today, many GIS deliver geographic data (maps) on the world wide web.
Among the most popular web mapping services are Google maps [1], Bing maps
[2], HERE maps [3], MapQuest [4], OpenStreetMap [5], etc.

4.1.1 Road Network Topology

Geometric networks are commonly used in GIS to digitally represent real transporta-
tion networks, for example in the so-called arc-node data model introduced above.
A network is a type of graph, a mathematical structure that represents relationships
among entities as a set of nodes interconnected with a set of links (also called arcs
or edges). In transportation networks, nodes are point locations, while links are the
road segments that connect nodes. Since transportation systems typically have impor-
tant directional ﬂow properties (e.g., one-way streets), directed networks are usually
employed, where all the links have directions associated with them.

The relationship between the nodes and the links is referred to as the network
topology. Of particular relevance are the representations of location, direction, and
connectivity. The network topology’s connectivity is encoded in rectangular tables,
see Fig. 4.2, where the entries are the unique identiﬁers of links and the data accessed
(ﬁelds) are pointers to connected nodes. These nodes are somehow ordered (e.g.,
called reference and non-reference nodes according to some geographical prefer-
ence). In addition to connectivity, these tables can store attributes of links and nodes,
see Sect. 4.1.2.

Including detailed information on the ability to connect from one link to another,
e.g., restrictions to turn right at an intersection, can be done in several ways. A ﬁrst
option is to have additional link-wise table ﬁelds for the links accessible from the
connected nodes (as shown in the example of Fig. 4.2). Another possibility consists
of adding a turn table with node entries and ﬁelds representing the links concurring in
that node. A special attention must be paid in representing connectivity of non-planar
networks, where not all the intersections of two links correspond geographically to
a node due to the presence of overpasses and underpasses.

Data on transportation-related events and facilities (often termed feature data)
are typically located by means of a linear rather than coordinate-based system. In

86

4 Route and Trafﬁc Description

Fig. 4.2 Simple road
network, with directions on
links numbered from 1 to 16
and nodes number from 1 to
8 in italic (a), and table
encoding its topology (b)

(a)

5

4

15

14

11

10

8

5

1

8

7

6

3

2

1

13

4

7

(b)
Link ID Node I Node II

Links
through Node I

Links
through Node II

1
4
5
7
8
10
11
13
14
15

1
2
2
3
3
5
6
4
7
7

2
5
3
4
6
6
7
7
5
8

–
–
1,4
–
5,7
–
8
–
–
11,14

4,5
10
7,8
13
8,11
8
14,15
11,14,15,
10
–

order to use linear-referenced attributes in conjunction with a spatially referenced
transportation network, there must be some means of linking the two referencing
systems together. There exist different linear referencing methods, e.g., distance
from a reference point (datum), control section in the link, or distance from one of
the link nodes.

4.1.2 Road Network Attributes

Besides connectivity-related attributes, the most signiﬁcant attributes that can be
attached to network elements are related to basic geometry, road category, and speed
limits. More advanced functions and services consume detailed geometry attributes
and trafﬁc-related attributes. Based on this classiﬁcation, a non-exhaustive list of link
attributes that is most relevant for energy-efﬁcient driving is shown below.

4.1 Road Network Modeling

87

1. Geometry
• Length.
• Coordinates (latitude and longitude) of connected nodes.
• Direction (positive, negative, both). To avoid unnecessary, and often unrealistic
duplication of links, especially at the street level, a directional attribute can be
included in the attribute table.

• Number of lanes nl.
• Lane width w.

2. Categorical

• Route type, depending on country or region (local, national, motorway, etc.).
• Speed category depending on posted or legal speed limit.
• Grade category (up, down, level).
• Nature of the link, particularly for what concerns the type of vehicles allowed
and the type of access (controlled access roads, low mobility roads, ramp,
presence of a legal or physical divider, paved, private/public, urban, express,
four-wheel-drive only, parking, etc.).

3. Speed limits

• Speed limit vlim, the maximum allowed speed established by law (also known
as posted speed limit, PSL). Usually posted by increments of 10 km/h (5 mph
in US) and indicated on a trafﬁc sign. Minimum speed limits sometimes are
posted where slow speeds can impede trafﬁc ﬂow or be dangerous. In some
countries, speed limits may be variable, e.g., apply to certain classes of vehicles
or depend on special conditions (daytime, weather, special zones). Advisory
speed limits may provide a safe suggested speed below the legal speed in an
area.

4. Detailed geometry

• Horizontal radius of curvature R ([m]) at coordinate points along the link.
This quantity is used to estimate the safe speed limit while turning, from the
equation
(cid:2)

vtur n =

μg R ,

where μ is the grip coefﬁcient and g the gravity acceleration.1

• Road elevation or slope α ([deg] or [%]) at coordinate points along the link.
• Horizontal heading θ at coordinate points along the link.

5. Trafﬁc

• Free-ﬂow speed vF F , deﬁned as the theoretical speed of a vehicle when trafﬁc
density and ﬂow rate on the link both are equal to zero. In practice, operational

1This equation is valid for zero bank angle. A more general equation can be easily obtained from a
free-body diagram of the turning vehicle. Also lift/downforce that are relevant, e.g., for racing cars
are neglected.

88

4 Route and Trafﬁc Description

deﬁnitions are used to measure free-ﬂow speeds, such as speeds of vehicles
having time headways greater than 4 s from preceding vehicles.

• Average trafﬁc ﬂow speed V , depending on the season, day of the week, hour
(for example, it can be speciﬁed with a value each day and every 15 min). It
is the result of statistics over a sufﬁciently large number of vehicles crossing
that link. Usually the mean speed or the 85th percentile speed are used to
represent such statistics. The 85th percentile speed of trafﬁc on a road is often
used in the trafﬁc engineering literature as a guideline in setting speed limits
and assessing whether such a limit is too high or low.

Some of these attributes, in particular the detailed geometry parameters α, R, the
speed limit vlim, and the average trafﬁc speed V will play a key role in the mod-
els described in the next sections. Sometimes, however, detailed geometry is not
available or not sufﬁciently accurate. In Sect. 8.2.1 we will discuss how to recon-
struct instantaneous speed, curvature, and slope from sequences of coordinate points
measurements.

4.1.3 Intersections

Intersections are classiﬁed by trafﬁc control type and topology. Uncontrolled inter-
sections do not generally present signs, although sometimes they present a warning
sign. Priority (right-of-way) rules may vary by country and by the number of road seg-
ments that are involved. Yield-controlled intersections may or may not have speciﬁc
signs. Stop-controlled intersections have one or more “STOP” signs. Two-way stops
are common, while some countries also employ four-way stops. Signal-controlled
intersections depend on trafﬁc signals, usually electric, which indicate which move-
ment is allowed to proceed at any particular time. Circular intersections, particularly
roundabouts, have their own design and rules.

While the attributes of the other types of intersection is usually ﬁxed and can be
retrieved from GIS as described above, information on how trafﬁc lights are operated,
though essential to predict and optimize energy consumption, is harder to obtain and
often must be assumed or simulated. SPaT (Signal Phasing and Timing) describes the
way in which a trafﬁc signal accommodates various users at an intersection in a safe
and efﬁcient manner. A movement reﬂects the user perspective and is deﬁned by the
user type and the action that is taken (turning movement for a vehicle or pedestrian
crossing). Two different types of movements include those that have the right of way
and those that must yield consistently with the rules of the road. These movements
are regulated by the signal controller through their allocation to one or more signal
phases. Signal phase is the right-of-way, yellow change, and red clearance intervals in
a cycle that are assigned to an independent trafﬁc movement or combination of trafﬁc
movements. An interval is a duration of time during which the signal indications do
not change. Each phase at an intersection has a set of timings, possibly containing
vehicle and pedestrian timing. A phase may control both a through movement and

4.1 Road Network Modeling

Fig. 4.3 An example
four-leg intersection (a),
with movements 1–8 and
concurrent pedestrian
movements; left-turn
movements are assigned odd
number phases, while
through movements are
assigned to even number
phases and right-turn
movements share phase with
through movements. In this
example, the southbound
left-turn movement is
protected and is associated
with phase 5; the westbound
right-turn movement is
compatible with the
westbound through
movement and thus shares
phase 4; pedestrians crossing
the northern leg of the
intersection are assigned the
concurrent westbound
vehicular phase (phase 4),
which conﬂicts with the
eastbound left turn (phase 3).
Corresponding
ring-and-barrier diagram (b),
with the two barriers as
thicker vertical lines. The
sequence of phases is shown
as they occur in time,
proceeding from left to right,
with left-turn movements
leading the opposing through
movements [6]

89

4
7

(a)

52

P2

P6

P4

P8

1 6

Ring 1

3

7

Ring 2

3

8

(b)

(c)

Signal

1

5

2+P2

4+P4

6+P6

8+P8

tr

tg

Time

a right turn movement on an approach. In an actuated controller unit, the cycle is a
complete sequence of all signal indications [6].

In a typical assignment for four-leg intersections, see Fig. 4.3a, left-turn move-
ments are assigned to even number phases. The right-turn movements are not typ-
ically assigned to separate phases. Typically, a pedestrian movement is associated
with the concurrent vehicular phase running parallel and adjacent to it.

Modern U.S. practice for signal control organizes phases by grouping them in a
continuous loop (or ring) and separating the crossing or conﬂicting trafﬁc streams
with time in between when they are allowed to operate, either by making the move-
ments sequential or adding a barrier between the movements. An example ring-and-
barrier diagram is shown in Fig. 4.3b.

90

4 Route and Trafﬁc Description

For a given movement, the resulting timing is a periodic alternation of green,
yellow, and red signals as shown in Fig. 4.3c. We deﬁne a duty-cycle parameter rx
as the ratio of the red time tr (including yellow) to the period tg + tr .

4.1.4 Recharge Stations

Another type of localized feature that is relevant for energy-efﬁcient driving strategies
is battery recharge stations. In a road network, different charging stations generally
have different technologies.

Slow charging is mainly made at domestic socket outlets with AC output. That
requires an internal AC/DC converter (on-board charger) in the vehicle. With a typical
domestic rate of 3–7 kW, recharging of an EV may take several hours.

Fast charging is mostly done using DC charging stations. The two main standards
are CHAdeMO and COMBO 2, offering charging powers of 20–50 kW. Also an
AC technology (Type 2, available in Europe) exists, with charging at 22 kW AC.
Furthermore, there exists an ad-hoc standard used only by Tesla and charging at
120 kW. As of 2018, announced plans are to bring the charging power to 100 kW for
CHAdeMO and COMBO, and the latter even to 350 kW which would allow treating
buses or heavy-duty vehicles. Due to the lack of a single international standard,
multi-standard stations are nowadays rather popular, typically offering one or both
DC options and the AC option.

Battery swap, consisting of replacing the battery at stations instead of recharging
them, was once considered as a promising technology, but it seems disfavored as
of 2018 . In contrast, inductive charging (or, more generally, wireless) concepts are
currently gaining popularity. These systems use an electromagnetic ﬁeld to transfer
energy between a primary coil at the recharge station and a secondary coil on the
vehicle. In dynamic wireless charging systems, vehicles draw power from coils buried
underneath the surface of the road. Although promising in terms of charging time
and comfort, these systems are costly and technically not mature yet [7].

Regardless of the technology used, charging stations can be characterized by
their charging function, that is, the function (cid:3)τc((cid:3)Ec, εb,0) relating the quantity
of electricity charged (cid:3)Ec and the energy stored in the battery when the charging
process begins, εb,0 (cid:2) qb,0Vb0, to the time (cid:3)τc that is necessary. In addition to this
time, the waiting time at the station should also be taken into consideration, e.g.,
when optimizing the recharge schedules, see Chap. 5.

In general, the charging functions are nonlinear because of the terminal voltage
and current change during the charging process. As schematically shown in Fig. 4.4,
this process is typically divided into two phases, a constant current (CC) phase and
a constant voltage (CV) phase. The CC phase continues until the battery’s terminal
voltage reaches a speciﬁc value (cut-off voltage), which corresponds to, e.g., a SoC of
80%. In the second phase, the current decreases exponentially to avoid damaging the
battery, and the battery SoC increases less than linearly with time. Note that charging
schemes other than the CC-CV strategy exist, for example constant power-constant

4.1 Road Network Modeling

91

Fig. 4.4 Typical charging
proﬁles of an automotive
battery

SoC εb

80%

εb,0

Voltage

ΔEc

Current

Time

voltage, or optimal charging proﬁles that explicitly minimize, e.g., the battery aging
or the charging losses [8].

In most cases, the energy-time relation can be approximated by a piece-wise linear
function εb = g(t) [9]. Consequently, the charging function is obtained by inverting
this relation,

(cid:3)τc = g−1(εb,0 + (cid:3)Ec) − g−1(εb,0) .

(4.1)

Of course, each charging technology can be characterized by a speciﬁc piece-

wise-linear charging function.

4.2 Microscopic Modeling of Trafﬁc

Microscopic models describe trafﬁc ﬂow dynamics in terms of individual vehicles
and their trajectories. These models aim to represent the behavior of human drivers or
automated vehicles as they reach a target speed in free ﬂow, adjust it in the presence
of interactions with other vehicles, and make other discrete decisions such as lane
change, giving priority, etc.

This section discusses in particular car-following models (Sect. 4.2.1), advanced
cruise controllers (Sect. 4.2.2), and lane-changing models (Sect. 4.2.3). It is worthy
to remark that a complete microscopic simulation requires to deﬁne the origins
(sources) and destinations of all simulated vehicles. Vehicles can have their source
at the boundaries of the area of interest, where vehicle inﬂows must be deﬁned, or
inside the area. Instead of speciﬁc destinations, inside or outside the area simulated,
percentages of directions (turning ratios) at each intersection can be assigned [10].
However, a discussion of how these data are generated is beyond the scopes of this
book.

92

4 Route and Trafﬁc Description

4.2.1 Car-Following Models

Car-following models try to describe the behavior of typical drivers, that is, the
vehicle’s acceleration as it is inﬂuenced by the driver desires, the road infrastructure,
and the surrounding trafﬁc. These models are expressed either under the form

or under the equivalent form

¨s(t) = ˙v(t) = F(v(t), δ(t), v p(t))

v(t + (cid:3)t) = F(v(t), δ(t), v p(t)) ,

(4.2)

(4.3)

where (cid:3)t is a time step, v p is the leading vehicle’s speed, and δ is the net distance or
gap, that is, the distance between the rear bumper of the preceding vehicle and the
front bumper of the host vehicle. If the vehicle length is denoted by (cid:7) p and s0 is the
desired residual gap when both vehicles are stopped, then

δ(t) (cid:2) s p(t) − s(t) − (cid:7) p − s0 ,

(4.4)

see Fig. 4.5. Note that the role of the preceding vehicle can be easily generalized to
other moving or stationary obstacles such as a stop sign etc.

The resulting acceleration has to be constrained to a “comfortable” range or, at

least, to physically possible values, that is,

amin ≤ ¨s(t) ≤ amax .

(4.5)

Most models actually make no distinction between theoretical limits and user-deﬁned
comfortable values, for which see Table 4.1.

Most car-following models distinguish between two driving behaviors: (i) a free-
drive regime where the driving behavior is inﬂuenced only by the current speed and
a desired speed vd , that could be the maximum speed allowed in the road segment,
and (ii) a gap-controlled regime, where the driving behaviour is dominated by the
current gap and a desired gap δd . The so-called psycho-physical models have more
than two regimes.

Fig. 4.5 Schematic
representation of a car
following scenario

s

sp

δ

(cid:2)p

s0

4.2 Microscopic Modeling of Trafﬁc

93

Table 4.1 Typical values of
the car-following model
parameters [11]

Parameter
Time gap (cid:3)t
Minimum gap s0
Acceleration exponent m
Acceleration amax
Deceleration −amin

Typical value

1 s
2 m
4
1 m/s2
1.5 m/s2

4.2.1.1 Gipps’ Model

Gipps’ model [12] is the basis of car-following models implemented in commercial
software such as AIMSUN and others [13]. It is of the form (4.3), where (cid:3)t is taken
as the driver’s reaction time (typically, 1 s), and the function F arbitrates between
the free-ﬂow and gap-controlled regimes,

v(t + (cid:3)t) = min(v f r ee, vsa f e)

with restrictions (4.5), where

v f r ee = v(t) + 2.5amax (cid:3)t

(cid:4) (cid:5)

(cid:3)
1 − v(t)
vd

0.025 + v(t)
vd

(4.6)

(4.7)

is the free-drive speed, a heuristic function of the desired speed vd , and the gap-
controlled speed

(cid:5)

vsa f e = amin(cid:3)t +

a2
min

(cid:3)t 2 − amin

− v p(t)(cid:3)t

(4.8)

(cid:6)
2δ(t) −

(t)
v2
p
amin, p

(cid:7)

is evaluated as the maximum speed to stop safely with respect to the preceding
vehicle.

4.2.1.2 Krauss Model

The Krauss model [14], used in the software SUMO, is similar to the Gipps’ model
since it is of the form 4.3,

v(t + (cid:3)t) = min(vd , vsa f e) − η(t)

(4.9)

with restrictions (4.5), where

(4.10)

(4.11)

(4.12)

(4.13)

94

4 Route and Trafﬁc Description

vsa f e = v p(t) +

δ(t) − δd (t)
hd + v(t) + v p(t)

2|amin|

and η is a random perturbation. As proposed in [14], the desired gap is proportional
to the leader’s speed,

δd (t) = hd v p(t) ,

where hd is the desired time headway.

4.2.1.3

Intelligent Driver Model

The time-continuous Intelligent Driver Model (IDM) is considered the simplest
model producing realistic acceleration proﬁles. Unlike the Gipps’ model, the IDM
[15] combines the free-ﬂow driving behavior and the gap-controlled behavior in one
single equation,

¨s(t) = amax

1 −

(cid:8)

(cid:3)

(cid:4)

m

(cid:3)

−

v(t)
vd

δd (t) + s0
δ(t) + s0

(cid:9)

(cid:4)
2

,

where m is a tunable parameter (see Table 4.1) and the desired gap is

δd (t) = hd v(t) + v(t)(v(t) − v p(t))
amax |amin|

√

2

.

Improvements to this model aimed at yielding more realistic accelerations in some
speciﬁc situations such as v ≥ vd are discussed in [11].

4.2.1.4 Psycho-Physical Models

To this class of models belong the Wiedemann (74) model [16] used in VISSIM and
the Fritzsche model [17] used in the software PARAMICS. In this framework, several
regimes are deﬁned as a function of the gap and the approaching rate. Wiedemann
model deﬁnes four regimes, separated by variable thresholds: free driving, closing
in (the driver perceives a slower leading vehicle), following, and emergency. The
Fritzsche model has two different situation for the following and, consequently, ﬁve
regimes.

4.2 Microscopic Modeling of Trafﬁc

95

4.2.2 Advanced Cruise Control Functions

Vehicles driven by an ACC can have a different behavior than human-driven vehi-
cles [18] and thus are here modeled separately. Various automotive companies have
already introduced such systems, while a large amount of research is still being
conducted on some aspects such as the control law of the ACC system itself, the
calibration of its parameters, the impact of the response time and its string stability
properties. Additional issues concern safety implications, legal issues and technical
restrictions, such as performance of ACC sensors in turning maneuvers, braking,
hills, weather conditions etc. [19].

The ACC controller bypasses the usual driver-controlled torque structure and
calculates the necessary acceleration, depending on the vehicle’s net distance to the
leading vehicle and the difference in the corresponding velocities (approaching rate).
Similarly to driving regimes discussed above, at least two control modes are
present in common ACC systems [20]: (i) a speed-control mode, where the goal
is to travel with a driver-speciﬁed speed vd , if there are no leading vehicles within
sensor range (or they exist but their velocities are higher than the set speed), and
(ii) a gap-control mode, where the goal is to maintain the same speed of the leading
vehicle at the desired gap δd . The transitions between the two aforementioned modes
should be as smooth as possible, which can be difﬁcult to obtain. For instance, the
net distance may abruptly change during lane-changing or cut-in maneuvers.

In speed control mode, the vehicle behavior can be described as

¨s(t) = Kv (vd − v(t)) ,

(4.14)

where Kv is a tunable parameter (see Table 4.2).

In gap-control mode, the acceleration is proportional to both the approaching
rate and the gap error, i.e., the difference between desired and actual gap from the
preceding vehicle. The desired gap is often deﬁned as an afﬁne function of speed,
that is, δd (t) = hd v(t), where hd is the desired safe time headway. In summary,

¨s(t) = K1

(cid:10)
v p(t) − v(t)

(cid:11)

+ K2 (δ(t) − hd v(t)) ,

(4.15)

where K1 and K2 are two tunable coefﬁcient (see Table 4.2).

The ACC tuning parameters must guarantee both the individual vehicle stability,
as well as the string stability [21, 22]. Individual vehicle stability is obtained as long

Table 4.2 Typical values of
the ACC model parameters
[20]

Parameter
Speed coefﬁcient Kv
Speed coefﬁcient K1
Gap coefﬁcient K2
Time headway hd

Typical value

0.4
1.12
1.7
1.5–2 s

96

4 Route and Trafﬁc Description

as the gap error after a possible perturbation converges to zero, given that the leading
vehicle travels at a constant speed. String stability concerns a platoon of vehicles and
is obtained as long as all the spacing errors do not amplify as they travel upstream
[23].

In the automatic control literature, proposals to implement ACC in terms of model
predictive control (MPC) instead of the instantaneous feedback relations (4.14)–
(4.15) have emerged [24–26]. This approach aims at minimizing a cost function that
is composed of the cumulated approaching rate and gap error on a certain horizon.
Adjoining energy-related terms to the cost function gives rise to the “eco-ACC”
strategies that are discussed in Chap. 8.

4.2.3 Lane-Changing Models

Besides car-following models, a microscopic description of heterogeneous trafﬁc
ﬂows must include multi-lane behavior, modeling lane changes and merges. In the
literature these decisions are classiﬁed as either mandatory or discretionary. Manda-
tory changes are performed for strategic reasons, while the driver’s motivation for
discretionary lane changes is a perceived improvement of the driving conditions in
the target lane compared with its actual situation.

Microscopic models often include only the operational stage of lane-changing
decision, i. e., the choice if an immediate lane change is both safe and desirable. This
choice is typically described by using gap-acceptance models, in which the available
gaps are compared to the smallest acceptable gap (critical gap) and a lane change is
executed if the available gaps are greater. These critical gaps vary not only among
different individuals, but also for a given individual under different trafﬁc conditions,
for instance, with the relative speed to the lead and the following vehicles in the target
lane and the type of lane change.

Several models have been proposed in the literature that are based on a probability
distribution of critical gaps [27, 28]. Instead, we shortly present here a more recent
lane-changing/lane-selection model based on the concept of utility.

4.2.3.1 MOBIL

In the “Minimizing Overall Braking Induced by Lane changes” model (MOBIL [29])
lane changes take place if the potential new target lane is more attractive (incentive
criterion) and the change can be performed safely (safety criterion).

The model assumes that a driver makes a trade-off between the expected own
advantage (utility) and the disadvantage imposed on other drivers. Intuitively, the
own utility of a change increases with the gap to the new leader in the target lane, but
also with its relative speed. If, for example, the velocity of the new leader is lower
than that of the current leader, it may be favorable to stay in the present lane despite
a smaller gap. Since in most car-following models (see Sect. 4.2.1 and Eq. (4.2))

4.2 Microscopic Modeling of Trafﬁc

97

nf

f

˜a

a

Fig. 4.6 Schematic representation of a lane change scenario

the acceleration increases with both the gap and the approaching rate, the utility is
deﬁned in MOBIL as the difference in the accelerations after and before the lane
change, as calculated using a car-following model.

For symmetric lane usage rules,2 the incentive criterion is
(cid:10)
˜an f − an f + ˜a f − a f

( ˜a − a) + p

(cid:11)

> (cid:3)ath ,

(4.16)

where accelerations after possible change are denoted with a tilde and the subscripts
f and n f refer to the follower (lag) vehicle in the current or target lane, resp., see
Fig. 4.6. The ﬁrst term denotes the utility of a possible lane change for the driver. The
politeness factor p weighs the total utility of the two immediately affected neighbors
and varies between 0 (selﬁsh behavior) to 1 (altruistic behavior). The threshold (cid:3)ath
models a certain inertia and prevents lane changes if the overall advantage is only
marginal.

The safety criterion is

˜an f ≥ asa f e ,

(4.17)

where asa f e < 0 is a given safe limit. Table 4.3 summarizes some typical parameter
values.

This utility-based method can be adapted to other discrete-choice decisions, such
as deciding whether to cruise or stop at a yellow trafﬁc light (setting a leader speed
v p = 0 = vd ), entering a priority road (similar to mandatory lane change) etc. [11].

Table 4.3 Typical values of
the MOBIL parameters [11]

Typical value
Parameter
Changing threshold (cid:3)ath
0.1 m/s2
Safe deceleration limit asa f e −2 m/s2
Politeness factor p
Bias term for asymmetry

0–1
0.3 m/s2

2Such as those valid in United States. In most European countries, the rightmost lane shall be
preferred. This asymmetric situation is coped with in MOBIL by adding a bias term to the threshold
(cid:3)ath.

98

4 Route and Trafﬁc Description

4.3 Macroscopic Modeling of Trafﬁc Flows

Besides anticipating the microscopic driving behavior with respect to surrounding
vehicles, predicting the average characteristics of trafﬁc ﬂows is also very relevant
for energy efﬁciency optimization.

When modeling trafﬁc, the main variables to consider are ﬂow, density, and mean
speed. The trafﬁc density ρ(s, t), typically measured in [km−1], is deﬁned as the
number of vehicles at one time instant per unit road length. It equals evidently the
reciprocal of the mean headway (bumber-to-bumper distance) between two consec-
utive vehicles.

The trafﬁc ﬂow Q(s, t), typically measured in [h−1], is deﬁned as the number of
vehicles crossing one road section per unit time. It equals the reciprocal of the mean
time headway between two consecutive vehicles.

From these deﬁnitions, it becomes apparent that

Q(s, t) = ρ(s, t)V (s, t) ,

(4.18)

where V (s, t) is the mean trafﬁc speed. The latter quantity results from the speed
of individual vehicles and can have various operational deﬁnitions. Usually, one
considers N vehicles traveling different distances in the same time period, whence the
(cid:12)
N
j v j /N (arithmetic average of individual
time-mean speed3 is evaluated as V =
speeds).

4.3.1 Fundamental Diagrams

Trafﬁc is said to be stationary when mean speed does not change with time, and
homogeneous when it does not change with the road section considered. Considering
a stationary and homogeneous trafﬁc ﬂow, it is reasonable to assume that there exists
some relationship between the density and speed or ﬂow.

This fundamental relationship can be derived either by curve ﬁtting to sev-
eral empirical observations, or theoretically from microscopic models. Most car-
following models introduced in Sect. 4.2.1 present a steady-state equilibrium when
applied to a platoon of similar vehicles following each other along a one-dimensional
pathway. Thus, they can be used to derive a theoretical ﬂow-density relationship.

The microscopic equilibrium implies that v(t + (cid:3)t) = v(t) = v p(t) ≡ veq and
δ(t) ≡ δeq . By setting these conditions in the Gipps’ model, Eqs. (4.6)–(4.8), for
instance, one obtains the equilibrium speed

3This deﬁnition should not be confused with the space-mean speed that considers N vehicles
crossing the same segment with different travel times, and is evaluated as N /
(1/v j ) (harmonic
average of individual speeds).

(cid:12)

N
j

4.3 Macroscopic Modeling of Trafﬁc Flows

99

Flow [veh/s]

QC

Free-ﬂow

Congested (jam)

ρC

ρJ

Density [veh/m]

Fig. 4.7 Fundamental diagram of trafﬁc ﬂow from Gipps’ microscopic model (blue) and IDM
(orange). Critical-capacity point is labelled for the Gipps’ model

The equilibrium gap can be conveniently related to the trafﬁc density. As observed
above, the density is the reciprocal of the spacing between two consecutive vehicles,
i.e.,

veq = min

(cid:4)

(cid:3)
vd , 2
3

·

δeq
(cid:3)t

.

ρeq =

1
δeq + s0 + (cid:7)

.

(4.19)

(4.20)

The equilibrium ﬂow is evaluated from its deﬁnition as Qeq = ρeq veq . From (4.19)
and (4.20), it can be thus expressed as a function of the density as
(cid:3)
vd ρeq , 2
3

· 1 − ρeq ((cid:7) + s0)
(cid:3)t

Qeq = min

(4.21)

(cid:4)

.

The ﬂow-density relationship is called fundamental diagram in the trafﬁc engi-
neering literature. Equation (4.21) reveals that the Gipps’ model yields a triangular
fundamental diagram, as shown in Fig. 4.7. The two car-following model regimes
(free-drive, gap-controlled) describe the free-ﬂow, resp., the congested trafﬁc regime.
Under the free-ﬂow regime, the ﬂow increases proportionally to density until the crit-
ical value ρC (cid:2) ((cid:7) + s0 + 3/2vd (cid:3)t)−1 is reached. Then the ﬂow decreases linearly
with density under the congested regime, until the maximum congestion (“jam”)
density ρJ (cid:2) ((cid:7) + s0)−1 is reached, at which speed becomes zero. The maximum
ﬂow (or capacity) is evaluated as QC = vd ρC . A triangular fundamental diagram
was ﬁrst proposed by Daganzo based on empirical data [30].

Many other ﬂow-density correlations have been proposed in the literature. For
example, the fundamental diagram obtained with the IDM, equations (4.12)–(4.13),
is smooth in the range between ρ = 0 and ρ = ρJ , as shown in Fig. 4.7.

These theoretical fundamental diagrams generally do not ﬁt real data particu-
larly well. Reﬁnements that have been introduced in the literature include “inverse-
lambda”-shaped diagrams with a discontinuity around the capacity point, such as

100

4 Route and Trafﬁc Description

in Wu’s model with capacity drop [31]. A substantially different approach is that
of Kerner’s three-phase theory, which considers three regimes: free ﬂow, jam, and
an intermediate synchronized ﬂow, for which there is no ﬂow-density line but a
two-dimensional area [32].

4.3.2 Kinematic Models

In the ﬁrst-order kinematic models, the relationship Qeq (ρeq ) obtained for equi-
librium trafﬁc conditions is generalized to all situations, including non-equilibrium
ones, so that Q(s, t) = Qeq (ρ(s, t)). This assumption was postulated in the ’50s by
Lighthill and Whitham and, independently, Richards, whence the name LWR also
used for this class of models.

The fundamental diagram is coupled with the continuity equation that always

holds,

∂ρ(s, t)
∂t

+

∂ Q(s, t)
∂s

= φ(s, t) − Q(s, t)
I (s)

d I (s)
ds

,

(4.22)

where φ is the net in- or out-ﬂow density [h−1km−1], e.g., from on-, or to off-ramps,
resp., and I (s) is the number of lanes. The former quantity is deﬁned as the vehicle
ﬂow (positive in the case of an on-ramp, negative in an off-ramp) divided by the length
of the ramp and the number of lanes. The number of lanes is a non-integer,4 location-
dependent quantity that models situations such as lane merging and openings. The
second right-hand term in (4.22) describes the net ﬂow from ending lanes and to
newly opening lanes.

Overall, the LWR models consist of a differential-algebraic system of two equa-
tions in the two unknowns Q and ρ. Such equations can be solved with numerical
techniques once (i) the values of the unknowns at the boundaries of the geomet-
rical region considered, (ii) their values at the start of the simulation, and (iii) the
exogenous variables φ and I are speciﬁed. These ﬁrst-order models allow a realistic
description of simple phenomena such as shock wave propagation.

On the other hand, second-order models renounce the ﬂow-density fundamental
relation and introduce instead a momentum-conservation equation under the form of
a differential equation in the variable V (s, t). Consequently, these models take the
form of a differential-algebraic system of three equations in the three variables Q, ρ,
and V . Notable models of this type include Payne’s [33]. Second-order models are
the method of choice to macroscopically describe trafﬁc waves and other complex
phenomena.

4A value of I = 2.2, for example, means that in a fraction of the unit distance considered there are
2 lanes and in the remaining part there are 3 lanes.

4.4 Prediction of Energy Consumption on Road Networks

101

4.4 Prediction of Energy Consumption on Road Networks

The goal of this section is to present methods to predicting energy consumption of
various types of vehicles in road networks. This energy consumption prediction will
be useful for implementing eco-routing (Chap. 5) and related strategies.

Energy cost of each link of the road network depends on the vehicle’s veloc-
ity proﬁle, road slope, vehicle parameters such as its coefﬁcient of aerodynamic
drag, rolling resistance, mass, and powertrain parameters. Models of speciﬁc or rep-
resentative vehicles can be utilized to estimate the energy cost of each link [34].
Historically observed or real-time speed and trafﬁc traces on each link can be used
to estimate the expected velocity proﬁle on a link [35]. Alternatively, sometimes link
energy/emission costs are estimated based on regression ﬁts to empirical road data
as in the Comprehensive Modal Emission and Energy Model (CMEM) in [36], or
relying on historically recorded consumption for each link as shown in [37]. In [38] a
number of macroscopic and microscopic energy consumption and emission models
are reviewed which can be used in eco routing.

Predicting the energy consumption of a vehicle on a given route can be achieved
using the vehicle models of Chap. 2 and a prediction of the speed and altitude proﬁles
followed by the vehicle. While altitude can be obtained from geographical informa-
tion services (see Sect. 4.1), the estimation of speed proﬁles is particularly critical.
The assumption that is usually made in routing is that the vehicle will follow the
general characteristics of the trafﬁc that it will ﬁnd along its trajectory. In particular,
its estimated speed and position are assumed to be

ˆv(t) = V (ˆs(t), t) ,

= ˆv(t) .

(4.23)

d ˆs(t)
dt

This approach would require that the local speed ﬁeld V (s, t) is known at any time and
location. However, this information is generally not available, at least not completely.
On the one hand, real-time micro- or macroscopic simulations are not practical and
have rarely been attempted [39]. On the other hand, the “operating speed” models,
that are often used in the trafﬁc engineering literature to design road infrastructure
(Sect. 4.4.1), try to correlate the average speed on a segment V to geometrical and
contextual characteristics of the segment and could be used for a ﬁrst evaluation. It
should be noted that these models are usually time-independent.

Similarly, commercial mapping web-services (see Sect. 3.2.3), generally provide
aggregated trafﬁc information in the form of an average speed V . Typical aggregation
intervals are of the order of the road segment and, temporally, of several minutes.

In both latter cases, the provided average speed V is constant when seen by one
vehicle on a road segment, and might vary only slowly with time as the general
trafﬁc conditions evolve. However, without any information on speed ﬂuctuations
around the average speed, contributions of speed moments to energy consumption,
like those of speed variance and skewness in (2.11), cannot be evaluated. That could
lead to underestimating energy consumptions especially in urban and/or suburban

102

4 Route and Trafﬁc Description

road networks. In fact, disruptions in the speed proﬁles and accelerations are caused
not only by trafﬁc, but also by the infrastructure. In particular, critical elements of
the road infrastructure, such as trafﬁc lights, intersections, and turning movements
are very likely to induce stops or signiﬁcant decelerations.

In order to take into account the effects of higher speed moments, in particu-
lar, infrastructure-induced accelerations and decelerations, and improve the energy
consumption estimation, we describe next in Sect. 4.4.2 a simple method based on
synthetic speed proﬁles.

4.4.1 Operating Speed Models

Operating speed models predict average speed on road segments as a function of ﬁxed
road attributes. The representative values are often the mean or, more frequently, the
85th percentile speed. Usually free-ﬂow speed only is considered, in order to suppress
the inﬂuence of headway and reduce the number of exogenous variables.

These models can be expressed with correlations of the type

vF F,i or Vi = f (Ri , αi , wi , vlim, nl, . . .) ,

(4.24)

where the subscript i refers to a road segment, R is its horizontal radius, α is road
grade, w is road or lane width, vlim is the posted speed limit, nl is number of lanes.
Additional dichotomic (0/1) parameters describe the presence of particular fetaures
(school, parking, sidewalk, etc.). Such models have been derived, e.g., for rural road
[40], for urban tangent roads with 30 km/h speed limits and other urban scenarios
[41], and for suburban roads [42].

Two particular situations that have been studied in [43] are speed of heavy-duty
vehicles (trucks) on turnings and on roundabouts. Statistical regression suggests that
the lateral acceleration at turnings has a distribution centered around 0.15g, such that
the average cornering speed is

Vi ≈ 0.39vtur n = 0.39

μg Ri .

(cid:2)

(4.25)

For roundabouts, speed at entrance, exit, and mean speed are crucial. The latter two
have shown a strong correlation with the roundabout radius. For example, the average
speed on the whole segment can be expressed as

Vi ≈ c1 Ri + c0 ,

(4.26)

where the values found are c1 = 0.43 km/h/m and c0 = 16.3 km/h. In contrast, the
entrance speed is more severely affected by trafﬁc conditions (for instance it can be
zero) and thus less correlated to the road characteristics.

4.4 Prediction of Energy Consumption on Road Networks

103

4.4.2 Synthetic Speed Proﬁles

For each road segment of the network, we assume that it is possible to know the link
length (cid:7)i , a prevailing average trafﬁc speed Vi , and the road grade αi which might
vary within the considered link depending on the position.

Considering a road segment i, the speed proﬁle on it is supposed to be composed
of two phases: a transition phase to go from Vi−1, the cruising speed on the preceding
segment, to Vi , and a cruising phase at constant speed Vi . Let us ﬁrst introduce a
transition speed at the interface between two segments deﬁned as

vt,i = ζi

Vi + Vi−1
2

,

(4.27)

where ζi ∈ [0, 1] is a parameter depending on the type of interface (e.g. stop sign,
trafﬁc light, turning movement, etc.), which could be selected in a deterministic or
stochastic fashion.

The speed change between two road segments is modeled as two distinct tran-
sients: a ﬁrst transient from Vi−1 to vt,i , and a second transient from vt,i to Vi , both
at constant acceleration/deceleration at (a model parameter), as shown on the right-
hand side of Fig. 4.8. By taking τ = 0 at the beginning of the transition, the predicted
speed on the road segment i can be thus written as5

vi (τ ) =

⎧
⎪⎨

⎪⎩

Vi−1 + sign(vt,i − Vi−1) · at τ,
τ ∈
vt,i + sign(Vi − vt,i ) · at (τ − (cid:3)τi−1,t ), τ ∈
Vi ,

τ ∈ ((cid:3)τi , τi ]

(cid:18)

(cid:17)
0, (cid:3)τi−1,t
(cid:10)
(cid:3)τi−1,t , (cid:3)τi

(cid:18)

,

(4.28)

where the transient times are

(cid:3)τi−1,t =

|vt,i − Vi−1|
at

, (cid:3)τt,i =

|Vi − vt,i |
at

.

Note that this synthetic speed model does not depict stop time at trafﬁc lights or
intersections, which anyway does not contribute to energy consumption.

By imposing that

(cid:19) τi

0

vi (τ )dτ = (cid:7)i ,

the travel time of the road segment can be evaluated. In the common case where
vt ≤ Vi−1, vt ≤ Vi , the result is

(4.29)

(4.30)

(4.31)

τi =

+

(cid:7)i
Vi

−V 2

i−1

+ 2Vi−1Vi + V 2
i

− 4Vi vt + 2v2
t

2at Vi

5From here on we omit the hat symbol of the predicted speed for simplicity.

104

(a)
Speed

ζi = 1

vt,i

Vi−1

4 Route and Trafﬁc Description

Vi

Vi

(b)
Speed

ζi = 0

Vi−1

vt,i

Δτi−1,t Δτt,i

Time

Δτi−1,t Δτt,i

Time

Fig. 4.8 Interface accelerations: on the left-hand side a standard link transition, on the right-hand
side a link interface with a stop sign

and, consequently, the mean speed ¯vi (cid:2) (cid:7)i /τi is generally smaller than Vi .

The speed moments can be also evaluated from the synthetic speed proﬁle for

each road segment. For instance, we obtain

(cid:19) τi

0

(cid:19) τi

0

v2
i

(τ )dτ = (cid:7)i Vi +

2V 3

i−1

− 3V 2

i−1Vi − V 3
6at

i

+ 6Vi v2
t

− 4v3
t

v3
i

(τ )dτ = (cid:7)i V 2
i

+

V 4

i−1

− 2V 2

i−1V 2
i

+ 4V 2

i v2
t

− 2v4
t

− V 4
i
4at

,

,

(4.32)

(4.33)

and consequently the moments σ 2

v,i , bv,i deﬁned in Sect. 2.1.2.

4.4.3 Energy Consumption for Traction

After having predicted the synthetic speed proﬁle vi (τ ) on a link, the energy con-
sumption can be evaluated using the models presented in the previous chapters.6 In
particular, the energy consumption at the wheels can be evaluated with Eq. (2.11),
that we rewrite here for the link i as

EW,i = 1
2

(cid:10)

m
(cid:20)

(cid:11)

V 2
i

− V 2

i−1

+

+

mgαi + C0 + C1 ¯vi + C2 ¯v2
i

+ C1

+ 3C2σ 2
v,i

+

σ 2
v,i
¯vi

(cid:21)

C2bv,i σ 2
v,i
¯vi

(cid:7)i .

(4.34)

6A validation of this approach will be presented in the case study of Sect. 9.5.

4.4 Prediction of Energy Consumption on Road Networks

105

Analogously, (2.29) and (2.43) hold when tank energy is considered, for ICEVs and
EVs, respectively. For ICEVs and EVs, braking and traction phases over the link
are identiﬁed from the sign of the wheel power Fw,i (vi (τ ))vi (τ ). For ICEVs, gear
engaged and thus gear ratio γe,i (τ ) can be identiﬁed by coupling the synthetic speed
proﬁle with the gear shift law (2.17) of the particular transmission.

Although this procedure is straightforward and can be very accurate, the evaluation
of instantaneous powers over each road link can be time consuming. Therefore, for
the fast prediction of energy consumption over a large number of road links that is
required by several functions (eco-routing, range estimation, etc.), a further simpliﬁed
method is often necessary.

This method considers average speeds during the three periods of the synthetic

speed proﬁle (4.28), namely,

vi1 (cid:2) (Vi−1 + vt,i )/2 ,

vi2 (cid:2) (vt,i + Vi )/2 ,

vi3 (cid:2) Vi ,

(4.35)

and accordingly evaluates three constant levels of wheel power

Pw,i j = C0vin + C1v2
i j

+ C2v3
i j

+ mgαi + mai j ,

j = 1, . . . , 3 .

(4.36)

We also deﬁne the three corresponding demand power levels Pd,i j (cid:2) Pw,i j η−sign(Pw,i j )

.

t

For ICEVs, the corresponding fuel power levels are
(cid:22)

P f,i j =

a0,i j + a1,i j Pd,i j ,
0,

if Pd,i j > 0
otherwise

,

where a0,i j (cid:2) ke,0ωe,i j + ke,1ω2
ing fuel energy consumption is

e,i j , a1,i j (cid:2) ke,2 + ke,3ωe,i j + ke,4ω2

e,i j , and the result-

(4.37)

(4.38)

E

(I C E V )
f,i

=

P f,i j τi j .

3(cid:23)

j=1

For EVs, the constant battery power levels are

⎧
⎪⎨

⎪⎩

1
ηb

ηb

(cid:24)
b0,i j + b1,i j Pd,i j + b2,i j P 2
d,i j
(cid:24)
b0,i j + b1,i j Pd,i j + b2,i j P 2
d,i j

(cid:25)

(cid:25)

,

if Pd,i j > 0

, otherwise

Pb,i j =

,

(4.39)

where

b0,i j (cid:2) km,0 + km,1ωm,i j + km,2ω2

, b1,i j (cid:2) km,3,

m,i j

b2,i j (cid:2) km,4
ω2

m,i j

+ km,5
ωm,i j

+ km,6

(4.40)

106

and

4 Route and Trafﬁc Description

E

(E V )
b,i

=

Pb,i j τi j ,

3(cid:23)

j=1

(4.41)

respectively. Both the engine and the motor speed levels are evaluated from the
corresponding vi j and γe,i j . The times τi j are easily derived from (4.28)–(4.31).

For HEVs, Eq. (2.43) could be similarly used. However, instead of an overall
energy consumption, one is more often interested in evaluating the minimal fuel
consumption E f,i that corresponds to a given electric consumption Eb,i or SoC
variation. The optimal energy management strategy (see Sect. 2.4.2) can be deﬁned
by assuming that each period of the synthetic speed proﬁle is characterized by one
value of the torque or power split ratio ui j . Consequently, for parallel HEVs,

(cid:22)

P f,i j (ui j ) =

a0,i j + a1,i j ui j Pd,i j ,
0

if ui j Pd,i j > 0,
otherwise

,

(4.42)

Pb,i j (ui j ) =

⎧
⎨

⎩

1
ηb
ηb

(cid:24)
b0,i j + b1,i j ¯ui j Pd,i j + b2,i j ¯u2
(cid:24)
b0,i j + b1,i j ¯ui j Pd,i j + b2,i j ¯u2

i j P 2
d,i j
i j P 2
d,i j

(cid:25)

(cid:25)

,

if ¯ui j Pd,i j > 0

, otherwise

, (4.43)

where ¯ui j (cid:2) (1 − ui j ).

ically constrained linear program

The values ui j can be found with numerical methods as the solution of the quadrat-

min
ui ={ui1,ui2,ui3}

P f,i j (ui )τi j ,

3(cid:23)

j=1

s.t.

Pb,i j (ui )τi j = Eb,i .

3(cid:23)

j=1

(4.44)

(4.45)

Finally, the optimal fuel consumption associated with the considered synthetic

speed proﬁle is

E

(H E V )
f,i

(Eb,i ) =

P f,i j (ui j )τi j .

(4.46)

3(cid:23)

j=1

A more detailed procedure, including variable power levels and a careful enforcing
of power limits, is described in [44].

The battery energy consumptions Eb,i or SoC variations per road segments are
free parameters in HEV and are usually determined by a further optimization of the
energy management strategy over the whole trip, see Sect. 6.6. A rough prediction,
that is only dependent on the road characteristics and the speed proﬁle assumed, is
possible using the method of [44]. This model states that the optimal battery energy

4.4 Prediction of Energy Consumption on Road Networks

107

Fig. 4.9 Typical map of the
auxiliary power absorption
of an electric car as a
function of ambient
temperature

Paux [kW]

5

4

2

2

1

-10

0

10

20

30

θext [◦C]

consumption is a function of the predicted kinetic and potential energy to travel on
the road segment, and of the vehicle parameters, and is deﬁned as

Eb,i ≈ ρ

m(V 2
i

− V 2

i−1

) + mg(zi − zi−1)

,

(4.47)

(cid:4)

(cid:3)

1
2

where z is the altitude and ρ is a tuning parameter. This method also provides an
a-priori estimation of the bounds of achievable (cid:3)SoC for each road segment, which
can be useful for a more precise optimization (Sect. 5).

4.4.4 Energy Consumption for Thermal Comfort

To improve the estimation of energy consumption in real-life driving, it is important
to take into account also the auxiliary power requirements. In particular for electric
vehicles, power requirement for cabin heating, ventilating, and air conditioning has
a major impact on the driving range. Such an impact increases with the trip duration
and the ambient temperature difference with respect to the desired cabin temperature.
To obtain a desired thermal comfort level, a power Paux must be ultimately drained
from the onboard source (fuel for ICEVs, battery for EVs and HEVs), accounting
for the various efﬁciencies in the conversion process from electric or fuel energy into
useful thermal energy. For our purposes, this auxiliary power can often be simply
modeled as a function of the ambient temperature θext and considered constant over
the trip. Consequently, the auxiliary energy consumption over the link i is evaluated
(cid:19) τi
as

(cid:19) τi

(cid:3)ET,i =

Pauxdt =

f (θext)dt = f (θext)τi .

(4.48)

0

0

Typical values of the function f (·) for an electric city car are shown in Fig. 4.9 [45].
These data suggest a parametrization of the type

(cid:3)ET,i = Kth|θext − θ0|τi ,

(4.49)

108

4 Route and Trafﬁc Description

where θ0 is a reference temperature around 15 ◦C and the coefﬁcient Kth takes dif-
ferent constant values for heating (θext < θ0) and air conditioning (θext > θ0).

The introduction of thermal storage systems, based on various technologies such
as Sensible Heat Storage (SHS) and Phase-Change Materials (PCM) offers an addi-
tional degree of freedom. In the context of CAVs, anticipating the thermal ﬂows
released by the powertrain components as a function of the vehicle usage (predic-
tive thermal management), will enable the optimization of storage system charg-
ing/discharging and allow substantial reductions of Paux [46], see also Sect. 3.3.5.

Energy-Efﬁcient Route Navigation
(Eco-Routing)

Eco-routing methods are the strategies and tools aimed at minimizing a vehicle’s
energy consumption by route selection. Given some origin and destination, which
are typically chosen by the driver or user, eco-routing plans an energy-minimal route.
The set of possible routes from origin to destination constitutes a graph, where
nodes and links represent junctions and roads. In the next Sect. 5.1 we will deﬁne
a weighting function, which associates each link of the graph with a weight. In
conventional routing graphs, the weight associated with each arc is either the length
of the arc or its travel time. In the eco-routing framework, each link of the graph
is assigned a weight that represents the travel energy expenditure. Differently from
length or travel time weights, energy weights can be negative when EVs or HEVs
with regenerative braking are concerned. Then in Sect. 5.2 we present how the eco-
routing algorithms can be used to predict the maximal driving range of a vehicle.
Finally, Sect. 5.3 will discuss some practical implementation issues.

5.1 Eco-Routing as a Shortest-Path Problem

The energy-minimal navigation problem introduced above is treated by formulating
an eco-routing shortest-path problem (ER-SPP) in Sect. 5.1.1, while Sect. 5.1.2
presents various techniques to solve such a problem.

5.1.1 Problem Formulation

The eco-routing as a shortest path problem can be stated in the following way. For a
given directed graph G = (V, A), where V is the set of nodes ni , and A is the set of
links (or edges) ek connecting these nodes, ﬁnd the path p = (e1, e2, . . .) ⊂ P, where
P is the set of all simple1 paths in G, such as to minimize the objective function
(cid:2)

J (p) (cid:2)

wk(t, bk(t)) ,

ek ∈p

(5.1)

where wk is the weight attributed to the link k, possibly as a function of time and
of additional decision variables bk. Minimization of (5.1) is subject to (i) initial and
terminal conditions (single-source shortest path)

n1 = n O , n(|p|) = n D ,

(5.2)

where n O and n D are the origin and the destination sought, respectively, and | · |
denotes cardinality, (ii) ﬁrst-order dynamic constraints on the state vector xk for
each node nk belonging to p,

xk+1 = xk + fk(t, wk(t, bk(t)), bk(t)) x1 = x(n O ) ,

(5.3)

(iii) algebraic constraints on the state,

gi (xk) ≤ 0,

i = 1, . . . , (cid:2) ,

terminal inequality constraints over (iv) the state,

h(x(n D)) ≤ 0 ,

and (v) possibly, over a certain resource,

R(p) (cid:2)

rk(t, bk(t)) ≤ R f ,

(cid:2)

ek ∈p

(5.4)

(5.5)

(5.6)

where rk is the resource consumption over link k.

How the quantities V , A, wk, bk, xk, f , g, h, and rk, are particularized for our
ER-SPP will be discussed in the following sections. Although costs, state variations,
and resource consumptions might change with time, we will consider only the time-
independent SPP. Similarly, although the situation in the road network is continually
evolving and predicting its state in future is arguably difﬁcult, we shall not consider
stochastic SPP.

5.1.1.1 Graph

The most intuitive choice to set G for a given road network is such that nodes rep-
resent road intersections and links represent roads. However, the use of this primal

1A simple path is a path without cycles: its edges are distinct.

5.1 Eco-Routing as a Shortest-Path Problem

113

graph presents some major difﬁculties. In particular, consider the case of an inter-
section with two or more incoming roads and one outgoing road i. The weight of the
latter clearly depends on which upcoming link the vehicle comes from because each
movement to enter i (e.g., left-turn, right-turn, through) might be accompanied by a
different speed transition. In fact, the synthetic proﬁle vi (τ ) introduced in Sect. 4.4
is not unique since it depends on the upstream average speed Vi−1 that is not unique
in this case.

This difﬁculty is resolved by modeling the road network as an adjoint graph,
which is deﬁned as follows. The adjoint graph G = (A, A∗) of a directed graph
(cid:6), and a link connecting two nodes if the
(cid:6) = (V, A) has a node for each link in G
G
corresponding two links in G

(cid:6) share a common node.

In other words, each link i ∈ A of G

(cid:6) becomes a node of G, and each link k ∈ A∗ of
(cid:6). Thus, the adjoint graph allows
G encompasses two generic links i − 1, i ∈ A of G
to correctly assign unique weights to all the possible maneuvers in the original graph
G. Figure 5.1 illustrates this concept. Useful properties of adjoint graphs allow to
compute the number of links of G, and therefore its size, based on the connectivity

(a)

(b)

n6

n8

n12

n1

n2

n4

n5

n10

n11

n14

n15

n3

n7

n9

n13

Fig. 5.1 Relation between a road network (a) and the corresponding road network graph G (b) [2].
The nodes are shown as circles, the edges as arrows. There are ﬁfteen nodes n1 to n15 representing
the roads in the road network. The edges (arrows) spanning from nodes indicate to which nodes
(roads) can the vehicle turn to at the downstream intersection

114

5 Energy-Efﬁcient Route Navigation (Eco-Routing)

properties of G
G the initial and target links (i O , i D) of the primal graph.

(cid:6) [1]. Note that the origin and destination nodes of (5.2) represent in

In this context, battery recharge stations (of either type, swapping, full/partial
reﬁll, continuous wireless charging, etc.) can be attributed to some nodes of the
primal graph, thus to a subset A∗
c

⊂ A∗ in the adjoint graph.

5.1.1.2 Objective Function

In standard navigation systems, the objective function J (p) is chosen such as to
represent the trip length or the travel time. In eco-routing, the focus is on energy
saving and therefore the weight assigned to each link of the graph represents the
associated (tank) energy consumption ET .

Using the synthetic energy consumption deﬁned on the links of the primal graph
(cid:6), we can now attribute energy weights to each link ek ∈ A∗. Reminding that the
G
link k of the adjoint graph encompasses the road segments i − 1 and i of the primal
road network, the most natural choice is to attribute to ek the energy consumption of
the downstream road segment (i) that already accounts for the transition from road
segment i − 1, see Sect. 4.4.3. In other words, we set

wk = ET,i ,

(5.7)

where ET,i can be evaluated with (4.38) for ICEVs, (4.41) for EVs, and with (4.46)
for HEVs. Note that in the latter case, the fuel energy consumption depends on the
electric energy consumption, which thus plays the role of a decision variable bk in
(5.1).

The shortest path (SP) and the fastest path (FP) routing can be deﬁned analogously
such that the SP routing minimizes the distance and the FP routing minimizes the
travel time. In these cases, the link weights wk are represented by the length of the
outgoing road segment or its travel time, respectively,

(S P)
w
k

(F P)
= (cid:2)i , w
k

= τi .

(5.8)

This travel time can be evaluated with (4.31).

5.1.1.3 Decision Variables

Decision variables b add degrees of freedom to the eco-routing problem besides the
choice of the link sequence in the path.

In HEVs, the additional decision variables are the electricity consumption on links

k,

(H E V )
b
k

= Eb,i ,

(5.9)

5.1 Eco-Routing as a Shortest-Path Problem

115

whereas the cost is represented by the minimal fuel consumption. Note that the bk’s
can be negative in this case.

When recharge facilities for electriﬁed vehicles (a scenario denoted here as xEVR)
are taken into account, that is, the path is not supposed to be covered with one single
battery recharge, the additional decision variable is the quantity of electricity reﬁlled
at links where a recharge facility is available,

(x E V R)
b
k

= (cid:4)Ec,i ,

ek ∈ A∗

c

.

(5.10)

In both aforementioned cases, the kth graph weight wk can take on inﬁnitely-many
values depending on the decision variable over the graph link. The problem of ﬁnding
the optimal bk for each link of the graph while searching the optimal route from an
origin to a destination has been addressed in the literature [3]. However, the proposed
solution strategies are often impractical due to large computational cost. A practical
approach therefore consists of augmenting the adjoint graph G = (A, A∗) by creating
as many copies of each link of the graph as the number of pre-deﬁned possible
( j)
∈ [bk,min, bk,max ], j = 1, . . . , Nb, let
values of bk. Using the discretized values b
k
us deﬁne a b-augmented graph GB = (A, A∗
) with link copies k( j) ∈ A∗
B, and a new
B
cost function

( j)
w
k

( j)
(cid:2) wk : bk = b
k

,

j = 1, . . . , Nb ,

(5.11)

that represents the cost to perform the maneuver k( j) ∈ A∗
B for a given decision
( j)
variable b
. The number of copies, or decision variable levels, Nb is a design
k
parameter, in a trade-off between discretization accuracy and computational burden.
( j)
Furthermore, the variation range of b
k depends on the physical properties of the
maneuver k ∈ A∗.

Another possibility to treat the problem of eco-routing with additional decision
variables is to make copies of the links w.r.t. discretized values of the state (see
below) at the end of the link [3, 4]. However, augmenting the graph in terms of
decision variables offers a much higher precision as compared to these alternative
graph expansions, while the best choice in terms of algorithmic complexity is a matter
of debate.

5.1.1.4 State Dynamics and Constraints

In both scenarios where states are relevant, that is, HEVs and xEVs with battery
recharge, the role of state variable is played by the electrical energy stored in the
battery, x = {εb}. Given (5.7) and (5.9)–(5.10), the state dynamics (5.3) reads

for HEVs and

(H E V )
k

f

= −Eb,i = −bk

(x E V R)
k

f

= −Eb,i = −wk + bk

(5.12)

(5.13)

116

5 Energy-Efﬁcient Route Navigation (Eco-Routing)

for xEVs with battery recharge, with x(n O ) = εb,0 in both cases. These dynamics
are further subject to the physical limits of the battery, that is, the local constraints
(5.4) that are to be applied at each link and for partial paths,

0 ≤ εb ≤ εb,max ,

(5.14)

with εb,max (cid:2) QbVb0 being the battery maximum capacity, while it has been assumed
for simplicity that the battery can be completely depleted.2

Depending on the type of HEV, the battery energy at the end of the trip should
match a prescribed value. For charge-sustaining HEVs, the ﬁnal SoC should match
the initial value, thus εb(n D) − εb,0 = 0 in (5.5). For plug-in HEVs, if a recharge is
possible at the destination, the battery should be depleted. Thus the desired value for
εb(n D) is usually close to zero, that is, a battery fully discharged.

5.1.1.5 Resource Constraints

Although energy efﬁciency is the main objective in ER-SPP, neglecting travel time
might reduce the appeal of the selected route and the drivers’ compliance to the
routing suggestion. Hence, it is important to optimize energy consumption while
providing the opportunity to the drivers to deﬁne their preferred trade-off with travel
time. This trade-off can be achieved by selecting the resource consumption rk in (5.6)
as to represent the travel time of the link k,

rk = τi ,

(5.15)

where τi is the travel time of the downstream link of the primal graph. The term R f
in (5.6) thus plays the role of the maximum time allowed for the route.

When battery recharge is taken into account, the travel time must include the wait-
ing time at stations and the recharging time. Therefore, the resource consumptions
become a function of the electricity recharged, thus of the decision variable (5.10),

(x E V R)
k

r

= τi + (cid:4)τc,i ((cid:4)Ec,i , εb,k) .

(5.16)

For the charging function (cid:4)τc,i ((cid:4)Ec,i , εb,k), the models introduced in Sect. 4.1.4
can be used.

*
* *

The presence of terminal state and resource constraints makes the eco-routing
problem a resource-constrained SPP (RCSPP), which is known to be NP-hard. In
order to overcome this complexity, which makes the problem impractical for end-

2In practice, that is not true, and a practical SoC window must be considered instead.

5.1 Eco-Routing as a Shortest-Path Problem

117

user applications and driving assistance, a more tractable problem formulation can
be introduced under the form of a Multi-Objective Optimization Problem (MOOP),
where resources and state constraints are transformed into additional objective func-
tions to be minimized alongside with J (p).

Solving a MOOP requires an external decision making process to give relative
preference to the various objectives. In a-posteriori methods, preference is given, and
a decision is made, once a representative set of optimal solutions is found. In contrast,
a-priori methods require that preference information is available before searching for
optimal solutions. A standard a-priori method is scalarization, that is, combining the
various objectives into a single objective function. Several approaches to scalariza-
tion exist, depending on the form of the single objective function. In particular, the
standard approach of the weighted-sum scalarization [5] casts the MOOP as a single-
objective problem by appending the terminal constraints as additional terms of the
objective function,

(1 − λ1 − λ2)

wk + λ1

rk + λ2

fk ,

(5.17)

(cid:2)

ek ∈p

(cid:2)

ek ∈p

(cid:2)

ek ∈p

where the ﬁrst term of (5.17) is the original objective function, the second is the
terminal value of the resource that is constrained by (5.6), and the third is the terminal
value of the state constrained by (5.5), where for simplicity a hard constraint has
been assumed. The optimization weights λ ∈ [0, 1] deﬁne the trade-off between the
objectives, and should be sought such that the terminal constraints for the optimal
path p are met, see below Sect. 5.1.2.3.

The presence of local state constraints (5.4) could be treated by making several
copies of each link for several state levels in a discretized set and thus directly
enforce the constraints. However, this problem makes the graph complexity grow
exponentially. Therefore, a common approach to deal with these constraints is to
relax them in the problem formulation, and verify them a posteriori on the optimal
path [6]. Such a path is feasible if ∀ek ∈ p, xk fulﬁlls (5.4). If it is not, it is necessary
to select the next-best path, which in turn requires a routing algorithm that is capable
to sort paths according to the objective function chosen (see Sect. 5.3).

5.1.2 Routing Algorithms

Graphs modeling road networks are directed and cyclic by nature, and, due to limited
connectivity and the presence of one-way roads, the adjacency matrix representing
road networks graphs tends to be highly sparse. Furthermore, the consideration of
electric vehicles and energy recuperation phenomena implies that the graph links may
be weighted with negative costs. In theory, negative weights on a cyclic graph may
lead to the criticality of negative cycles: there might be cycles in the road network
graph whose sum of costs is negative. Routing in such graphs is not possible, as
the vehicle can gain any amount of energy simply by running along these cycles

118

5 Energy-Efﬁcient Route Navigation (Eco-Routing)

sufﬁciently many times. However, this issue does not make physical sense in our
framework, provided that the modeling approach is correct.

In the next sections two common shortest-path algorithms are presented, namely
Dijkstra’s and Bellman-Ford (BF). Then, algorithms are presented that can be used
to effectively ﬁnd the Pareto front for the bi-objective optimization (5.17).

5.1.2.1 Dijkstra’s Algorithm

Dijkstra’s algorithm, conceived by Edsger Dijkstra in the 1950s [7], is perhaps
the most commonly used algorithm in routing context. A basic implementation is
described in Algorithm 1. The procedure starts marking all nodes of the graph unvis-
ited and assigning a cost, denoted with J , equal to zero to the origin node, inﬁnity to
the others. Then an iteration over the unvisited nodes is launched, starting from the
origin node. For the current node, all of its unvisited neighbors are considered and
their link costs through the current node are evaluated. This value is compared to
the current assigned cost and the smaller one is assigned. When all of the unvisited
neighbors of the current node are considered, the current node is marked as visited
(it will never be checked again). If the destination node has been marked visited,
then the procedure has ﬁnished. Otherwise, the unvisited node with the smallest cost
is selected as the new current node and a new iteration begins. Once this procedure
is completed, a reverse iteration allows then reconstructing the optimal path.

The computational complexity of Dijkstra’s algorithm is O(||A||2), where || · ||
denotes the set cardinality, which makes its use particularly attractive. However,
Dijkstra’s algorithm requires that the costs are non-negative to provide an optimal
solution. Therefore, it cannot be generally used for the eco-routing problem with
EVs or HEVs.

A widely used extension of Dijkstra’s algorithm is the A∗ algorithm. This search
method differs from Dijkstra’s essentially because it uses a heuristic function to
evaluate the current node’s neighbors in addition to the “real” cost w. This heuristic
is an estimate of the remaining cost from the neighbor to the target node.

5.1.2.2 Bellman-Ford Algorithm

The well-known Bellman-Ford (BF) algorithm [8] can be used to route on graphs
with negative costs. Similarly to Dijkstra’s algorithm, BF can be considered fast since
their runtime is polynomially bounded. However, while Dijkstra’s method visits only
those nodes that can potentially be on the shortest path, Bellman-Ford operates on
every node in the graph. Hence the computational effort associated with Dijkstra’s
method is dominated by trip properties while the road network size dominates the
computational effort associated with the Bellman-Ford algorithm. In particular, its
computational complexity is O(||A|| · ||A∗||).

For large road networks, such a computational complexity leads to signiﬁcantly
high computation time, which is not suitable for user-oriented applications and real-

5.1 Eco-Routing as a Shortest-Path Problem

119

time use. However, early termination conditions [9] can be introduced in order to
stop the search when an iteration of the algorithm main loop ends without making
any link relaxation. When this happens, it means that the algorithm has already found
all the shortest paths from the origin and the following iterations would not modify
them. This does not improve the worst-case performance of the algorithm, but it
performs extremely well on real road networks [10]. In practice, the Algorithm 2
drastically reduces the computation time.

Algorithm 1 Dijkstra algorithm
Require: G, wk , n O , n D
Ensure: p, J

J ← ∞, pred(n O ) ← 0,

J (n O ) ← 0

p ← ∅,
Q ← A
while Q (cid:12)= ∅ do

Jopt ← ∞
for u ∈ Q do

if J (u) < Jopt then
Jopt ← J (u)
uopt ← u

end if

end for
u ← uopt

Q ← Q \ uopt

if uopt = n D then

return

end if

for v ∈ neighbors(u) do

if J (u) + w(u, v) < J (v) then
J (v) ← J (u) + w(u, v)
pred(v) ← u

end if

end for
end while

u ← n D, p ← ∅
repeat

p ← u ∪ p
u ← pred(u)

until u = n O

(cid:8) Initialization

(cid:8) Find current node

(cid:8) Remove u from Q

(cid:8) Termination condition

(cid:8) Evaluate neighbors

(cid:8) Reverse iteration

120

5 Energy-Efﬁcient Route Navigation (Eco-Routing)

Algorithm 2 Bellman-Ford algorithm
Require: G, wk , n O , n D
Ensure: p, J

p ← ∅,

J ← ∞, pred(n O ) ← 0,

J (n O ) ← 0

for i ∈ {1, . . . , ||A||} do
optimal ← True
for ar c ∈ {1, . . . , ||A∗||} do

u ← tail(ar c)
v ← head(ar c)
if J (v) > J (u) + w(ar c) then
J (v) ← J (u) + w(ar c)
pred(v) ← u
optimal ← False

end if

end for
if optimal then

return

end if

end for

u ← n D, p ← ∅
repeat

p ← u ∪ p
u ← pred(u)

until u = n O

(cid:8) Initialization

(cid:8) Cycle

(cid:8) Reverse iteration

5.1.2.3 Bi-objective Optimization

We consider a particular case of the MOOP deﬁned in Sect. 5.1.1 where only a
resource constraint is present (bi-objective optimization), weighted with λ1 = 1 − λ,
λ2 = 0.3 The goal is to ﬁnd the paths that do not allow to improve one component of
the objective function without deteriorating the other one (non-dominated solutions).
The corresponding set in the objective space {J (p), R(p)} is generally called Pareto
front, see Fig. 5.2. Given the nature of the eco-routing problem, the Pareto front
is intrinsically made of a discrete set of solutions. Spanning the entire front thus
provides the exhaustive list of possible solutions compromising between the selected
cost (energy) and resource consumption (often, travel time). On the one hand, that
allows a decision maker to arbitrarily select a desired trade-off. On the other hand,
the particular non-dominated solution that minimizes the original objective function
J without violating the resource constraint (5.6) can be easily identiﬁed.

The combinatorial nature of such problems makes the search of all Pareto solutions
a very time-consuming task. Thus the practical goal is often to ﬁnd the most diverse
set of solutions, i.e., solutions that are sufﬁciently varied in the true Pareto set. An

3The same approach could be of course applied to situations where the state constraints but not the
resource constraints are relevant, just by replacing R with h.

5.1 Eco-Routing as a Shortest-Path Problem

121

(cid:8) Initialize binary search

(cid:8) Compute S

(cid:8) Recursive function

(cid:5)
λzr
(cid:6)
1

+ (1 − λ)zr
2

| ≥ γd then

(cid:6)

(cid:6)

+ (1 − λ)zl
2

| ≥ γd then

Algorithm 3 Scalarization bi-objective optimization
Require: wk , rk ,n O ,n D
Ensure: S
S ← ∅

(cid:3)

λ ← 0
p1 ← BFalgorithm (G, λwk + (1 − λ)rk , n O , n D)
(cid:4)
S ← S ∪
λ ← 1
p2 ← BFalgorithm (G, λwk + (1 − λ)rk , n O , n D)
(cid:4)
S ← S ∪

J (p2), R(p2)

J (p1), R(p1)

(cid:3)

S ← solveRecursion

J (p2), R(p2), J (p1), R(p1), S, 1, 0

(cid:5)

(cid:6)

function solveRecursion(zl
1

, zl
2

, zr
1

, zr
2

, S, λl , λr )

λ ← (λl + λr )/2
p ← BFalgorithm (G, λwk + (1 − λ)rk , n O , n D)
z1 ← J (p)
z2 ← R(p)
if {z1, z2} /∈ S then
S ← S ∪ {z1, z2}
if |λ − λr | ≥ γλ AND | (λz1 + (1 − λ)z2) −

S ← solveRecursion

z1, z2, zr
1

, zr
2

end if
if |λ − λl | ≥ γλ AND | (λz1 + (1 − λ)z2) −

, S, λ, λr
(cid:5)
λzl
(cid:6)
1

S ← solveRecursion

zl
1

, zl
2

, z1, z2, S, λl , λ

(cid:5)

(cid:5)

end if

else

(cid:3)

(cid:4)

if {z1, z2} =

zl
1
if |λ − λr | ≥ γλ then

, zl
2

then

S ← solveRecursion

end if

else

(cid:5)

(cid:5)

z1, z2, zr
1

, zr
2

, S, λ, λr

(cid:6)

(cid:6)

if |λ − λl | ≥ γλ then

S ← solveRecursion

zl
1

, zl
2

, z1, z2, S, λl , λ

end if

end if

end if
return S
end function

example of efﬁcient dichotomic algorithm for the search of the non-dominated solu-
tions is Aneja’s [11], which was proved to ﬁnd all the non-dominated solutions within
a ﬁnite number of iterations. In [10], a new binary search algorithm (see Algorithm
3) has been proposed to signiﬁcantly reduce the computation time, while computing
a representative sub-set of non-dominated solutions.4 The main difference between

4In theory, the algorithm only ﬁnds a subset of extreme supported non-dominated solutions, that is,
a subset of those non-dominated solutions that lie on vertices of the convex hull of the Pareto front,
see Fig. 5.2.

122

5 Energy-Efﬁcient Route Navigation (Eco-Routing)

R

R f

s

Fig. 5.2 Objective space of a bi-objective optimization problem. Solid line: Pareto front. Dash-dot
line: convex hull. Black circles: extreme supported non-dominated solutions. Gray circle: non-
extreme supported non-dominated solution. Light gray circle: non-supported non-dominated solu-
tion. White circles: dominated solutions. Solution s is the one that minimizes energy consumption
without violating the constraint on resource consumption

J

the two algorithms consists of the space where the solutions are searched: Aneja’s
algorithm recursively explores the objective space selecting the decision weight λ
based on the known non-dominated solutions, the modiﬁed algorithm explores the
decision space performing a recursive binary search of the decision weight. The latter
algorithm presents a standard initialization phase in which the two single-objective
solutions for λ = 0 (minimizing the resource consumption, e.g., the fastest route)
and λ = 1 (the energy-optimal route) are computed. The parameters γλ and γd in
Algorithm 3 are set in such a way to ﬁnd the right trade-off between number of
algorithm iterations and number of solutions found.

5.1.3 Numerical Solutions

This section presents some results obtained using the modiﬁed BF algorithm (Algo-
rithm 2) for a simple route graph. The primal graph is shown in Fig. 5.3a, which
has been obtained from the road network of Fig. 4.2 by further considering sepa-
rate directions of the original database links as different segments. Also indicated
in the ﬁgure are average speeds for each route segment and altitude at each node.
The adjoint graph is shown in Fig. 5.3b, with energy cost and travel time (resource
consumption) indicated at each link. In this illustration, wheel energy is considered
as the energy cost, which is independent from the particular powertrain used. No
recharge facilities are considered. Extra energy and travel time are assigned to links,
according to the method in Sect. 4.4, depending on the value of the parameter ζ
deﬁned in (4.27), that is randomly assigned to the links to represent trafﬁc signals
(ζ = 1 is for free ﬂow, ζ = 0 is for a stop).

Figure 5.4 shows the eco-route and the space of energy-time solutions for a given
sequence of stop signals. Note that, for such a small graph, the distinct routes with
no loops are easily enumerated and the Pareto front explicitly calculated.

5.1 Eco-Routing as a Shortest-Path Problem

123

(a)

25

4

15

16

14

13

11

12

10

8

9

5

1

6 7

2

0

0

0

0

0

0

30

6

1

2

7

6

4

5

3

5

4

10

10

9

12

13

16

20

12

8

9

11

11

7

8

13

14
17
18

15

14

19

21

16

15

(b)

2

1

(c)

i

1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16

¯vi (km/h) 50 45 – 40 50 45 35 50 45 50 50 45 45 35 50 45
(cid:2)i (dam) 50 50 – 40 45 45 40 30 30 80 50 50 45 30 50 50

(d)

k
ζk
τk (s)

1 2 3 4 5 6

7

8 9 10 11 12 13 14 15 16 17 18 19 20 21

1 1 1 1 0 1
1 1 1 1 0 0 0 0 0 1
0
49 34 29 37 27 38 36 37 29 43 44 23 43 33 36 32 49 43 47 38 40
EW,k (Wh) 66 32 39 71 84 30 106 25 86 23 104 −1 6 62 33 73 33 53 39 79 31

1 0 1

0

Fig. 5.3 Simple route graph, with directions on route segments numbered from 1 to 16 and altitude
values on nodes (a). Corresponding adjoint graph with nodes numbered from 1 to 16 and links
numbered from 1 to 21 (b). Values of average speed and length for each road segment/graph node
(c). Values of parameter γ , travel time, and wheel energy for each graph link, for a vehicle with
C0 = 161.7, C2 = 0.409, mv = 1100 kg (d)

124

5 Energy-Efﬁcient Route Navigation (Eco-Routing)

(b)

)
s
(

e
m

i
t

l
e
v
a
r
T

400

300

200

(a)

2

1

6

4

5

10

9

8

7

11

13

12

14

16

15

200

400

Wheel energy (Wh)

Fig. 5.4 Minimal-energy path (eco-route) in red for the graph of Fig. 5.3 and n O = 1, n D = 15
(a). Results for the the seven possible solutions with no loops (1-5-7-13-15, 1-5-8-11-15, 1-4-
10-11-15, 1-4-10-9-7-13-15, 1-5-7-13-14-10-11-15, 1-5-8-11-14-10-9-7-13-15, 1-5-7-13-12-9-6-
4-10-11-15), in terms of wheel energy and travel time; Pareto set (non-dominated solutions) in blue
(b)

5.2 Energy-Optimal Driving Range Estimation

Vehicles’ owners often wonder how far they can drive with the on-board stored
energy. Such a question is particularly relevant for electric vehicles, where the limited
amount of energy stored in the battery is often perceived as a strong limitation to the
penetration of this powertrain technology (“range anxiety”).

Driving range is often estimated in terms of distance making assumptions on the
average energy consumption per kilometer. Such estimations are made either before
the trip based on worst-case average energy consumption assumptions, or during the
trip based on measured consumption [12]. Because the range output to the user is
typically conservative to avoid running out of charge, imprecise range estimates may
further increase range anxiety.

In order to be insightful and effective, a driving range estimation strategy should
be accurate by speciﬁcally considering the characteristics of the vehicle and the
road transportation network. Also, when predicting driving range, it is of paramount
importance to clearly state the route types allowing the driver to reach the locations
within the driving range. For instance, routes favoring lower travel time could be
more energy-expensive than other types of routes, therefore the route choice directly
affects the size of the driving range. This aspect, although very important, is often
neglected [13]. In only few works [14, 15], the authors realize the importance of
choosing eco-routes to determine the driving range, however the simpliﬁed energy
consumption and road network model do not allow for a satisfactory precision in
urban and suburban environments.

In the next sections, it will be shown how the eco-routing methods of Sect. 5.1
can be used to provide an energy-optimal driving range, by predicting the optimal
energy consumption to reach all the possible destinations within the driving range.
This allows to relax the typical unrealistic assumptions of a worst-case average energy

5.2 Energy-Optimal Driving Range Estimation

125

consumption and to give a clearer insight into the energy characteristics of the road
network [16].

5.2.1 Problem Formulation

The energy-optimal driving range to ﬁnd may be deﬁned as
(cid:3)

range(n O ) (cid:2)

(cid:4) ⊆ A : ∀n ∈ (cid:4), ET (n|n O ) ≤ E ∗

T

(cid:4)

,

(5.18)

where n O is the origin node, A is the set of nodes in the graph, (cid:4) is the subset of
nodes within the energy-optimal driving range, ET (n|n O ) is the predicted energy
consumption from the origin node to node n, and E ∗
T is a desired (tank) energy
consumption. Typically, for EVs, this quantity is the electric energy stored in the
battery at the origin node.

5.2.2 Solution Method

The single-source shortest-path algorithms used for eco-routing, typically Dijkstra’s
or Bellman-Ford algorithms, have the property of returning within the same execution
not only the shortest path from origin to destination, denoted in Sect. 5.1 with p, but
also the optimal costs to reach all the nodes in the graph, denoted, e.g., in Algorithms 1
and 2, with J . Such a characteristic may be exploited to identify all the destinations
reachable with a certain desired energy consumption.

In practice, it sufﬁces to replace ET (n|n O ) in (5.18) with J (n), the minimal
cost function to reach node n. Note that the driving range obtained by means of a
single-source SP algorithm is optimal in the sense that each node within the range is
reachable by following the shortest path from the origin to that node. In other words,
since the routing graph is weighted with energy costs (for a choice of λ = 1), the
nodes in the energy-optimal driving range are reachable via eco-routes.

This approach enables a high level of precision in the driving range calculation.
As opposed to the techniques providing only the polygonal curve delimiting the
driving range, this strategy allows to analyze the energy consumption characteristics
of the region within the driving range and, more importantly, to determine whether
such a region is simply connected. If the properties of simple connectedness do not
hold, then some nodes within the driving range are unreachable even by means of an
eco-route.

The strategy may be easily extended to compute a round-trip driving range, which
may be of interest especially in the case of electric vehicles. The round-trip driving
range can provide an insight into the reachable destinations that also allow to return
to the departure point within a desired energy consumption threshold. In order to do
so, the single-destination shortest path problem is simply solved on the same routing

126

5 Energy-Efﬁcient Route Navigation (Eco-Routing)

2

1

6

4

5

10

9

8

7

11

13

12

14

175

16

15

100

120

150

Fig. 5.5 Energy range evaluated for the problem of Fig. 5.3 with n O = 1. Gray dashed lines are
the contour lines at the wheel energy consumption indicated (Wh)

graph with reversed links orientation. The Bellman-Ford algorithm is run on such a
graph using again the origin (i.e. the destination of the round-trip itinerary) as the
starting node.

5.2.3 Numerical Solutions

An example result of energy-optimal driving range estimation is presented in Fig. 5.5.
The graph considered is the simple road network of Fig. 5.3. Taking n O = 1 as the
origin node, the ﬁgure shows some contour lines of equal energy consumption.

More extensive experiments [16] have demonstrated that the methods of this
section allow to correctly capture important characteristics of the energy driving
range for EVs and HEVs, such that:
• the driving range may be asymmetric about the origin;
• the driving range region may be not simply connected;
• auxiliary power demand may have a signiﬁcant impact on the driving range;
• the round-trip driving range may be able to restore symmetry about the origin.

A detailed case study is presented in Sect. 9.5.

5.3 Practical Implementation

In principle, the eco-routing algorithm is run at the demand of the user and should
start with an update of the energy weights and resource consumptions (wk and rk
in this chapter) for each link of the road network as a function of the current trafﬁc

5.3 Practical Implementation

127

conditions. In other terms, wk and rk should be evaluated from the speed data vk in
order to implement a procedure like the one introduced in Sect. 4.4. This calculation
could be even projected for the future time when the host vehicle will cross that
particular link. However, this complete update is seldom practical, due to the large
computing time required.

A more practical implementation of an eco-routing system aimed at reducing the
computing time, and thus the service time for the user, distributes the calculations
between an ofﬂine and an online layer, as illustrated by the ﬂowchart in Fig. 5.6.

A remote server (cloud-computing) stores the road network of the preferred region,
with N sets of different energy weights and resource consumptions for each link.
These sets have been evaluated ofﬂine, based on historical trafﬁc information. Typ-
ically, they correspond to different daytimes and weekdays to represent the most
diverse possible set of trafﬁc conditions.

Through an HMI (see Sect. 8.31), the user enters either an address or coordinates
for its destination. In the former case, street addresses are converted by most GIS
into geographic coordinates, in a process called geocoding. As for the origin of the
trip, it is provided by a GPS signal.

These pieces of information are sent to the remote server where calculations are
performed. At ﬁrst, origin and destination locations must be converted into useful
nodes or links in the road graph in a process called map-matching. For example, the
point-to-point method matches a given location to the nearest node in A. Conversely,

Fig. 5.6 Conceptual sketch of an eco-routing system

128

5 Energy-Efﬁcient Route Navigation (Eco-Routing)

the point-to-curve method matches a given location to the nearest point on the nearest
road in A∗. When entire trajectories, i.e., sequences of locations, are to be matched,
curve-to-curve methods try to match them to the most similar route in the road
network.

Based on current time of request (tO in Fig. 5.6), the most suitable among the
N weighted graphs stored is selected. A routing algorithm is then executed on this
graph to output the K best routes according to the objective function implemented.
For single-objective routing problems, the K best routes can be evaluated using
Yen’s algorithm, a variant of the Belmann-Ford algorithm. For multi-objective cases,
the spanning of the Pareto front described in Sect. 5.1.2.3 already provides several
alternative routes.

The actual trafﬁc conditions are provided by an external web-service and trans-
formed in weights and resource consumptions for the selected routes only using, for
example, the model of Sect. 4.4.

The K best routes are then evaluated using these updated weights. In other terms,
the objective function is evaluated for each of these routes and the constraints on the
state are veriﬁed to discard possible unfeasible routes. Finally, the best (“eco”) route
is found as the optimal sequence of links in A∗. To transform this sequence into a
sequence of geographical coordinates suitable to be displayed by the HMI, a new
map-matching stage is required.
Energy-Efﬁcient Speed Proﬁles
(Eco-Driving)

The adoption of an energy-efﬁcient driving style is the goal of “eco-driving” tech-
niques. Drivers that follow these techniques (often called “hypermilers”) are obvi-
ously motivated by the fuel or energy savings that can be achieved. Drivers can be
assisted by speciﬁc ADAS tools that calculate energy-efﬁcient speed proﬁles. With
the advent of CAVs, eco-driving can be enforced more effortlessly than with human
drivers.

General techniques, often adopted without any speciﬁc tool to support the driver,
are the subject of Sect. 6.1. In Sect. 6.2 it will be shown that eco-driving can be
formulated as an optimal control problem, with an energy-based objective function
that is minimized. Depending on which energy amount is minimized, several distinct
eco-driving strategies can be obtained, some of which are described in Sect. 6.3
(powertrain energy), Sect. 6.4 (fuel energy in ICEVs), Sect. 6.5 (battery energy in
EVs), and Sect. 6.6 (equivalent fuel energy in HEVs).

6.1 Eco-Driving Techniques

Often listed among “eco-driving” techniques are general common-sense practices
such as mechanically maintaining the vehicle (tire inﬂation pressure, wheel align-
ment, engine lubrication, etc.), reducing transported mass, removing unnecessary
equipment that would increase aerodynamic drag, and reducing ancillary loads (air
conditioning, heating). However, only proper eco-driving techniques that act on the
driving style are considered here, that is, those acting on vehicle’s speed and accel-
eration.

Eco-driving can be applied in several driving scenarios, that are introduced in
Sect. 6.1.1. Most current approaches to eco-driving are based on heuristic rules of
thumb or good practices that are associated with an energy-efﬁcient drive. These
practices are reviewed in Sect. 6.1.2.
Energy-Efﬁcient Speed Proﬁles (Eco-Driving)

6.1.1 Eco-Driving Scenarios

Several driving scenarios can be the object of eco-driving. A non-exhaustive list
includes:
1. Accelerating to a cruise speed: from a given speed vi, reach a target speed vf > vi,
in a free time tf and covering a free distance sf , minimizing the energy spent per
unit distance.

2. Decelerating to a stop: from a given speed vi, decelerate to vf = 0 while covering

a distance sf in a prescribed or free time tf .

3. Driving between stops: cover a distance sf in a time tf starting from vi = 0 and

terminating at vf = 0.

4. “Eco-approaching” a signalized intersection: cover a distance sf

in a time tf
bounded within the “green light” window, starting from a given speed vi and
terminating at a free passage speed vf .

5. “Green waving”: the same as scenario 4 but repeated for multiple trafﬁc lights in

6. Urban trip: a combination of the scenarios 1–5 above.
7. Highway trip: cover a (large) distance sf without stops, by minimizing a given
compromise between energy and trip time, in the presence of speed limits, altitude
variations, and lane changes (or merging).

8. Cruising: minimize the energy per distance within an admissible speed band, and

a sequence.

with vf = vi.

9. Car following: same as scenarios 6–8 with in addition a safe gap to be maintained

with respect to a leading vehicle.

We will make reference to these scenarios later in the book and in particular in
Chap. 7.

6.1.2 Eco-Driving Rules

Perhaps the simplest “eco-driving rule” concerns keeping a low and constant speed.
Intuitively, lower speeds reduce the aerodynamic and rolling resistance losses
described in Chap. 2, while substantially constant speeds are aimed at suppress-
ing the energy spent for accelerating that is usually impossible to completely recover
during decelerations. The wheel energy per distance at a constant cruising speed is
easily obtained from (2.11), from where it is apparent that, the lower the speed, the
lower this expenditure. Of course, lowering the speed also generally increases the
time that is necessary to cover a given distance, therefore a compromise must be
made between energy consumption and trip time. If, for example, the trip time is
converted into an equivalent energy expenditure through a tunable coefﬁcient β,1 the

1This approach leads to a bi-objective optimization by scalarization similar to the one described in
Chap. 5.

6.1 Eco-Driving Techniques

133

optimal cruising speed could be deﬁned as the value that minimizes the equivalent
wheel energy per distance,

vcr,opt = arg min

C0 + C1v + C2v2 +

(6.1)

(cid:2)

v

(cid:3)

β

v

,

that is, a generally positive speed level. For instance, using the numerical values
C0 = 162, C1 = 0, C2 = 0.410, the optimal cruising speed would be (β/2C2)1/3,
that is, 38 km/h for β = 103, 66 km/h for β = 5 · 103, and 83 km/h for β = 104.

Seen from another perspective, the optimal cruising speed can be deﬁned as the
value that minimizes the “tank” energy expenditure, rather than the wheel energy
per distance.2 This concept is particularly used for ICE vehicles, where the energy
consumption further depends on the transmission ratio, that is, the gear engaged.
Using the models of Sect. 2.2.2, (6.1) is modiﬁed as
(cid:3)

(cid:4)(cid:2)

(vcr,opt, γe,cr,opt) = arg min

(cid:2)

(cid:2)

(cid:2)

(cid:3)

+

+ ke,2C0
ηt
+ ke,3C0γe
rwηt
+ ke,4γ 2
e C0
ηt
r2
w
(cid:3)

ke,0γe
rw
+ ke,2C1
ηt
+ ke,3γeC1
rwηt
+ ke,4γ 2
e C1
ηt
r2
w

v3 +

(cid:2)

v,γe
ke,1γ 2
e
r2
w
ke,2C2
ηt
ke,3γeC2
rwηt

+

+

+

v+
(cid:3)

v2+

ke,4γ 2
e C2
ηt
r2
w

(cid:3)

v4 +

(cid:5)

.

β

v

(6.2)

For instance, using the numerical values above and ke,1 = 0.0396, ke,2 = 2.55, ke,3 =
−0.0016, ke,4 = 2.93 · 10−8, rw = 0.32, ηt = 1, γe = 3.5, the optimal cruising speed
is generally lower than the previous case: 27 km/h for β = 103, 47 km/h for β =
5 · 103, 61 km/h for β = 104, and 105 km/h for β = 5 · 104, see Fig. 6.1. When
β = 0, also in this case the optimal cruising speed would be the lowest obtained with
the given transmission ratio.

Equation (6.2) also shows that the steady-state engine consumption is minimized
by lowering the transmission ratio as much as possible, that is, using the highest gear
available. Overall, since in ICEVs each gear can be used only within a certain vehicle
speed range, such that the resulting engine speed lays in its admissible window,
practically the best cruising strategy is the lower speed that can be reached using the
highest gear. Note that this gear shifting strategy would certainly be optimal from a
purely energetic viewpoint, but it is generally not desirable for drivability, because it
leaves little torque reserve for, e.g., overtaking or emergency maneuvers. In the rest
of this book, we will generally not treat the optimization of gear shifting as a part

2Some sources tend to deﬁne the best cruising speed as the vehicle speed that maximizes the
powertrain efﬁciency at a given transmission ratio. For an ICE powertrain, this value corresponds to
the engine speed at which the engine efﬁciency has its maximum. It is important to note, however,
that a higher powertrain efﬁciency does not imply an overall lower energy consumption.

134

6 Energy-Efﬁcient Speed Proﬁles (Eco-Driving)

Fig. 6.1 Energy per unit
distance (6.2) as a function
of speed, for a given
transmission ratio (γe = 3.5)
and four values of the
parameter β

4

10.

]

N

[

e
c
n
a
t
s
i
D

t
i
n
U

r
e
p
y
g
r
e
n
E

1

0.8

0.6

0.4

0.2

0

0

0
1·103
1·104
5·104

100

200

Speed [km/h]

of eco-driving, unless otherwise speciﬁed, and shall consider the gear shift law as
imposed by drivablity considerations.

The analysis above is based on a constant cruising speed. Actually, it will be
shown in the next sections that, with ICE powertrains, periodically operating the
engine at high load and then shutting it down, for a constant average vehicle speed,
yields a lower energy consumption than keeping a constant cruising speed. These
considerations form the theoretical basis of the “pulse-and-glide” (P&G) strategy
that is often advised as an eco-driving mechanism.

The constant-speed strategy (or the P&G) can be only applied to a limited number
of situations, like the “cruising” or the “highway trip” scenarios listed in Sect. 6.1.1.
When the initial and ﬁnal (target) velocity are different, the velocity cannot be con-
stant, and at least one acceleration and/or deceleration maneuver has to be per-
formed. Generic eco-driving rules often advise the driver to accelerate or decelerate
as “smoothly” as possible. However, the methods presented in the next sections will
show that the best acceleration proﬁles often use the powertrain capabilities at their
maximum, in order to reach the cruising speed as quickly as possible.

In contrast, decelerating requires either application of the friction brakes, i.e.,
energy dissipation as heat, or reliance on vehicle/powertrain braking. Even in hybrid
and electric vehicles with regenerative (powertrain) braking, a part of the available
energy is lost as heat. Therefore, it is best to avoid these situations when possible.
This means that when deciding to slow down or stop on a level road, it is often more
energy efﬁcient to glide with the powertrain providing no force, and using rolling
resistance and aerodynamic drag to slow the vehicle down. However, the resulting
operation, called coasting, may not be always safe or desirable. Therefore, coasting
is often replaced by powertrain braking or overrun. In ICE vehicles, that corresponds
to using the “engine brake”, with the engine connected to the wheels and the fuel
injection cut off.

Also, when descending down a steep road and in a hypothetical scenario when
there are no upper bounds on velocity, it is more energy efﬁcient to coast down the hill
allowing the velocity to increase toward the equilibrium imposed by rolling resistance
and aerodynamic drag. Unfortunately this is very unsafe and often impractical due
to road speed limits and the bounds imposed by preceding vehicles.

6.1 Eco-Driving Techniques

135

Overall, the implementation of coasting strategies needs the anticipation of immi-
nent slow downs or descents, so that the vehicle can start gliding at the right time,
together with a precise knowledge of the speed limitations that could narrow the
admissible speed band.

More generally, effective eco-driving strategies cannot be solely based on current
driving parameters, but have to be predictive, that is, based on estimations of future
external conditions, like anticipation of trafﬁc and route characteristics. These pieces
of information can be obtained through the knowledge of the road proﬁle and the
monitoring of surrounding vehicles and other road occupants. In this respect, vehicle
connectivity is a major lever to enable predictive eco-driving.

While the heuristic rules illustrated above are generally intuitive and relatively
easy to implement, the ultimate potential of eco-driving requires a more rigorous
framework. That can be achieved if eco-driving is regarded as an optimal control
problem where the drive commands are sought that minimize the energy consumption
for a given trip. This approach is the subject of Sect. 6.2.

6.1.3 Eco-Driving Systems

Both the rules introduced in Sect. 6.1.2 and the optimal driving proﬁles that are
to be discussed starting from Sect. 6.2 could be in principle implemented in an
automatic way. While this possibility is actually envisaged for autonomous vehicles
(see Chap. 3), currently eco-driving must be realized by vehicles with human drivers.
A ﬁrst level of support to the driver is provided by eco-driving training courses.
However, it is common opinion, supported by assessment campaigns, that the good
practices acquired with training courses are quickly forgotten if drivers have no online
tool that reminds them of those practices [1].

Therefore, software tools and systems that help the driver in performing eco-
driving have emerged in the last decade. Most of these systems provide some kind
of advice to the driver, solely based on current driving information that is typically
extracted from vehicle’s network data. The provided suggestions may concern, for
instance, gear shifting as a function of the current speed, or a judgment on acceler-
ation/deceleration intensity [2]. Even more rudimentary concepts, essentially con-
sisting of alerts based on the acceleration sensor of smartphones, are typically found
among mobile application software labeled “eco-drive”.

A different class of tools advises the driver about the energy-optimal speed proﬁles
to follow, using the formulation and the methods described in next sections. These
tools can either provide a comparison between the actually performed drive and the
optimal one (eco-coaching), or predictively compute the optimal drive to follow, as
will be described in a more detail in Chap. 8.

136

6 Energy-Efﬁcient Speed Proﬁles (Eco-Driving)

6.2 Eco-Driving as an Optimal Control Problem

Although energy-optimal driving can be applied to several distinct scenarios, these
situations can be treated in a similar way by deﬁning an eco-drive optimal control
problem (ED-OCP). This problem is formulated in Sect. 6.2.1, while Sect. 6.2.2
presents two of the main techniques to solve such an OCP.

6.2.1 Problem Formulation

A generic optimal control problem where (continuous) time is the independent vari-
able can be stated in the following way: for each time t ∈ [0, tf ] in the optimization
horizon tf , ﬁnd the control vector u(t) ⊂ Rm such as to minimize the performance
index or objective function

J = (cid:3)(x(tf ), tf ) +

L(x(t), u(t), t)dt ,

(6.3)

(cid:6)

tf

0

where L is the running cost and (cid:3) is the terminal cost, subject to (i) ﬁrst-order
dynamic constraints on the state vector x(t) ⊂ Rn,

˙x(t) = f (x(t), u(t), t), x(0) = xi ,

(ii) algebraic constraints on the control and state vectors (pure) and on combinations
of them (mixed),3

gi(x(t), u(t), t) ≤ 0,

i = 1, . . . , (cid:4) ,

(iii) terminal (equality) constraints,

h(x(tf )) = 0 ,

and (iv) interior-point constraints

x(tB,j) = xB,j,

j = 1, . . . , nB .

Note that the function (cid:3) can penalize both ﬁnal states and time, if the latter is
not speciﬁed but free. When applied to ﬁnal states, it can be regarded as a “soft”
constraint, as opposed to the function h that strictly forces the ﬁnal state to a given
point of the state space. In some cases, only q of the state variables are ﬁxed at the
terminal time, while the other n − q are generally associated to a terminal cost.

3Sometimes in the rest of this book we shall use a different notation for mixed control constraints,
u(t) ∈ U (x(t), t) ⊂ Rm, and reserve formulation (6.5) for pure state constraints.

(6.4)

(6.5)

(6.6)

(6.7)

6.2 Eco-Driving as an Optimal Control Problem

137

How the quantities tf , L, (cid:3), x, u, f , g, and h are particularized for our ED-OCP

will be discussed in the following sections.

6.2.1.1 Optimization Horizon

The main objective of the ED-OCP is to minimize fuel or energy consumption over
a certain time and distance horizon. Using the same nomenclature of Chap. 3 and 5,
we shall refer to this horizon as trip. A trip is thus deﬁned by its duration or time
horizon, tf , and distance or spatial horizon sf .

Often, both horizons are prescribed, that is, it is expected that the distance sf will
be covered exactly in a time tf . In such cases, while the enforcement of tf is implicit
in formulation (6.3) since time is the independent variable, the enforcement of sf
plays the role of a terminal state constraint, see Sect. 6.2.1.6.

However, in some scenarios the trip duration is not to be speciﬁed but consid-
ered as a free parameter. That ﬁnal time, to which the minimum objective function
corresponds, is the solution of the problem.4

6.2.1.2 Objective Function

Given the energy-oriented nature of the ED-OCP, a natural choice for the objective
function is the energy consumption over the horizon chosen. That leads to choosing
(cid:3) = 0 and the integral in (6.3) representing either the powertrain energy Ep (2.13)
or the tank energy ET . In the former case, the running cost L is represented by the
power Fpv introduced in Chap. 2. In the latter case, the running cost coincides with
Pf (the fuel power) for ICEVs and HEVs, or Pb (the battery power) for EVs.

In addition to energy, trip time may be the subject of minimization for a given trip
distance, or constrained in an admissible window, as stated above. These require-
ments lead to a multi-objective optimization problem, which can be treated with the
scalarization approach (see Chap. 5) by adjoining the trip duration to the energy
objective function as a terminal cost,

(cid:3)(x, tf ) = · · · + βtf ,

(6.8)

where β is a tuning parameter. Changing β clearly changes the compromise between
energy expenditure and trip time.

In a similar way, additional terms might be appended either to the integral part of
the objective function or to the terminal cost, to penalize, e.g., deviations from a ref-
erence average speed, vehicle acceleration, number of gear shifts or other drivability
measures, as well as battery aging.

4That would be determined using the “transversality condition” or through an iterative procedure.
To avoid ambiguity, we shall consider in the rest of the book, while not otherwise speciﬁed, ED-OCP
with prescribed ﬁnal time.

138

6 Energy-Efﬁcient Speed Proﬁles (Eco-Driving)

6.2.1.3 Controlled Variables

From the discussion of the previous sections, it should be clear that, if the wheel
energy is chosen as the objective function, the control vector u(t) must comprise of
the forces Fp and Fb.

In the case that the objective function is the tank energy, the control vector
may have additional components. In ICEVs the fuel consumption is unambiguously
deﬁned by the net wheel force and the transmission ratio γe. However, the latter quan-
tity is usually not the object of energy-based optimization, but rather determined by
drivability considerations (e.g., torque reserve) implemented in a gearshift map of
the type (2.17). Clutch control is another possible discrete control but it can be con-
veniently lumped either with the gear control input or with the engine control input.
As a consequence, we shall choose

in the rest of this book. The same considerations apply to EVs and HPVs, leading to
the choices

u(ICEV ) = {Fp, Fb} ,

u(EV ) = {Fp, Fb} .

u(HPV ) = {Fc, Fb} ,

(6.9)

(6.10)

(6.11)

and

respectively. Note that other variables possibly chosen as control inputs, such as
acceleration, fuel quantity for ICEVs, or motor voltage for EVs, all map to powertrain
force in single-source vehicles.

Conversely, in HEVs the internal degrees of freedoms that have been described
in Chap. 2 must be taken into account. In parallel HEVs, the powertrain force is
the sum of two contributions provided by the engine, Fp,e = uFp, and the motor,
Fp,m = (1 − u)Fp, where the torque split factor u is the internal degree of freedom
introduced in (2.47). Consequently, the control vector for the ED-OCP is

u(PHEV ) = {Fp,e, Fp,m, Fb} .

(6.12)

In series HEVs, u is the power split ratio between the battery and the APU, see (2.49),
while the second internal degree of freedom, e.g., the APU speed, is resolved with
the optimal operating line (OOL) approach illustrated in Fig. 2.16. Consequently,
the pair u and Fp as control variables for the ED-OCP can be equivalently replaced
by the two power levels, such that

u(SHEV ) = {Pg, Pb, Fb} .

(6.13)

6.2 Eco-Driving as an Optimal Control Problem

139

6.2.1.4 State Dynamics

In principle there are many dynamics to consider when representing a vehicle system,
and thus many state variables. However, following the quasistatic modeling approach
of Chap. 2, the cardinality of the state vector shall be generally limited to two or three.
In single-source vehicles, such as ICEVs and EVs, the state vector is deﬁned as

x(ICE,EV ) = {s, v} .

(6.14)

The speed dynamics is described by (2.1), that is rewritten here as

˙v(t) =

Fp(t)
m

− C2
2m

v(t)2 − C1
m

v(t) − C0
m

− g sin(α(s(t))) − Fb(t)
m

,

v(0) = vi .
(6.15)

The position dynamics is simply given by (6.16),

(6.16)

(6.17)

(6.18)

(6.19)

In HEVs, an additional state variable is the battery state of charge,

˙s(t) = v(t),

s(0) = 0 .

x(HEV ) = {s, v, ξb} ,

whose dynamics is given by (2.41),

˙ξb(t) = − Pb(t)
Vb0Qb

, ξb(0) = ξ0 .

In human-powered vehicles, the maximum cyclist force varies dynamically, as

described in Sect. 2.5, and thus must be represented by a state variable,

x(HPV ) = {s, v, Fc,max} ,

whose dynamics is given by (2.65) with Fc,max(0) = ¯Fc,max,0.

6.2.1.5 Control and State Constraints

Both control and state variables are subject to inequality constraints of the type (6.5).
Control inputs Fp,e, Fp,m, Fc, Pg, Pb deﬁned in Sect. 6.2.1.3 are all bounded by the
physical limits described in Chap. 2. For engines, motors, and human cyclists, these
limits typically vary with the vehicle speed, whence the cross dependency on the
state vector of the function h(·). In addition to these limits, drivability requirements
might be applied to further constrain the powertrain force. The brake control input
Fb, deﬁned by (6.15) as a positive quantity, is generally bounded between zero and
the maximal brake force that can be exerted by the braking system, Fb,max. When the

140

6 Energy-Efﬁcient Speed Proﬁles (Eco-Driving)

gear also is to be controlled, γmax(t) and γmin(t) are actually functions of the gear
engaged, thus requiring that the gear itself be included as a state variable.

State variables also are subject to inequality constraints. The vehicle speed is

generally bounded in a position-dependent range

vmin(t, s(t)) ≤ v(t) ≤ vmax(t, s(t)) .

(6.20)

The quantity vmax is the most restrictive of several possible limitations, including
the legal speed limit at position s, the average trafﬁc-induced speed, the safe speed
at turning vturn deﬁned in Chap. 4, and any subjective maximal speed allowed. A
variable vmax(t, s(t)) can be also used to describe the constraints on speed imposed
by infrastructure breakpoints such as trafﬁc lights, stops, or intersections. As for the
variable quantity vmin, it can be used to represent the minimal speed subjectively
allowed or such that the trafﬁc ﬂow is not substantially disrupted.
A different class of state constraints concerns vehicle position,

smin(t) ≤ s(t) ≤ smax(t) .

(6.21)

where smax might describe the presence of a leading vehicle that cannot be overtaken
and smin that of a trailing vehicle, whose positions obviously change with time.

When relevant, the state variable ξb(t) is also conﬁned in an admissible win-
dow [ξb,min, ξb,max], whose width depends on the battery technology as described in
Chap. 2.

6.2.1.6 Terminal Constraints

Terminal constraints concern the values of state variables at the end of the trip. In
some scenarios, terminal position can be ﬁxed with certainty, as it corresponds to
the distance to the ﬁnal destination or to a peculiar intermediate location. However,
in other cases sf is not speciﬁed (is free). In such scenarios, the ED-OCP can be
solved by applying the transversality conditions or with an iterative procedure over
sf aimed at ﬁnding the best value that minimizes the objective function.

Similarly, terminal speed can be either free or constrained, more or less “rigidly”,

to a prescribed value vf .

When an HEV is considered, an additional constraint concerns the ﬁnal SoC.
In charge-sustaining hybrids that cannot be recharged from external sources, the
natural choice is to prescribe that the ﬁnal SoC matches the initial value, ξb(tf ) =
ξi. However, in plug-in hybrids, the terminal constraint rather targets a minimal
value, ξb(tf ) = ξb,min, provided that after the trip the battery can be more efﬁciently
recharged from the grid. This requirement is thus equivalent to the constraint (2.52)
imposed on optimal energy management.

6.2 Eco-Driving as an Optimal Control Problem

141

6.2.1.7

Interior Constraints

Equality constraints on both speed and position can be imposed point-wise along
the trip, by trafﬁc lights, stops, intersections, trafﬁc queues, or other events that are
typical of urban displacement scenarios. Formally these constraints read

s(tB,j) = sB,j,

v(tB,j) = vB,j ,

(6.22)

where tB,j and sB,j, j = 1, . . . , nB are the time instants and positions at which such
constraints are imposed. All these event identiﬁers are called breakpoints in the rest
of this book (Fig. 6.2).

Interior constraints can be enforced directly or by appropriately setting the state
boundaries described in Sect. 6.2.1.5, for instance, vmin(tb,j, sb,j) = vmax(tb,j, sb,j)
= vb,j.

When speed and position are the sole state variables (i.e., excluding the HEV
case) and both are ﬁxed at each breakpoint, an alternative approach to enforcing
interior constraints consists of separating the trip into nB + 1 correlated sub-trips
or segments. The original ED-OCP is then equivalent to nB + 1 independent OCPs,
each of which is characterized by its own temporal and spatial horizon, as well as by
its own initial and terminal conditions

tf ,j = tB,j − tB,j−1,

sf ,j = sB,j − sB,j−1,

vf ,j = vi,j+1 = vB,j ,

(6.23)

with the boundary conditions tB,0 = sB,0 = 0, vi,1 = vi, and tf ,nB+1 = tf , sf ,nB+1 = sf ,
vf ,nB+1 = vf . The energy consumption of the whole trip is then the sum of the energy
consumption of each segment.

Note that segments can be also used to separate the entire trip by (i) changes in
road characteristics, such as legal speed limits, slope, etc., or by (ii) driver or trafﬁc
induced events, such as planned stops, intersections, trafﬁc lights, or trafﬁc queues.
In the following, we shall consider the ED-OCP for a single segment between two
breakpoints, unless when otherwise stated, e.g., for HEVs.

Fig. 6.2 Illustration of
interior constraints and
deﬁnition of segments or
sub-trips

Speed

vB,1

tB,0

tB,1

tB,2

tB,3

Time

tB,4

Segment 1
tf,1

Segment 2
tf,2

Segment 4
tf,4

142

6 Energy-Efﬁcient Speed Proﬁles (Eco-Driving)

6.2.2 Solution Methods

Problems of the type (6.3)–(6.6) can be solved using various numerical techniques.
Among them, dynamic programming (DP) and Pontryagin’s minimum principle
(PMP) are among the most used. In this section, these two solution methods are
brieﬂy introduced.

6.2.2.1 Pontryagin’s Minimum Principle

This method is based on the deﬁnition of the Hamiltonian function that is formed as

H (x, u, t) = L(x, u, t) + λf (x, u, t) ,

(6.24)

where λ ⊂ Rn is a vector of costates, having the same dimension n as the state vector.
If state constraints are not present, the necessary conditions for the optimality of

a control trajectory u(t), t ∈ [0, tf ] include: the state dynamics (6.4)

˙x(t) =

(x(t), u(t), t)

∂H
∂λ

with the boundary conditions

x(0) = xi,

xj(tf ) = xj,f ,

j = 1, . . . , q ,

(6.26)

the costate dynamics (Euler-Lagrange equations)

˙λ(t) = −

∂H
∂x

with the transversality conditions
⎧
⎨

λj(tf ) =

⎩

j = 1, . . . , q

,

(x)

j = q + 1, . . . , n

free
∂(cid:3)
∂xj

and the Hamiltonian minimization condition of the minimum principle

u(t) = arg min
u∈U (x,t)

H (x(t), u, t) .

(6.25)

(6.27)

(6.28)

(6.29)

6.2 Eco-Driving as an Optimal Control Problem

143

This 2n-dimensional system of coupled differential equations forms a two-point
boundary value problem (TPBVP), since n boundary conditions are given at the
initial time and the other n values at the ﬁnal time. Of these latter values, q concern
state variables and the remaining n − q concern costate variables. This circumstance
makes the TPBVP often difﬁcult to solve.

Moreover, handling constraints (6.5) with PMP is not trivial. When the prob-
lem presents pure state inequality constraints of the form g(x(t), t) ≤ 0, the indirect
adjoining method [3, 4] can be used. Consider the case with (cid:4) = 1 (just one such con-
straint). If g(x(t), t) is of the pth order, that is, it is differentiated p times with respect
to time until the control variable u explicitly appears, then the term g(p)(x, u, t) is
adjoined to the Hamiltonian with a multiplier η, to form the Lagrangian

L(x(t), u(t), t) (cid:2) H (x(t), u(t), t) + ηg(p)(x(t), u(t), t) .

(6.30)

In this case the necessary conditions for a control trajectory to be optimal are still
(6.25)–(6.29) with the Lagrangian replacing the Hamiltonian, together with the jump
conditions5 at times at which state constraints become active (entry or contact times),

λ(τ −) = λ(τ +) +

(x(τ ), τ ) ,

H (τ −) = H (τ +) −

(x(τ ), τ ) ,

p−1(cid:10)

j=0
p−1(cid:10)

j=0

πj

∂g(j)
∂x

πj

∂g(j)
∂t

(6.31)

(6.32)

as well as the complementary slackness conditions

η(t)g(x(t), t) = 0,

(−1)jη(j)(t) ≥ 0,

j = 0, . . . , p ,

(6.33)

and

πj ≥ 0, πjg(x(τ ), τ ) = 0,

j = 0, . . . , p − 1 .

(6.34)

For the special yet common case of ﬁrst-order constraints (p = 1), (6.33) reduces
to η(t)g(x(t), t) = 0, η(t) ≥ 0, ˙η(t) ≤ 0 with η(t) as an additional unknown to be
determined,6 while (6.34) holds for the single unknown multiplier π0. In summary,
inequality constraints introduce additional unknowns that have to be determined as
well, and additional conditions.

5These conditions derive from imposing that [g(0)(τ ), . . . , g(p−1)(τ )] = 0 and treating these tan-
gency conditions as interior point constraints that are adjoined to the Lagrangian through the addi-
tional multipliers π’s.
6These conditions mean that when the constraint is not active (g(x(t), t) < 0), then η(t) is set to
zero. When the constraint is active (g(x(t), t) = 0), η(t) must be positive [5] but unknown. The
condition g(·) = 0 provides the additional equation necessary in this case to determine the newly
added unknown η.

144

6 Energy-Efﬁcient Speed Proﬁles (Eco-Driving)

Consequently, only rarely the TPBVP is solvable in closed form; generally, it is
necessary to proceed iteratively. Most commonly used methods include collocation
methods, such as the algorithm used in Matlab’s bvp4c function, and (multiple)
shooting methods. The latter approach works by iterating over the initial costates
and checking the resulting values of the speciﬁed states at the ﬁnal time. An example
of PMP algorithm where the TPBVP is solved with shooting is shown in Algorithm 4.

Algorithm 4 PontryaginMinimumPrinciple
Require: λi
Ensure: uopt(1, . . . , N ), xopt(0, . . . , N )

repeat

λopt(0) = λi ∈ (cid:7)
xopt(0) = xi

for k = 1, . . . , N do

Hopt ← ∞
for u ∈ Uk (xopt(k − 1)) do

˜H = Lk (xopt(k − 1), u) + λ(k − 1) · fk (xopt(k − 1), u)
if ˜H < Hopt then
Hopt = ˜H
uopt = u

(cid:6) Time loop

(cid:6) Minimum Principle

end if

end for

end for

until xopt(N ) = xf

λopt(k) = λopt(k − 1) + (cid:4)k (xopt(k − 1), uopt(k))(cid:8)
xopt(k) = xopt(k − 1) + fk (xopt(k − 1), uopt(k))(cid:8)

(cid:6) Euler–Lagrange equations

6.2.2.2 Dynamic Programming

DP was developed during the 1950’s by Richard Bellman [6] and has ever since
been used as a tool to design optimal controllers for systems which are ﬁnite in their
independent variable, with constraints on the state variables and the control inputs.
Being a graph search method, it can be regarded as a generalization of Dijkstra’s
algorithm presented in Chap. 5 [7].

The method is generally based on a discretization of time as the independent
variable,7 state space, and control space. When the forward Euler scheme with time
step (cid:8) is applied to the problem (6.3)–(6.6), without terminal cost ((cid:3) = 0) for
simplicity, the objective function reads

7In our problem, position could be alternatively chosen as the independent variable, as it will be
shown later.

6.2 Eco-Driving as an Optimal Control Problem

where N (cid:8) = tf , the state equations read

and the boundary conditions are

J =

Lk (xk−1, uk )(cid:8) ,

N(cid:10)

k=1

xk = xk−1 + fk (xk−1, uk )(cid:8) ,

x0 = xi, h(xN ) = 0 .

145

(6.35)

(6.36)

(6.37)

A basic DP algorithm incorporating the main features of the method is shown as
Algorithm 5. As this pseudocode shows, DP uses a discretized state space, xk ∈ Xk .
The set Xk can vary with the position state to represent speed limits that are position-
dependent (e.g., legal top speed) or additionally dependent on time (trafﬁc-induced
speed limit, passage speed at a trafﬁc light, etc.). The control space is discretized
as well, uk ∈ Uk (xk ), with the set Uk that can vary with the speed state to represent
the force limits that are commonly speed-dependent. In this respect, the state and
control constraints in (6.5) are naturally enforced by correspondingly selecting these
subsets.

The procedure ﬁrst initializes the cost-to-go function Jk (x) that represents the
minimal cost to reach an admissible terminal state from a state x at time step k.
At ﬁnal time, an inﬁnite cost is attributed to unfeasible states, e.g., any state for
which h(x) (cid:9)= 0. Then the algorithm proceeds backward in time, updating J taking
advantage of Bellman’s principle of optimality,

Jk (x) = min

{Lk+1(x, u)(cid:8) + Jk+1(x + fk+1(x, u)(cid:8))},

k = 0, . . . , N − 1 .

u∈Uk+1(x)

(6.38)
Correspondingly, the feedback function Uk (x), representing the optimal control input
at any state x at time step k, is also evaluated. When these functions have been
evaluated for the entire time-state grid, the algorithm proceeds forward in time from
the initial state, using the functions J and U to compute the optimal trajectories of
control input and state.

Despite the relatively simple structure of the Algorithm 5, there are several issues
to consider when implementing dynamic programming. When applying Bellman’s
equation, the arguments of the term Jk+1 are evaluated from the state equations, and
may not match any of the discrete states in Xk+1, for which the cost-to-go function is
deﬁned. Therefore, this term must be approximated using a nearest-neighbor strategy
or by interpolation. However, each of these methods have advantages and drawbacks
in terms of computational speed and accuracy, and must be applied carefully. For
instance, the common way to handle infeasible terminal states by assigning an inﬁnite
cost to those states becomes critical when used with an interpolation scheme. Readers
interested in the DP algorithm are referred to standard textbooks [5, 8, 9].

146

6 Energy-Efﬁcient Speed Proﬁles (Eco-Driving)

(cid:6) End cost calculation step

(cid:6) Intermediate calculation step

(cid:12)
(cid:11)
x + fk+1(x, u)(cid:8), k + 1

(cid:6) Bellman’s equation

Algorithm 5 DynamicProgramming
Require: f (·), L(·), N , X , (cid:8)
Ensure: uopt(1, . . . , N ), xopt(0, . . . , N )

for x ∈ XN do

J [x, N ] ← ∞

end for
J [xf , N ] ← 0

for k ∈ {N − 1, N − 2, . . . , 0} do

for x ∈ Xk do
Jopt ← ∞
for u ∈ Uk+1(x) do

˜J ← Lk+1(x, u)(cid:8) + J
if ˜J < Jopt then
Jopt ← ˜J
uopt ← u

end if

end for
J [x, k] ← Jopt
U[x, k] ← uopt

end for

end for

xopt(0) ← xi
for k = 1, . . . , N do

uopt(k) ← U[xopt(k − 1), k − 1]
xopt(k) ← xopt(k − 1) + fk (xopt(k − 1), uopt(k))(cid:8)

end for

(cid:6) Forward calculation

Another issue of DP is that it suffers from “curse of dimensionality”, as its com-
putation time and memory grow exponentially with the number of states. It is thus
desirable to reduce the size of the problem when possible. A state reduction can be
achieved when perturbations and constraints (that is, the functions L, f , and g) depend
on only one between time and position. In the former case (time-only-dependent
problem), the position state would be irrelevant for the optimization except for the
enforcement of the ﬁnal state. Position can be therefore removed from the state vec-
tor, and its ﬁnal value enforced with an additional tunable term β(cid:10)
k=1 vk−1(cid:8) that is
added to the objective function. To determine the right value of the tunable coefﬁcient
β(cid:10), a root-ﬁnding method can be used to drive the ﬁnal position error to zero.

(cid:13)

N

More common is the case where the problem depends on position but not explicitly
on time. This case applies for instance to scenarios with position-depending slopes
and speed limits. In these cases, it could be more convenient to reformulate (6.35)–
(6.36) with position as the independent variable and the terminal time constraint
enforced with a tunable terminal cost. With a position step (cid:8)(cid:10), that yields

6.2 Eco-Driving as an Optimal Control Problem

147

Algorithm 6 SingleStateEcoDrivingDynamicProgramming
Require: f (·), L(·), N , N (cid:10), X (cid:10), (cid:8)(cid:10), TOL, βmin, βmax
Ensure: uopt(1, . . . , N ), x(cid:10)

(0, . . . , N )

opt

2
} ← DynamicProgramming

(cid:14)

(cid:15)

f
v

, L+β
v

, N (cid:10), X (cid:10), (cid:8)(cid:10)

m = 1
while m < Mmax do
β ← βmin+βmax
{uopt, x(cid:10)
tf ←
if |tf − N | < TOL then

opt
(cid:13) (cid:8)(cid:10)
v

return

else

m ← m + 1
if sign(β) = sign(βmin) then

βmin ← β

else

end if

βmax ← β

end if
end while

J (cid:10) = β

N (cid:10)(cid:10)

(cid:8)(cid:10)

vk−1
k=1
(cid:16) (cid:17)(cid:18) (cid:19)
tf

N (cid:10)(cid:10)

Lk (x(cid:10)

, uk )

(cid:8)(cid:10) ,

k−1
vk−1

+

k=1

(6.39)

(6.40)

where N (cid:8)(cid:10) = sf , and

x(cid:10)
k

= x(cid:10)

k−1

+ fk (xk−1, uk )
vk−1

(cid:8)(cid:10) ,

respectively, where x(cid:10) is the reformulation of the state vector that replaces position
with time and subscript k now denotes discretized position. The constraint on the ﬁnal
position is now fulﬁlled by construction. Similarly to the previous case, to determine
the right value of the tunable coefﬁcient β, a root-ﬁnding method can be used to drive
the ﬁnal time error to zero [10–12], see Algorithm 6.

*
* *

In the next sections the general eco-driving OCP will be particularized for various

deﬁnitions of the running cost L.

148

6 Energy-Efﬁcient Speed Proﬁles (Eco-Driving)

6.3 Maximizing Wheel-to-Distance Efﬁciency

The simplest situation is when the objective function to be minimized is represented
by the powertrain energy at the wheels. In this way, the ED-OCP and its solutions
become independent from the particular type of powertrain used, except for the con-
trol constraints that necessarily vary according to the peak power and the regenerative
braking capability.

6.3.1 Problem Formulation

The objective of this section is to ﬁnd the velocity proﬁle that minimizes the pow-
ertrain energy deﬁned in (2.13), going from velocity of vi to vf over a time tf and a
distance sf . As mentioned in Sect. 6.2.1.3, the control inputs are deﬁned as up (cid:2) Fp/m
and ub (cid:2) Fb/m. The optimal control problem thus reads

minimize
up(t),ub(t)

subject to

(cid:6)

tf

0

J =

Fp(t)v(t)dt ,

ds(t)
dt
d v(t)
dt

= v(t) ,
= up(t) − C1
m

v(t) − C2
m

v2(t) − h(s(t)) − ub(t) ,

(6.41)

v(0) = vi ,
v(tf ) = vf ,
s(0) = 0 ,
s(tf ) = sf ,
up,min(v(t), t) (cid:3) up(t) (cid:3) up,max(v(t), t) ,
0 (cid:3) ub(t) (cid:3) ub,max ,
vmin(t, s(t)) ≤ v(t) ≤ vmax(t, s(t)) ,
smin(t) ≤ s(t) ≤ smax(t) ,

where up,min (cid:3) 0 and up,max > 0 correspond to the extreme values of the powertrain
force available, ub,max corresponds to the maximal braking force, and h(s) (cid:2) C0/m +
g sin(α(s)).

6.3 Maximizing Wheel-to-Distance Efﬁciency

149

6.3.2 Numerical Solutions

The solution of the optimal control problem (6.53) can be obtained with the dynamic
programming methods introduced in Sect. 6.2.2. In particular, the single-state DP
(Algorithm 6) can be used with a redeﬁnition of the OCP as in (6.39)–(6.40) and
x(cid:10) = {v}, u = {up, ub}.

This section presents some results obtained by varying the main parameters of
the problem (6.41). The passenger car parameters considered are listed in Table 6.1.
Trip time is ﬁxed at tf = 60 s, while the inﬂuence of initial and ﬁnal velocities, trip
distance, and road grade is investigated. The baseline situation is with vi = vf = 0,
α = 0 (ﬂat road) and sf = 500 m. This is a typical scenario in arterial driving when
a vehicle travels a link between two stop signs in a desired time.

Figure 6.3a shows the velocity proﬁles that maximize wheel-to-distance energy
efﬁciency for various traveling distances of {300, 500, 700, 1100} m. The baseline
scenario starts with a period of maximal acceleration leading to constant speed cruis-
ing, followed by a long period of coasting, and end with maximal braking. As the
trip distance increases the top speed increases, the cruising stage gradually vanishes
and gives way to longer coasting intervals.

Figure 6.3b shows the various optimal speed proﬁles obtained for road grades
{−5,0,5} %. While the general trend is kept, higher negative or positive grades
enhance the duration of the coasting or cruising phase, respectively. However, in
steep downhills, coasting may eventually lead to an acceleration as seen in the ﬁgure
(−5% grade).

Figure 6.3c, d show the results for various initial and ﬁnal speeds. From these
ﬁgures and the ones above, it is apparent that in all situations the optimal speed
proﬁles consist of the same four phases (maximal acceleration, cruising, coasting,
and maximal deceleration), and that different boundary conditions translate into
different timings of such phases. Note that in some cases, for instance in Fig. 6.3d,
the same phase (maximal acceleration) can be repeated twice.

Table 6.1 Vehicle
parameters used in Sect. 6.3.2

Vehicle
m
ρa
Af
CD
Crr
g

Driveline
up,max
up,min
ub,max

1100 kg
1.184 kg/m3
2.1 m2
0.33
0.015
9.81 m/s2

3.0 m/s2
0 (coasting)
2.0 m/s2

150

]
h
/
m
k
[

d
e
e
p
S

(a)

100

50

(c)

40

20

]
h
/
m
k
[

d
e
e
p
S

0

0

6 Energy-Efﬁcient Speed Proﬁles (Eco-Driving)

0%

5%

-5%

1100

700

500

300

0

0

20

40

60

Time [s]

20

40

60

Time [s]

(b)

60

]
h
/
m
k
[

d
e
e
p
S

40

20

0

0

(d)

60

]
h
/
m
k
[

d
e
e
p
S

40

20

0

0

20

40
Time [s]

60

20

40
Time [s]

60

Fig. 6.3 Numerically computed speed proﬁles that minimize powertrain energy for a temporal
horizon of 60 s and: varying spatial horizon (a), road grade (b), initial speed (c), ﬁnal speed (d).
Baseline values when not otherwise speciﬁed: sf = 500 m, vi = vf = 0, α = 0

6.3.3 Analytical Solutions

To have a better insight of the numerical results obtained, we derive in this section
closed-form solutions of the ED-OCP using Pontryagin’s minimum principle. To do
that, we shall additionally assume that:
• the term C1 of the resistance force is zero,8
• the term h(s) is constant (constant slope),9
• there are no bounds on the states over the optimization horizon.

8This is not a very restrictive assumption since C1 would model only second-order effects of speed
on rolling resistance.
9This assumption can be removed by analyzing the problem with position as the independent
variable, see [13].

6.3 Maximizing Wheel-to-Distance Efﬁciency

Under these assumptions, the state equations read

˙s(t) = v(t)
˙v(t) = up(t) − βv2(t) − h − ub(t)

,

151

(6.42)

where β (cid:2) C2/m, while the running cost (powertrain power) is conveniently divided
by the mass, yielding up(t)v(t).

Following Pontryagin’s Minimum Principle [14], the Hamiltonian H is formed

as follows:

H = up(t)v(t) + λ(t)(up(t) − βv2(t) − h − ub(t)) + μ(t)v(t) ,

(6.43)

The variables λ and μ are the two costates, which have the following dynamics:

⎧
⎪⎨

⎪⎩

˙μ(t) = −

= 0 ⇒ μ = constant

˙λ(t) = −

= −up(t) + 2βλ(t)v(t) − μ

∂H
∂s
∂H
∂v

.

(6.44)

Boundary conditions for both λ and μ are free, since both states, s and v, are ﬁxed at
initial and ﬁnal positions. We also note that μ is a constant over time, since its rate
of change is zero, while the dynamics of λ is more complex.

The optimal control input should minimize the Hamiltonian. Since H is an afﬁne

function of u and therefore

∂H
∂up

∂H
∂ub

= v(t) + λ(t),

= −λ(t)

(6.45)

are independent of the inputs, the Hamiltonian is minimized at extreme values of the
inputs, except for when the partial derivative of H with respect to the input is zero,
in which case a so-called singular interval may exist, see Fig. 6.4. Over a singular
interval the input could take any value within its constraints. Therefore the optimal
powertrain force, denoted here by u∗

p, is

⎧
⎪⎨

⎪⎩

up,max,
up,s,
up,min,

u∗
p

=

if v < −λ (maximal traction)
if v = λ (singular traction)
if v > −λ (overrun)

,

(6.46)

where up,s denotes the powertrain input during a possible singular interval.

152

6 Energy-Efﬁcient Speed Proﬁles (Eco-Driving)

(a)
H

(b)
H

(c)
H

(d)
H

(e)

H

u

u

u

u

u

Fig. 6.4 Qualitative shape of the function H (u) leading to a maximal acceleration, b singular
traction, c coasting, d singular braking, e maximal braking. Black circles or segments indicate
optimal u

The optimal braking force, denoted by u∗

b is

⎧
⎪⎨

⎪⎩

0,
ub,s,
ub,max,

if λ < 0
if λ = 0
if λ > 0

,

u∗
b

=

(6.47)

(6.48)

(6.49)

where ub,s denotes the braking input during a possible singular interval.

For a singular interval to exist during traction, the condition σ (cid:2) λ + v = 0 must
be valid for a time interval rather than just at one point. In other words, d σ/dt must
be zero over a singular interval. Upon substitution of state equations into (6.44),

and, substituting λ = −v, we conclude that velocity during a singular traction interval
must be

− h − βv2 + 2βλv − μ = 0 ,

vp,s =

(−h − μ)

,

(cid:3)

1/2

(cid:2)

1
3β

which is a constant, since μ was shown to be a constant. As a result, the singular
traction force is up,s = βv2
+ h = (2h − μ)/3. From these results, it should be clear
p,s
that singular traction (vp,s > 0, up,s > 0) can happen only for μ/2 < h < −μ. Since
μ must be a negative quantity, singular traction is possible for both positive and
negative slope.

For a singular interval to exist during braking, the condition λ = 0 should be valid
for a position interval rather than just at one point. However, substituting λ = 0 and
up = up,min in (6.44) makes apparent that this condition cannot generally be sustained
for any ﬁnite interval.10 Thus singular braking is generally impossible.

10In principle, a whole trip could be singular if the boundary conditions would be satisﬁed with
μ = −up,min and λ ≡ 0.

6.3 Maximizing Wheel-to-Distance Efﬁciency

153

6.3.3.1 Control Modes

In summary, the optimal solution is comprised of four distinct modes:
• maximal traction, up = up,max, ub = 0
• singular traction, up = up,s, ub = 0
• overrun, up = up,min, ub = 0
• maximal braking, up = up,min, ub = ub,max
that correspond to the phases found numerically in Sect. 6.3.2 since, for up,min = 0,
overrunning becomes identical to coasting.

The particular sequence in which these modes occur is obtained by the solution
of the two-point boundary value problem that reduces to ﬁnd the two quantities λ0,
μ, such that:

⎧

⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎩

˙s = v(t),
s(tf ) = sf
s(0) = 0,
v(0) = vi,
˙v = up(t) − βv2(t) − h − ub(t),
˙λ = −up(t) + 2βλ(t)v(t) − μ, λ(0) = λ0
up(t) = (6.46), ub(t) = (6.47)

v(tf ) = vf

.

(6.50)

It is relatively easy to solve (6.50) analytically on intervals where u (cid:2) up − ub
is piecewise constant. Note that the velocity dynamics is decoupled from the other
two states, and the third equation is linear in λ. After lengthy but straightforward
integrations, we obtain the following analytical expressions on intervals for which u
is a constant:

(cid:14)

(cid:14)

(cid:15)

(cid:15)

+ a1β(t − ti)

,

⎧
⎪⎪⎨

⎪⎪⎩

a1 tanh
vi
1+viβ(t−ti)
a1 tan

tanh−1
,
(cid:14)
tan−1

(cid:14)

vi
a1

vi
a1

(cid:15)

(cid:15)

+ a1β(t − ti)

,

if u > h
if u = h
if u < h

,

(6.51)

v(t) =

√

where a1 (cid:2)
(u − h)/β and the subscript i denotes the beginning of the interval.
Note, however, that, despite the availability of analytical solutions (6.51), closed-form
enforcement of boundary conditions and evaluation of powertrain energy consump-
tion is generally not straightforward.

6.4 Maximizing Overall Efﬁciency of Combustion Engine

Vehicles

The focus of the previous section was on increasing “wheel-to-distance” energy efﬁ-
ciency and did not address “tank-to-wheel” efﬁciency which is powertrain dependent.
The two problems are not entirely decoupled: for instance we showed that low con-
stant velocities improve “wheel-to-distance” energy efﬁciency due to lower drag.
A gasoline engine on the other hand is not most efﬁcient at low loads seen at low

154

6 Energy-Efﬁcient Speed Proﬁles (Eco-Driving)

speeds. The engine sweet spot is typically at relatively large engine loads. To strike
a balance (running the engine efﬁciently and maintaining a low average speed), dur-
ing the cruising phase the engine could be periodically turned on at high load and
then turned off, in a “pulse-and-glide” strategy. To investigate such behavior, in this
section we expand on the analysis of Sect. 6.3 and include tank-to-wheel energy path
for a combustion engine vehicle.

6.4.1 Problem Formulation

Instead of the powertrain energy, we choose the fuel energy deﬁned in (2.16) as the
objective function to be minimized. Therefore J represents the total fuel expended
over the trip. The running cost is consequently given by the temporal rate at which
fuel is injected into the engine, ˙mf (t). We use the representation given in Chap. 2
to relate ˙mf to the speed and the control input up = Fp/m. Assuming a fuel cut-off
strategy and no penalty for resuming fuel injection, we obtain

˙mf (t) =

γe(t)v(t) + ke,1
r2
w

ke,0
1
rw
Hf
+ ke,3
γe(t)v2(t)mup(t) + ke,4
ηt
rwηt
r2
w

γ 2
e

(t)v2(t) + ke,2
ηt

mv(t)up(t)+
(cid:3)

γ 2
e

(t)v3(t)mup(t)

,

(cid:2)

⎧

⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎩

0,

up(t) > 0

up(t) (cid:3) 0

(6.52)
The gear ratio can be in principle a control input to be optimized. However, as
discussed in Sects. 6.1.2 and 6.2.1.3, we shall instead consider a predeﬁned gear
shift law of the type γe(v(t), up(t)).

With this assumption, the optimal control problem reads
(cid:6)

minimize
up(t),ub(t)

J =

˙mf (up(t), v(t))dt

tf

0

= v(t) ,

ds(t)
dt
= up(t) − C1
m

subject to
d v(t)
dt

v(t) − C2
m

v(0) = vi ,
v(tf ) = vf ,
s(0) = 0 ,
s(tf ) = sf ,
up,min(v(t), t) (cid:3) up(t) (cid:3) up,max(v(t), t) ,
0 (cid:3) ub(t) (cid:3) ub,max ,
vmin(t, s(t)) ≤ v(t) ≤ vmax(t, s(t)) ,
smin(t) ≤ s(t) ≤ smax(t) ,

v2(t) − h(s(t)) − ub(t) ,

(6.53)

6.4 Maximizing Overall Efﬁciency of Combustion Engine Vehicles

155

with the same deﬁnitions as in Sect. 6.3.

The maximal powertrain input up,max is now an image of the maximal engine torque
Te,max that, as described in Sect. 2.2.2, is generally a function of the engine rotational
speed. The latter is related to the vehicle speed through a variable transmission ratio,
whence the dependency of up,max in (6.53) on both v and time. Similarly, the minimal
powertrain input up,min results from the minimal (braking) engine torque Te,min.

6.4.2 Numerical Solutions

The solution of the optimal control problem (6.53) can be obtained with the dynamic
programming methods introduced in Sect. 6.2.2. In particular, the single-state DP
(Algorithm 6) can be used with a redeﬁnition of the OCP as in (6.39)–(6.40) and
x(cid:10) = {v}, u = {up, ub}.

This section presents results obtained with a single-state DP code by varying
the main parameters of the problem (6.53). The vehicle considered is described in
Table 6.2. Additionally, we consider a coasting strategy (see Sect. 2.2.2) with fuel
cut-off, where the engine does not consume fuel for torques lower or equal to zero.
Consequently, we enforce the system to operate with a up,min = 0.

The scenario considered is again a driving between two stops (vi = vf = 0) on
a ﬂat road (α = 0), in a ﬁxed time tf = 60 s. Figure 6.5a shows the velocity proﬁle

Table 6.2 ICEV parameters
used in Sect. 6.4.2

Vehicle see Table 6.1
Engine
ke,0
ke,1
ke,2
ke,3
ke,4
ke,8
ke,9
ke,10
ke,11
ke,12
Hf
Driveline
rw
up,min
ub,max

57.0
0.0697
2.80
−0.0032
5.79·10−6
50 N
0.1
300
521
−0.048
42.2 MJ/kg

0.2785 m
0
2.0 m/s2

6 Energy-Efﬁcient Speed Proﬁles (Eco-Driving)

156

(a)

60

40

20

]
h
/
m
k
[

d
e
e
p
S

B

A

C

(b)
4,000

2,000

0

]

m
N

[
 
e
u
q
r
o
T

l
e
e
h
W

0

0

20

40
Time [s]

60

0

50

100

150

Speed [km/h]

Fig. 6.5 Numerically computed speed proﬁles that minimize fuel energy for a temporal horizon of
60 s, vi = vf = 0, α = 0, and variable sf , vmax: A (sf = 500 m), B (sf = 750 m), C (sf = 750 m,
vmax = 50 km/h) (a). Corresponding powertrain operating points in the v–Tp plane, with curves
Tp,max, Tp,η, Tp,min, and Tp,min − Tb,max (b)

that minimizes fuel energy for three situations: A (sf = 500 m), B (sf = 750 m), and
C (same as B with an additional speed constraint of vmax = 50 km/h). All proﬁles
start with a phase with high powertrain torque, thus high acceleration. Then, speed
reaches a cruising value that is kept by switching the engine on and off very fast.
This peculiar mode has been already introduced in Sect. 6.1.2 and is known in the
eco-driving literature as Pulse and Glide (P&G). In theory, when the engine can be
rapidly turned on and off at no extra cost, the P&G can be done inﬁnitely fast keeping
the speed effectively constant.11 After the P&G phase, a coasting phase with engine
off decelerates the vehicle, which is then fully stopped by a braking phase. Note that
adding a speed constraint (proﬁle C) does not modify the nature of the speed phases
but only their relative duration.

The optimal proﬁles A–C are represented as points in a speed-torque plane in
Fig. 6.5b. The torque curves shown are the maximal powertrain torque, the power-
train torque corresponding to the engine OOL (Te,η, see Sect. 2.2.2), the minimal
powertrain torque, and the maximal braking torque (Tp,min − Tb,max). These values
are expressed as a function of vehicle speed by combining the engine map and the
gear shifting map. Clearly, acceleration is performed along the OOL, while braking
points are adjacent to the maximal braking torque curve. Also apparent are the coast-
ing points at zero torque. The intermediate points between the OOL and the coasting
points are likely due to numerical effects and vary with the particular scenario con-
sidered.

11This behavior is similar to the process that cylinder deactivation exploits to save fuel. That is,
instead of many cylinder ﬁring events at lower manifold pressure and lower efﬁciency per event,
the same average torque output is obtained with fewer cylinder ﬁring events at higher manifold
pressure and higher efﬁciency per event.

6.4 Maximizing Overall Efﬁciency of Combustion Engine Vehicles

157

(a)

]
s
/
m

[

d
e
e
p
S

20

15

10

3

2

1

(b)

]
s
/
g
[

e
t
a
R

l
e
u
F

0

0

0

2,000

4,000

Position [m]

2,000

4,000

Position [m]

Fig. 6.6 Velocity (a) and fuel mass ﬂow rate (b) variation of low-frequency (1/60 Hz) pulse and
glide versus constant speed cruising at 15 m/s (54 km/h or 33.5 mph). The maximum traction
acceleration (pulse acceleration) was set to 1 m/s2

The evidence of a pulse and glide phase deserves a further analysis to understand its
effectiveness. For this study simpliﬁed models of the engine and the gearbox are used.
We compare P&G at a given engine on–off period with cruising at the corresponding
constant average speed. For example, in Fig. 6.6a we depict a scenario where pulse
and glide is exercised at a period of 60 s around the equivalent constant velocity of
15 m/s (representative of in city driving), with a pulse acceleration up,max = 1 m/s2.
The corresponding fuel consumption rates are shown in Fig. 6.6b. The fuel saving
computed over an integer number of periods is 32%.

However, this fuel saving comes at the cost of the discomfort of a mild acceleration
during a pulse stage. Moreover, the velocity varies between 10 and 20 m/s every
minute, which could be disruptive to trafﬁc. The velocity variation band can be
narrowed by reducing the P&G period, however we are limited by how fast the
engine can be turned on and off. We have not considered in this book the fuel cost of
turning the engine on. This cost subtracts from fuel savings and is another constraint
to consider when deciding on a viable P&G frequency. On the other hand, increasing
the engine on/off period results in velocity ﬂuctuation that increases aerodynamic
drag losses and therefore a trade-off must be made. In theory, when the engine can
be rapidly turned on and off at no extra cost, the Pulse and Glide (P&G) should
be done inﬁnitely fast keeping the speed effectively constant. Figure 6.7 summarizes
fuel savings and velocity variation for different periods of P&G. Figure 6.7a conﬁrms
that the most effective energy savings are obtained when the P&G period virtually
tends to zero (inﬁnitely fast switching), a situation that is numerically approached
by the results of Fig. 6.5. Figure 6.7a also shows the increase in aerodynamic drag
losses as a result of velocity variations in P&G (illustrated by Fig. 6.7b). Beyond
a certain P&G period, the drag losses offset the engine efﬁciency gain to the point
that P&G is no longer efﬁcient (negative fuel savings). The results shown are for an
average speed of 15 m/s. The gains are expected to be less at higher average speeds.
The effectiveness of pulse and glide algorithms has been shown in [15], using
theory of optimal control in [16], and experimentally in [17] but overall the existing

158

(a)

]

%

[
g
n
i
v
a
S

l
e
u
F

40

30

20

10

0

−10

6 Energy-Efﬁcient Speed Proﬁles (Eco-Driving)

150

100

50

]

%

[

e
s
a
e
r
c
n
I
g
a
r
D

(b)
30

20

10

]
s
/
m

[

e
g
n
a
R
n
o
i
t
a
i
r
a
V
y
t
i
c
o
l
e
V

0

0

0

50

100

150

Pulse and Glide Period [s]

0
200

50

100

150

200

Pulse and Glide Period [s]

Fig. 6.7 Fuel saving, drag increase (a), and velocity variation (b) of pulse and glide versus constant
speed cruising at 15 m/s (54 km/h or 33.5 mph). Results are shown for pulse acceleration of 1 m/s2

literature presents mixed and sometimes conﬂicting results. Existence of similar
chattering arcs have been shown before in ﬂight control literature [18]. As a ﬁnal
remark, we have already noted that pulse and glide may not be a practical eco-driving
strategy because velocity variations are uncomfortable to passengers and disruptive
to trafﬁc. Also according to [17] P&G may not be an effective approach in vehicles
with automatic transmission due to torque converter losses.

6.4.3 Analytical Solutions

A theoretical justiﬁcation of the chattering behavior illustrated in the previous section
can be derived by analytically solving the ED-OCP (6.53) with PMP. We shall addi-
tionally assume that:
• the term C1 of the resistance force is zero,
• the term h(s) is constant (constant slope),
• the driveline efﬁciency ηt is constant,
• the gear shift law depends only on vehicle speed, γe(t) = γe(v(t)), that is, a

piecewise-constant function of the speed similar to (2.18),

• the engine OOL torque coincides with the maximal torque, thus the model (2.23)

is valid for the whole engine range,12

• the engine indicated efﬁciency is constant, ke,3 = ke,4 = 0,
• the engine friction torque is constant, ke,1 = 0,
• assuming coasting and fuel cut-off, engine brake is not used and up,min = 0,
• there are no bounds on the states over the optimization horizon.

12See discussion of this assumption in note 4 of Chap. 2.

6.4 Maximizing Overall Efﬁciency of Combustion Engine Vehicles

159

Under these assumptions, the running cost reads

(cid:21)

˙mf (t) =

p0(v(t)) + p1up(t)v(t),
0,

if up(t) > 0 (fueling)
if up(t) = 0 (fuel cut-off)

(6.54)

or, in a more compact way, ˙mf (t) = (p0(v(t)) + p1up(t)v(t))H (up), where H is the
Heaviside’s step function, p0 (cid:2) ke,0γe(v)v/(rwHf ), and p1 (cid:2) ke,2m/(ηtHf ).

Utilizing the state dynamics in (6.42) and the above cost function, the Hamiltonian

is

H =

(cid:22)
p0(v(t)) + p1up(t)v(t)

(cid:23)

(cid:14)

(cid:15)

H (up) + λ(t)

up(t) − βv2(t) − h − ub(t)

+ μ(t)v(t) .

The costate dynamics read

˙μ(t) = −

= 0 ⇒ μ = constant ,
(cid:3)

(cid:2)

∂H
∂s
∂H
∂v

∂p0
∂v

˙λ(t) = −

= −

+ p1up(t)

H (up) + 2βλ(t)v(t) − μ .

Boundary conditions for both λ and μ are free, since both states, s and v, are ﬁxed at
initial and ﬁnal positions. We also note that μ is a constant over time, since its rate
of change is zero, while dynamics of λ is more complex.

The Hamiltonian is piecewise-afﬁne in the inputs13 as in (6.24), with

∂H
∂up

∂H
∂ub

= p1v(t)H (up) + λ(t),

= −λ(t) ,

(6.57)

but now it additionally presents a discontinuity for up = 0. Therefore, as Fig. 6.8
illustrates, its minimum is found by comparing the value at up,max with the value at
up = 0. The optimal input that minimizes the switching Hamiltonian is found as

(6.55)

(6.56)

(6.58)

⎧
⎪⎨

⎪⎩

u∗
p

=

up,max,
up,max or 0,
0,

if λ < λB
if λ = λB
if λ > λB

,

where λB (cid:2) −p0/(p1up,max) − p1v. Note that there is no singular interval possible
for positive up due to the switching Hamiltonian.14 However, at the borderline when

13Note that, taking γe as an additional control input yields ∂H /∂γe = ke,0v/(rwHf ) > 0, thus the
optimal gear shifting law would be to use always the highest gear available (smallest value of γe),
as discussed earlier in Sect. 6.1.2.
14Note that if the assumption of up,min = 0 and fuel cutoff is removed, there is no discontinuity in
the Hamiltonian. Optimal driving modes include a singular arc similarly to Sect. 6.3 instead of the
PnG mode.

160

6 Energy-Efﬁcient Speed Proﬁles (Eco-Driving)

Fig. 6.8 Qualitative shape
of the function H (up)
leading to maximal traction
(a), pulse and glide (b),
coasting (c). Black circles
indicate optimal up

(a)
H

(b)
H

(c)
H

up

up,max

up

up,max

up

up,max

λ = λB, both up = 0 and up = up,max are optimal and the optimal solution switches
between the two values, whence the “pulse-and-glide” behavior already introduced.
Moreover, the switch between pulse and glide is inﬁnitely fast. This assertion is
proved by assuming a switch in ﬁnite time between the two solutions. Thus there is
a ﬁrst phase (I) where up = up,max and λ < λB and a second phase (II) where up = 0
and λ > λB. In order to avoid discontinuity in λ and ensure the periodicity of the
solution, it must be that ¨λ(I ) > 0 and ¨λ(II ) < 0 so that λ crosses the value λB exactly
at the switch between the two phases. Let us evaluate now the second derivative of
λ in the two phases, by differentiating (6.56) for constant up:

¨λ(t) = 2βv(t) ˙λ(t) + 2βλ(t)˙v(t) .

(6.59)

Assuming small variations of λ around λB and of v, (6.56) shows that ˙λ(I ) ≈ ˙λ(II ) −
(cid:14)
∂p0
∂v can be neglected if no gear change occurs during the
∂v

(cid:15)
. Since − ∂p0

+ p1up,max
switches, that yields

¨λ(I ) ≈ ¨λ(II ) + 2βλB(˙v(I ) − ˙v(II )) − 2βp1up,maxv .

(6.60)

Since ˙v(I ) > ˙v(II ) by construction, (6.60) shows that ¨λ(I ) < ¨λ(II ), contrarily to what
was required. This result means that the switch cannot occur in a ﬁnite time, but is
inﬁnitely fast.

As for the optimal braking input, we can easily show that it is still given by (6.47).
As in the previous section, singular braking is not possible for a ﬁnite interval: for
λ = 0, up = 0, the condition ˙λ = 0 cannot be generally sustained.

6.4.3.1 Control Modes

In summary, the optimal speed proﬁles of ICEVs comprise of at most of four distinct
modes:
• maximal traction (A), up = up,max, ub = 0
• pulse-and-glide (S), up = up,max/0, ub = 0
• coasting (C), up = 0, ub = 0
• maximal braking (B), up = 0, ub = ub,max.

6.4 Maximizing Overall Efﬁciency of Combustion Engine Vehicles

161

(a)
v

(c)
λ

t1

t2

t3

t f

(b)
u

up,max

t

t

(d)
µ

ub,max

t

t

Fig. 6.9 Qualitative sketch of the analytical eco-driving solution for an ICEV, sequence A-S-C-B,
in terms of speed (a), control inputs up (b, black) and ub (b, gray), speed costate (c), and position
costate (d)

The particular sequence and timing in which these modes occur depend on the
boundary conditions and are obtained by the solution of the two-point boundary
value problem (TPBVP) that reduces to ﬁnding the two quantities λ0 and μ, such
that:

⎧

⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎩

˙s = v(t),
s(0) = 0,
˙v = up(t) − βv2(t) − h − ub(t),

s(tf ) = sf ,

(cid:3)

˙λ = −

(cid:2)

∂p0
∂v

up(t) = (6.58), ub(t) = (6.47).

v(0) = vi,

v(tf ) = vf ,

+ p1up(t)

H (up) + 2βλ(t)v(t) − μ, λ(0) = λ0,

(6.61)

In practice, four basic sequences of control modes are possible: A-S-C-(B), A-S-A,
C-S-C-(B), or C-S-A. For example, the sequence A-S-C-B is likely to be optimal
when both vi and vf are small or zero. A qualitative sketch of a complete solution of
this scenario, in terms of speed, control inputs, and costates is shown in Fig. 6.9.

162

6 Energy-Efﬁcient Speed Proﬁles (Eco-Driving)

6.4.3.2 Solution of the TPBVP

The sequential integration of the system (6.61), similarly to that of the corresponding
system (6.50), as a function of the unknown initial values λ0 and μ0 is generally
not possible since a PnG arc (phase S) always appears in the optimal sequence.
However, the two-point boundary value problem can be reduced to a parametric
optimization problem, where the correct sequence of control modes and the switching
times between these modes, ti, i = 1, . . . , 3 are to be found.

For the complete, four-phase mode sequences, two switching times are determined
by the terminal conditions v(tf ) = vf , s(tf ) = sf , while the third is left undetermined.
This degree of freedom should be therefore found in such a way that the fuel con-
sumption is minimized. Solving the TPBVP is thus reduced to a parametric MOOP
of the type

(cid:22)
|v(tf ) − vf |, |s(tf ) − sf |, |mf (tf )|

(cid:23)

,

min
t1,t2,t3

(6.62)

where the three terms on the right-hand side clearly depend on the choice of the ti’s.
For three-phase mode sequences, the two switching times t1 and t2 are fully deﬁned
by enforcement of the two terminal conditions; thus, only the ﬁrst two terms appear
at the right-hand side of (6.62). See Appendix A for a more detailed implementation
of the method.

Instead of running a parametric optimization routine, a more practical online
approach consists of directly evaluating the optimal switching times as a function
of the boundary conditions, with the aid of a neural network [19]. For ICEVs, the
latter would have an input vector I = {tf , sf , vi, vf , α} and an output vector O =
{t1, . . . , t3}.

6.5 Maximizing Overall Efﬁciency of Electric Vehicles

The two previous sections have shown that minimizing the powertrain energy leads
to a bang-singular-bang behavior, while considering ICE-based powertrains and their
afﬁne-in-torque characteristic may lead to an optimal pulse-and-glide control. In this
section, we extend our analysis to electric vehicles for which, due to their nonlinear
characteristic, different types of speed proﬁles are optimal.

6.5.1 Problem Formulation

We choose now the battery energy deﬁned in (2.30) as the objective function to be
minimized. Therefore J represents the total electricity expended over the trip. The
running cost is consequently given by the rate at which the battery is depleted, or

6.5 Maximizing Overall Efﬁciency of Electric Vehicles

163

the electrochemical power Pb(t) deﬁned in (2.39). We use the representation given
in Chap. 2 to relate Pb to the speed and the control input up = Fp/m,

mv2(t)
γ 2
r2
w

+ km,3

mup(t)v(t)
ηt

+

(cid:2)

1
ηb

γmv(t)
rw
(cid:24)

(t)

km,0 + km,1

+ km,2

+km,4

wu2
m2r2
p
η2
γ 2
t
m

, up > 0

Pb(t) =

(cid:2)

ηb

km,0 + km,1

+ km,2

γmv(t)
rw

⎧

⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩

The optimal control problem reads

+

mv2(t)
γ 2
r2
w
η2
wu2
t m2r2
p
γ 2
m

(cid:24)

(t)

+km,3mup(t)v(t)ηt + km,4

, up (cid:3) 0

v2(t) − h(s(t)) − ub(t),

minimize
up(t),ub(t)

J =

Pb(up(t), v(t))dt,

(cid:6)

tf

0

= v(t),

ds(t)
dt
= up(t) − C1
m

subject to
d v(t)
dt

v(t) − C2
m

v(0) = vi,
v(tf ) = vf ,
s(0) = 0,
s(tf ) = sf ,
up,min(v(t)) (cid:3) up(t) (cid:3) up,max(v(t)),
0 (cid:3) ub(t) (cid:3) ub,max,
vmin(t, s(t)) ≤ v(t) ≤ vmax(t, s(t)),
smin(t) ≤ s(t) ≤ smax(t),

(6.63)

(6.64)

with the same deﬁnitions as in Sect. 6.3.

Similarly to what was discussed in the previous section, it should be clear that the
control limits up,max and up,min result from the maximal and minimal (braking) motor
torques, Tm,max and Tm,min, respectively. Both of these quantities are functions of the
motor speed and thus, assuming a ﬁxed transmission ratio, of the vehicle speed.

164

6 Energy-Efﬁcient Speed Proﬁles (Eco-Driving)

6.5.2 Numerical Solutions

The solution of the optimal control problem (6.64) can be obtained with the dynamic
programming methods introduced in Sect. 6.2.2. In particular, the single-state DP
(Algorithm 6) can be used with a redeﬁnition of the OCP as in (6.39)–(6.40) and
x(cid:10) = {v}, u = {up, ub}.

This section presents some results obtained with DP by varying the main parame-
ters of the problem (6.64). The electric vehicle considered is described in Table 6.3.
The scenario considered is again a trip between two stops (vi = vf = 0) on a ﬂat
road (α = 0), in a ﬁxed time tf = 60 s. Figure 6.10a shows the velocity proﬁle
that minimizes battery energy for the same three situations as in Sect. 6.4: A
(sf = 500 m), B (sf = 750 m), and C (same as B with an additional speed con-
straint of vmax = 50 km/h). The optimal proﬁles A–C are represented as points in
a speed-torque plane in Fig. 6.10b, which also shows the maximal and minimal
powertrain torques and the minimal wheel torque (Tp,min − Tb,max). These values
are expressed as a function of vehicle speed by combining the motor map and the
driveline characteristics.

The optimal proﬁles are generally different from those obtained for an ICEV.
Now the vehicle initially accelerates with decreasing torque rather than following
the maximum or OOL torque curve. There is no cruising phase, unless induced by a
speed limit, and the maximum speed is directly followed by a coasting phase. The

Table 6.3 EV parameters
used in Sect. 6.5.2.

Motor
km,0
km,1
km,2
km,3
km,4
km,5
km,6
km,7
ωm,base
Battery
Rb
Vb0
Driveline
γm
ηt
rw
ub,max

96.2
−1.85
0.0034
1
−0.53
0.0123
−1.98·10−6
70 N
250 rad/s

0.0255 (cid:12)
75.6 V

9.91
0.95
0.2785 m
2.0 m/s2

6.5 Maximizing Overall Efﬁciency of Electric Vehicles

165

C

B

A

(a)

60

]
h
/
m
k
[
d
e
e
p
S

40

20

0

0

(b)

1,000

]

m
N

[

e
u
q
r
o
T

−1,000

0

0

20

40

60

Time [s]

20

40

Speed [km/h]

60

Fig. 6.10 Numerically computed speed proﬁles that minimize battery energy for a temporal horizon
of 60 s, vi = vf = 0, α = 0, and variable sf , vmax: A (sf = 500 m), B (sf = 750 m), C (sf = 750 m,
vmax = 50 km/h) (a). Corresponding powertrain operating points in the v–Tp plane, with curves
Tp,max, Tp,min, and Tp,min − Tb,max (b)

vehicle also decelerates with decreasing torque. Note, however, that in scenario A
the motor limits are never reached, neither in traction nor in braking, while that is
the case in scenarios B and C, where additionally the braking limits are reached.

6.5.3 Analytical Solutions

Again we solve the ED-OCP (6.64) in a closed form using Pontryagin’s minimum
principle. Additional assumptions are:
• the term C1 of the resistance force is zero,
• the term h(s) is constant (constant slope),
• the driveline efﬁciency ηt is constant,
• in the motor model b0 = 0, km,3 = 1, and km,5 = km,6 = 0,
• there are no bounds on the states over the optimization horizon.

Under these assumptions, the running cost reads

Pb(t) = mup(t)v(t)η−sign(up) + bu2

(t)(ηηt)−sign(up) ,

p

(6.65)

where b (cid:2) km,4m2r2
w

γ −2
m , and η (cid:2) ηtηb.

Utilizing the state dynamics in (6.42) and the above cost function, the Hamiltonian

is formed as

H = mup(t)v(t)η−sign(up) + bu2

(t)(ηηt)−sign(up)+

p

+ λ(t)

up(t) − βv2(t) − h − ub(t)

+ μ(t)v(t) .

(cid:23)

(cid:22)

(6.66)

166

6 Energy-Efﬁcient Speed Proﬁles (Eco-Driving)

(a)

H

(b)
H

(c)

H

(d)

H

(e)

H

up

up

up

up

up

Fig. 6.11 Qualitative shape of the function H (up) leading to maximal traction (a), optimal
traction (b), coasting (c), optimal reg. braking (d), maximal reg (e). braking. Black circles indicate
optimal up

The costate dynamics read

˙μ(t) = −

= 0 ⇒ μ = constant ,

˙λ(t) = −

= −mup(t)η−sign(up) + 2βλ(t)v(t) − μ .

(6.67)

∂H
∂s
∂H
∂v

Boundary conditions for both λ and μ are free, since both states, s and v, are ﬁxed at
initial and ﬁnal positions. We also note that μ is a constant over time, since its rate
of change is zero, while dynamics of λ is more complex.

This time the Hamiltonian, while still afﬁne in the friction braking input, is

quadratic in the powertrain input,

∂H
∂up

= mv(t)η−sign(up) + 2bup(t)(ηηt)−sign(up) + λ(t),

= −λ(t) ,

(6.68)

∂H
∂ub

leading to possible local minima

u+
p

(t) (cid:2) −

(ηλ(t) + mv(t)) , u−
p

ηt
2b

(t) (cid:2) − 1
2bηt

(cid:2)

mv(t) +

(cid:3)

,

λ(t)
η

(6.69)

that are also global optima provided that 0 (cid:3) u+
(cid:3) 0. Oth-
p
erwise, according to the PMP, the optimal input lays at one of the boundaries, as
Fig. 6.11 illustrates. Therefore, the optimal powertrain input that minimizes the
Hamiltonian is found as

(cid:3) up,max or up,min (cid:3) u−
p

u∗
p

=

⎧

⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎩

up,max
u+
p
0
u−
p
up,min

(opt. traction)

(max. traction)

λ (cid:3) λMT
λMT < λ (cid:3) λT
λT < λ (cid:3) λB (coasting)
λB < λ (cid:3) λMB (opt. reg. braking)
(max. reg. braking)

λMB < λ

(6.70)

6.5 Maximizing Overall Efﬁciency of Electric Vehicles

167

where λMT (cid:2) −mv/η − 2bup,max/(ηηt), λT (cid:2) −mv/η, λB (cid:2) −mvη, λMB
(cid:2) −mvη − 2bηηtup,min. As for the optimal braking input, we can easily show that it
is still given by (6.47).

Note that coasting mode appears due the presence of the term η−sign(up) in the
Hamiltonian function and, for the same reason, the optimal traction mode is distin-
guished from the optimal regenerative braking mode. Indeed, if η = 1, then λB ≡ λT
and u+
p

≡ u−
p .

6.5.3.1 Control Modes

In summary, the optimal solutions comprise of up to six distinct modes:
• maximal traction (MA), up = up,max, ub = 0
• optimal traction (A), up = u+
• coasting (C), up = 0, ub = 0
• optimal powertrain braking (D), up = u−
• maximal powertrain braking (MD), up = up,min, ub = 0
• maximal braking (B), up = up,min, ub = ub,max.

p , ub = 0

p , ub = 0

Clearly, this solution reﬂects the structure of the results obtained in Sect. 6.5.2, with
the six modes corresponding to the various phases that are visible in Fig. 6.11.

⎧

The particular sequence in which these modes occur is obtained by the solution
of the two-point boundary value problem that reduces to ﬁnding the two quantities
λ0, μ, such that:
⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎩

˙s = v(t),
s(tf ) = sf
s(0) = 0,
˙v = up(t) − βv2(t) − h − ub(t),
˙λ = −mup(t)η−sign(up) + 2βλ(t)v(t) − μ, λ(0) = λ0
up(t) = (6.58), ub(t) = (6.47)

v(0) = vi,

v(tf ) = vf

(6.71)

A qualitative sketch of a complete solution with all six phases, in terms of speed,
control inputs, and costates is shown in Fig. 6.12. Different boundary conditions may
result in a different number of phases or a different ordering. For low distances, for
example, the maximal traction and maximal braking phases may disappear, as it is
the case in scenario A of Fig. 6.11.

6.5.3.2 Solution of the TPBVP

Assuming a full six-mode sequence as in Fig. 6.12, the calculation of the optimal
velocity and position trajectories can be performed in a sequential fashion [20].
Start with unknown λ0, μ, and integrate (6.71) for each phase of the sequence.
Switching times between phases ti, i = 1, . . . , 5 are deﬁned by the switching con-
ditions u+
(t4) = up,min, λ(t5) = 0. Then
p

(t1) = up,max, u+
p

(t2) = 0, u−
p

(t3) = 0, u−
p

168

6 Energy-Efﬁcient Speed Proﬁles (Eco-Driving)

(a)
v

(c)
λ

t1 t2

t3 t4 t5

(b)
u

(d)
µ

t

t

t f

up,max

up,min
up,min − ub,max

t

t

Fig. 6.12 Qualitative sketch of the analytical eco-driving solution, in terms of speed (a), control
inputs up (b, black) and ub (b, gray), speed costate (c), and position costate (d)

impose the two terminal conditions v(tf ) = vf and s(tf ) = sf and obtain two equa-
tions f1(λ0, μ) = 0 and f2(λ0, μ) = 0 in the two unknown initial conditions. It turns
out that the former equation is afﬁne in the variable λ0 and can be solved in closed
form. By replacing the resulting λ0(μ) in the latter equation, a tenth-order polynomial
equation f3(μ) = 0 is obtained. This equation has only one physically meaningful
solution, although it is generally impossible to obtain in closed form and a numerical
procedure is necessary.

Alternatively, the neural network approach mentioned in Sect. 6.4.3 is still a valid
option for online implementation. While the input vector contains all the boundary
conditions and is the same as in the ICEV case, I = {tf , sf , vi, vf , α}, the output vector
must include not only the switching times but also the values of the maximal or mini-
mal control input (motor torque ˆup,max or ˆup,min) during phase A (optimal traction) or D
(optimal braking) when phase MA or MD, respectively, is not present. To avoid ambi-
guities, the output vector can be deﬁned as O = {t1, t2, t3, t4, t5, ˆup,max, ˆup,min} for all
cases. In the case of a full six-mode sequence, ˆup,max = up,max and ˆup,min = up,min.
Otherwise (t1 = 0 or t4 = t5), ˆup,max and ˆup,min must be determined alongside with
the switching times. In [19] the outputs have been divided between four feedforward
smaller networks, with one hidden layer each.

6.5 Maximizing Overall Efﬁciency of Electric Vehicles

169

6.5.3.3 Parabolic Speed Proﬁle

If further simpliﬁcations are made to the model, namely:
• C2 = β = 0,15
• ηt = ηb = 1,
• ub,max = 0,
• up,max = −up,min → ∞,
then the optimal solution would consist of one single phase, resulting from the merg-
ing of the optimal traction and optimal braking phases deﬁned above (u+
p ).
p
Given the ﬁrst assumption, there is no coasting phase, and dissipative braking is also
absent (ub ≡ 0). The system (6.71) reduces to
⎧
⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎩

˙s = v(t),
˙v = up(t) − h,
˙λ = −mup(t) − μ, λ(0) = λ0
up(t) = − 1
2b

(λ(t) + mv(t))

v(0) = vi,

v(tf ) = vf

s(tf ) = sf

s(0) = 0,

≡ u−

(6.72)

The optimal control trajectory up(t) can be explicitly calculated and it is an afﬁne
function of time,
(cid:25)

(cid:25)

(cid:24)

(cid:24)

up(t) =

h − 4vi
tf

− 2vf
tf

+ 6sf
t2
f

+

6vi
t2
f

+ 6vf
t2
f

− 12sf
t3
f

t ,

(6.73)

while the optimal trajectory v(t) is a quadratic function of time [20, 21],

v(t) = vi +

(cid:25)
− 4vi
tf

− 2vf
tf

+ 6sf
t2
f

(cid:24)

(cid:25)

t +

3vi
t2
f

− 6sf
t3
f

+ 3vf
t2
f

(cid:24)

t2 .

(6.74)

We will therefore refer to this approximated solution as the “parabolic” speed proﬁle
in the following. Note that the parabolic speed proﬁle is completely determined by the
boundary conditions tf , sf , vi, and vf and does not depend on the system’s parameters.
The associated energy consumption, however, is a function of the vehicle param-

eters m, b, and h and is found to be

Eb = mhsf + m
(cid:25)

v2
f

− v2
i
2

+ bh2tf + 2bh(vf − vi)+
(cid:24)

+ 4b

3s2
f
t3
f

− 3sf (vi + vf )
t2
f

v2
i

+

+ vivf + v2
f
tf

.

(6.75)

15This is generally a strong assumption as it implies that the aerodynamic drag is zero. However,
considering an electric city car that usually travels at low speeds, the error introduced may be
limited.

170

6 Energy-Efﬁcient Speed Proﬁles (Eco-Driving)

Note that only the last term of (6.75) depends on the control law up(t) used, while
the other four depend only on the overall boundary conditions. We shall therefore
introduce the following deﬁnition of effective energy consumption to be used later:

(cid:25)

Eb,e (cid:2) 4b

3s2
f
t3
f

− 3sf (vi + vf )
t2
f

v2
i

+

+ vivf + v2
f
tf

(cid:24)

.

(6.76)

Equation (6.74) represents an admissible speed proﬁle only for certain combina-
tions of the boundary conditions. In particular, conditions of the type F(sf , tf ) ≥ 0
for speciﬁc vi and vf deﬁne the domain of validity of the parabolic speed proﬁle.
These conditions impose that the speed is always positive, that its maximum does
not exceed a given limit vmax, and that its maximum derivative (acceleration) or,
alternatively, the control input, does not exceed the limit amax or up,max, respectively.
A general derivation of such conditions is presented in Appendix B. Speciﬁc cases
will be discussed in Chap. 7.

6.6 Maximizing Overall Efﬁciency of Hybrid Vehicles

In hybrid-electric powertrains the minimization of the energy consumption is inher-
ently related to the optimization of the energy management strategy, see (2.4.2). We
refer in the following to a parallel hybrid conﬁguration.

6.6.1 Problem Formulation

We use the “tank” energy deﬁned in (2.46) as the objective function to be mini-
mized but we additionally specify the value of the battery energy consumption by
prescribing a ﬁnal state of charge. This position is thus equivalent to minimizing the
fuel energy under a terminal state constraint on the SoC. The control vector is now
composed of the three inputs, corresponding to the wheel force coming from the
engine, up,e, the wheel force coming from the motor, up,m, and the braking force, ub.
The fuel consumption rate is still given by (6.52) with up,e replacing up, while the
battery electrochemical power is given by (6.63) with up,m replacing up. The state
vector includes now the battery state of charge.

Due to the presence of SoC as a state variable, decoupling the OCP into several
subproblems for each single subtrip as discussed in Sect. 6.2.1.7 is generally not
possible, since the SoC is prescribed only at the end of the whole trip, and not at
road discontinuities where the position and the speed can be reasonably prescribed.
Interior constraints of the type (6.22) must be therefore taken into account explicitly.

6.6 Maximizing Overall Efﬁciency of Hybrid Vehicles

171

v(t) − C2
m

v2(t) − h(s(t)) − ub(t),

(6.77)

The optimal control problem thus reads

minimize
up,e(t),up,m(t),ub(t)

J =

˙mf (up,e(t), v(t))dt,

(cid:6)

tf

0

ds(t)
dt

= v(t),

subject to
d v(t)
dt
d ξb(t)
dt

= up,e(t) + up,m(t) − C1
m
Pb(up,m, v(t), t)
Vb0Qb

= −

,

v(0) = vi,
v(tf ) = vf ,
s(0) = 0,
s(tf ) = sf
ξb(0) = ξi,
ξb(tf ) = ξf ,
s(tB,j) = sB,j,
v(tB,j) = vB,j,
up,e,min(v(t), t) (cid:3) up,e(t) (cid:3) up,e,max(v(t), t),
up,m,min(v(t), t) (cid:3) up,m(t) (cid:3) up,m,max(v(t), t),
0 (cid:3) ub(t) (cid:3) ub,max,
vmin(t, s(t)) ≤ v(t) ≤ vmax(t, s(t)),
smin(t) ≤ s(t) ≤ smax(t),

j = 1, . . . , nB,

with the same deﬁnitions as in the previous sections, notably for what concerns the
limits to the control inputs.

6.6.2 Numerical Solutions

The solution of the optimal control problem (6.77) can be obtained with the dynamic
programming methods introduced in Sect. 6.2.2. In particular, the single-state DP
(Algorithm 6) can be used with a redeﬁnition of the OCP as in (6.39)–(6.40), and
x(cid:10) = {v, ξb}, u = {up,e, up,m, ub}. This approach is referred to as coupled optimization
of driving and energy management strategies.

To further reduce the computation time, a bi-level (or decoupled) approach can
be used [22]. In this approach, the optimal control policy u is found with two nested
loops by decoupling its components. In the outer loop the speed trajectory (x(1) (cid:2) v) is
optimized with respect to the control vector u(1) (cid:2) {up, ub}, where up = up,e + up,m,
thus in the same way as for an ICE or an EV. The running cost of this sub-problem is
found by solving a second sub-problem (inner loop, with x(2) (cid:2) ξb), where the power

172

6 Energy-Efﬁcient Speed Proﬁles (Eco-Driving)

u(1)

v

|ξb(t f ) − ξ f | < ε

Algorithm 6 with H = (6.78)

∑N(cid:2)
k=1

(cid:2)
(cid:2)
(cid:2) Δ(cid:2)
vk

(cid:2)
(cid:2)
(cid:2) < ε

− t f

L(u(1), v)

Algorithm 4 with L = (6.80)

ζ

β

u(2)

ξb(t f )

Fig. 6.13 Schematic of the bi-level solution of the ED-OCP for HEVs

split is optimized (u(2) (cid:2) {up,m}) for a given speed state and wheel force, while up,e
is found by difference up − up,m. An overview of the algorithm is given in Fig. 6.13.
In a convenient embodiment of the method [22], the inner loop can be performed
with the PMP-based technique known in the HEV control literature as Equivalent
Consumption Minimization Strategy (ECMS) [9]. The Hamiltonian of this sub-
problem is deﬁned as

H (up,m, u(1), v) = Pf (up,m, u(1), v) + ζ · Pb(up,m, u(1), v) .

(6.78)

The costate adjoint to the SoC, ζ, is found such to enforce the constraint over the
ﬁnal SoC (2.52). Hence, the powertrain torque provided by the motor is a function
of vehicle speed and wheel force only,

u∗
p,m

(t) = arg min

H (up,m, u(1)(t), v(t)).

up,m

(6.79)

As a consequence, also the fuel consumption is dependent on only those two variables
and noted as P∗
f

(u(1), v).

In the outer loop, DP is used with the position as the independent variable and the

running cost

L(u(1), v) =

P∗
f

(u(1), v) + β
v

.

(6.80)

As described above, the coefﬁcient β is tuned in an iterative process as to enforce
the constraint over ﬁnal time. In total, there are two root-ﬁnding processes to be
performed, over ζ and β. Intermediate approaches between the fully coupled opti-
mization and the bi-level optimization have been investigated in [23].

We present here some results obtained using the bi-level algorithm by varying the
main parameters of the problem (6.77). The vehicle and powertrain parameters are a
combination of Tables 6.1, 6.2 and 6.3. Figure 6.14a shows the optimal speed proﬁle

6.6 Maximizing Overall Efﬁciency of Hybrid Vehicles

(a)

60

)
h
/
m
k
(

d
e
e
p
S

40

20

173

A

0.66

0.65

0.65

0.64

C
O
S

(b)

1

x
a
m
,
e
,
p
u
/

e
,
p
u

o
i
t
a
R

0.8

0.6

0.4

0.2

C

B

0
−1 −0.5

0.5
0
Ratio up,m/up,m,max

1

0

0

500

1,000 1,500 2,000

Distance (m)

Fig. 6.14 Numerically computed speed and SoC proﬁles that minimize fuel energy for a given
ﬁnal SoC, for a temporal horizon of 200 s, vi = vf = 0, sf = 2154 m and various interior and state
constraints explicited in the main text a. Corresponding operating points in the adimensional engine
torque versus motor torque plane b

and the SoC variation for a trip of sf = 2154 m with vi = vf = 0 and tf = 200 s.
The trip has four intermediate breakpoints: sB,1,...,4 = {360, 988, 1555, 2080} m,
vB,1,...,4 = {2.2, 2.7, 24.0, 28.3]} km/h, tB,1,...,4 = {38, 92, 155, 193} s. Each of the
ﬁve resulting sub-trips has a different speed limit, vmax = {51.4, 48.3, 51.5, 52.5,
50.8} km/h (resulting from posted speed limits and prevailing trafﬁc speed), and
slope, α = {3.7, −7.4, 4.5, −7.8, −7.7} %. The SoC at the end of the trip is imposed
to be equal to the initial value of 65%. Following the procedure described in
Sect. 6.2.1.7, ﬁve optimization problems have been solved for each sub-trip, coupled
by the SoC variation.

The optimal proﬁles generally vary according to the sub-trip boundary conditions
and constraints. The operating points plotted in Fig. 6.14b reveal the presence of
strong acceleration phases, where both the engine torque and the motor torque are
at or close to their maximal values (region denoted with A in the plot). Similarly,
strong deceleration phases occur with the engine shut off and the motor close to its
maximum regenerating capability (region B). Milder accelerations and decelerations
are also present, where the engine is off and the motor torque is at an intermediate
value. Additionally, constant speed phases (region C) are apparent from Fig. 6.14a,
either due to the presence of a speed limit (2nd and 4th sub-trips) or as the result of
a pulse-and-glide driving (1st and 3rd sub-trips). The latter mode corresponds to the
cluster of operating points around the axis up,m = 0 evident in Fig. 6.14b. Similar
trends are observed for other trips.

The optimal SoC trend generally follows the slope proﬁle, with battery recharge
during downhills and discharge during uphills. Indeed, the example trip suggests a
certain correlation between the SoC variations per sub-trip and the corresponding
altitude variations.

To investigate this aspect in more detail, a training data-set was created by gen-
erating 150 trips with randomly chosen parameters: number of sub-trips, boundary
speeds, length, average speed (thus duration), top speed limit, and mean road grade of
each sub-trip. The DP algorithm illustrated above was used to calculate the optimal

174

6 Energy-Efﬁcient Speed Proﬁles (Eco-Driving)

Fig. 6.15 Values of (cid:8)ξb
obtained for a database of
150 trips as a function of the
useful energy variation per
sub-trip (circles), with linear
ﬁtting (solid curve)

−2

·10

3

2

1

0

−1

−2

b

ξ
Δ

numerical
linear ﬁt
±1%

−3
−1,500 −1,000 −500

0

500

1,000

1,500

Kin. + Pot. energy variation [kJ]

Eb,i (or, equivalently, (cid:8)ξb,i) for each sub-trip i ∈ [1, 150], subject to the constraint
of invariant total SoC for the trip to which it belongs in the data-set.

Inspired by the optimal results obtained via DP, a deterministic model for the
optimal SOC variation per road segment has been derived in [24], as already dis-
cussed in Sect. 4.4.3. Figure 6.15 shows the results obtained in terms of the optimal
values of (cid:8)ξb as a function of the kinetic and potential energy differences across
the corresponding sub-trip. Also shown in the ﬁgure is a linear ﬁt and its conﬁdence
intervals of ±1%, which matches quite well the numerical data. Consequently, a
parametrization of the type

(cid:25)

(cid:8)ξb,i ≈ ρ

1

2 m(v2

i

− v2

i−1

) + mg(zi+1 − zi)
QbVb0

(cid:24)

(6.81)

where ρ is a parameter to be ﬁtted, can be proposed to estimate a priori the opti-
mal SoC variations from the sub-trip boundary conditions and further reduce the
complexity of the eco-driving problem.

6.6.3 Analytical Solutions

It is possible to have a better insight of the optimal speed proﬁles of HEVs if we
derive closed-form solutions of the ED-OCP (6.77) using PMP. We shall additionally
assume that:
• the term C2 of the resistance force is zero,
• the term h(s) is constant (constant slope),
• the driveline efﬁciency ηt is constant,

6.6 Maximizing Overall Efﬁciency of Hybrid Vehicles

175

• the gear shift law depends only on vehicle speed, γe(t) = γe(v(t)), that is, a

piecewise-constant function of the speed similar to (2.18),
• the engine indicated efﬁciency is constant, ke,2 = ke,3 = 0,
• the engine friction torque is constant, ke,1 = 0,
• a fuel cutoff strategy is used, thus up,e,min = 0,
• in the motor model km,0 = km,1 = km,2 = 0,
• the battery efﬁciency ηb is constant,
• there are no bounds on the states over the optimization horizon.

Under these assumptions, the running cost is given by (6.54), with up,e replacing up,
and the battery power by (6.65), with up,m replacing up.

Utilizing the state dynamics in (6.42) and the above cost function, the Hamiltonian

is formed as
(cid:22)
p0(v(t)) + p1up,e(t)v(t)

H =

(cid:23)

(cid:22)

H (up,e)+

+ λ(t)

+ ζ(t)

up,e(t) + up,m(t) − βv2(t) − h − ub(t)
1
Vb0Qb

(cid:14)
mup,m(t)v(t)η−sign(up,m) + bu2

p,m

where H is the Heaviside function.
The costate dynamics read

(cid:23)

+ μ(t)v(t)+

(t)(ηηt)−sign(up,m)

,

(cid:15)

(6.82)

˙μ(t) = −

= 0 ⇒ μ = constant ,

(cid:3)

˙λ(t) = −

= −

(t) + p1up,e(t)

H (up,e)−

(cid:2)

∂p0
∂v

−

(cid:22)
mup,m(t)η−sign(up,m)

(cid:23)

+ 2βλ(t)v(t) − μ ,

(6.83)

˙ζ(t) = −

= 0 ⇒ ζ = constant .

∂H
∂s
∂H
∂v
ζ(t)
Vb0Qb
∂H
∂ξb

Boundary conditions for both λ, μ, and ζ are free, since all states s, v, and ξb are ﬁxed
at initial and ﬁnal positions. Note that the third costate ζ is constant since we have
considered a constant battery efﬁciency that does not depend on the SoC. Clearly,
this costate coincides with the equivalent factor introduced in Sect. 2.4.2 and denoted
with the same symbol.

By differentiating the Hamiltonian with respect to the three control inputs, we

obtain

∂H
∂up,e
∂H
∂up,m

= p1v(t)H (up,e) + λ(t),

= −λ(t) ,

∂H
∂ub

ζ

(cid:22)
mv(t)η−sign(up,m) + 2bup,m(t)(ηηt)−sign(up,m)

(cid:23)

+ λ(t) .

(6.84)

=

Vb0Qb

176

6 Energy-Efﬁcient Speed Proﬁles (Eco-Driving)

Note that each of the partial derivatives depends either on up,e or up,m, but not on
both. The three inputs are thus independent functions of the costate λ. The engine
input up,e is given by (6.58), the motor input is given by (6.70) with λ replaced by
λVb0Qb/ζ, and the braking input is given by (6.47).

6.6.3.1 Control Modes

In summary, the optimal solution comprises of several possible modes, namely,
• recharge modes (A-D), ub = 0, up,e = up,e,max, and (i) up,m = up,m,min or (ii) up,m =

• boost modes (A-A), ub = 0, up,e = up,e,max, and (i) up,m = up,m,max or (ii) up,m =

• purely electric modes (C-A), ub = 0, up,e = 0, and (i) up,m = up,m,max or (ii) up,m =

u−
p,m,

u+
p,m,

u+
p,m,

• purely ICE mode (A-C), ub = 0, up,e = up,e,max, up,m = 0,
• regenerative braking modes (C-D), up,e = 0, and (i) up,m = u−

up,m,min, ub = 0 or (iii) up,m = up,m,min, ub = ub,max,

• coasting mode (C-C), up,e = 0, up,m = 0, ub = 0,
• pulse and glide or singular mode (S), ub = 0, v ≈ const.

p,m, ub = 0, (ii) up,m =

Figure 6.16 shows how some of these modes appear in the numerical results of
Fig. 6.14. In addition, the scenario shown in the ﬁgure presents speed-constrained
modes that will be discussed in the following chapter.

Fig. 6.16 Optimal modes
identiﬁed for the numerical
optimal proﬁles of Fig. 6.14.
Dark blue: A-A, green: C-A,
purple: C-D, orange: S, blue:
constrained by vlim

]
h
/
m
k
[

d
e
e
p
S

60

40

20

0

0

500

1,000

1,500

2,000

Distance [m]

6.6 Maximizing Overall Efﬁciency of Hybrid Vehicles

177

6.6.3.2 Solution of the TPBVP

Due to the large number of possible optimal modes, neither the sequential approach
nor the parametric optimization approach proposed for ICEVs and EVs to evaluate
online the optimal speed proﬁles are generally feasible for HEVs. Even the ANN-
based approach requires special care, and two steps are necessary: the former to
identify the optimal sequence of modes, and the latter to ﬁnd the switching times)
between each mode in the optimal control sequence.

In the mode sequence identiﬁcation step, a classiﬁcation ANN is required. The
input vector contains the boundary conditions and the SoC variation in the sub-trip,
I = {tf , sf , vi, vf , α, (cid:8)ξb}, while the output describes the mode sequence. Although
each combination of the modes of Sect. 6.6.3.1 is theoretically possible, for practical
training sets only a small number of sequences actually appears in the output. In the
switching-times identiﬁcation step, a regression ANN can be conveniently used, with
the same input vector I as above and the outputs depending on the mode sequence.
In [25], one hidden layer with 5 neurons have been used for both types of neural
networks.
Speciﬁc Scenarios and Applications

In this chapter, the general methods for computing eco-driving strategies introduced
in Chap. 6 are applied to several driving scenarios. These scenarios roughly reﬂect the
list of Sect. 6.1.1 and comprise of: acceleration to a cruise speed (Sect. 7.1), deceler-
ation to stop (Sect. 7.2), cruising with road slopes (Sect. 7.3), driving between stops
with a speed limit (Sect. 7.5), approaching an intersection (Sect. 7.6), approaching a
trafﬁc light (Sect. 7.7), and car following (Sect. 7.8).

From the viewpoint of the driving optimization, the ﬁrst two scenarios do not
present external constraints. We shall study the inﬂuence of the optimization horizons,
and compare the optimal speed proﬁle to typical driving behavior as described by the
models of Sect. 4.2.1. For the other scenarios, which are characterized by external
constraints, we shall investigate the role of predictive information, which have already
been broadly discussed in Sect. 6.1.2, and we shall evaluate the associated energy
beneﬁts. For all scenarios, we shall make use of the numerical methods of Chap. 6
to solve the corresponding ED-OCPs. To better illustrate the inﬂuence of the various
parameters, we also solve several subproblems in an analytical fashion, using the
simpliﬁed EV model of Sect. 6.5.3.3.

7.1 Acceleration

In this scenario, a target speed v f
is to be reached from rest in a given distance
s f and in a free time t f , or with both distance and time being free parameters. A
numerical analysis of this scenario is presented in Sect. 7.1.1. Then in Sect. 7.1.2
we use closed-form solutions of the ED-OCP (6.64) to corroborate the numerical
results.
Speciﬁc Scenarios and Applications

7.1.1 Numerical Analysis

Figure 7.1 shows the numerical results obtained with the DP Algorithm 6 for the
ICEV of Table 6.2 and the EV of Table 6.3, for varying end time and given the end
position.

In the case of an ICEV, the speed proﬁles consist of two acceleration phases
separated by a pulse-and-glide phase, whose duration increases with the required
end time. In the case of an EV, the speed proﬁles are smoother. For both propulsion
systems, when the required end time becomes shorter, the calculated speed proﬁle
might ﬁrst cross the target ﬁnal speed and then retrieve it with a deceleration phase.
The energy consumption generally decreases with an increase of the ﬁnal time.

As a basis of comparison, the output of Gipps’ model (4.6) is also shown in the
ﬁgures. The parameters of the latter are amax = 1.5 m/s2, amin = −1 m/s2, which
yield an acceleration time, that is, the time at which the computed speed reaches
within a band of ±0.5 m/s around the target speed, of about 21 s. Calculation of
energy consumption for both powertrains (datum not shown for ICEV due to scale)
reveals that Gipps’ driving is clearly far from being energy optimal.

10

20

30

20

30

40

Time [s]

End Time [s]

(a)

40

20

]
h
/
m
k
[
d
e
e
p
S

0

0

(c)

60

]
h
/
m
k
[

d
e
e
p
S

40

20

(b)

9.5

]
g
[

f

m

9

(d)

70

60

]
h
W

[

b
E

50

18

0

0

10

20

Time [s]

20

22

End Time [s]

Fig. 7.1 Optimal speed proﬁles and Gipps’ speed proﬁle for an acceleration from 0 to 50 km/h
with s f = 200 m and varying ﬁnal time t f , for an ICEV (a) and an EV (c). Energy consumption as
a function of ﬁnal time, (b) and (d). The black curves and dots represent Gipps’ model

7.1 Acceleration

181

7.1.2 Analytical Approach

In order to retrieve and explain the behavior shown by the numerical results of the
previous section, we use the simpliﬁed EV model of Sect. 6.5.3.3, for which explicit
solutions of the ED-OCP can be calculated.

7.1.2.1 Optimal Strategy

The solution of the ED-OCP for the considered EV model is given by (6.74) and
(6.75), which we repeat here for vi = 0,

v(t) = − 2v f t
t f

− 6s f t 2
t 3
f

+ 3v f t 2
t 2
f

,

+ 6s f t
t 2
f
(cid:2)

Eb = mhs f + m

+ bh2t f + 2bhv f + 4b

v2
f
2

3s2
f
t 3
f

− 3s f v f
t 2
f

+

v2
f
t f

(cid:3)

,

where only the last term represents the effective energy consumption Eb,e as deﬁned
in Sect. 6.5.3.3.

First we study the domain of validity of (7.1) in terms of t f and s f , looking for con-
ditions of the type F(s f , t f ) ≥ 0. We use the general results derived in Appendix B
and particularize them for vi = 0. A ﬁrst condition (see (B.14)) is obtained by requir-
ing that the speed proﬁle never becomes negative, which is equivalent to imposing
that ˙v(0) ≥ 0, and reads

FU B1 (cid:2) 3s f − v f t f ≥ 0 .

Further, we can impose a maximum speed vmax not to exceed during the acceleration,
which leads to the condition (see (B.16))
(cid:4)

FL B1 (cid:2)

v f + vmax +

− v f vmax

v2
max
3

− s f
t f

≥ 0 .

We can also impose the maximum initial acceleration that is allowed. Denoting this
value with amax , we obtain (see (B.24) and (B.23))

and

FL B2 (cid:2) −6s f + 2v f t f + t 2

f amax ≥ 0 .

FU B2 (cid:2) 6s f − 4v f t f + t 2

f amax ≥ 0 .

The resulting domain of feasibility is illustrated in Fig. 7.2.

(7.1)

(7.2)

(7.3)

(7.4)

(7.5)

(7.6)

182

7 Speciﬁc Scenarios and Applications

B

t f

A

C

s f

Fig. 7.2 Domain of feasibility (shaded gray area) of the parabolic speed proﬁle in the plane t f –
s f for the acceleration scenario. The curves shown are: FU B1 (orange), FL B1 (purple), FU B2
(green), and FL B2 (blue). Coordinates of the intersection points are A: (2/3 · σ , 2τ ), B: (2/3 ·
√
σ/β2(1 +
1 − β)), and C: (σ/2, τ ), where τ (cid:2) v f /amax ,
β (cid:2) v f /vmax , and σ (cid:2) v2
/amax . Also shown (dashed) is the upper bound of the domain of feasi-
f
bility of the simpliﬁed Gipps’ proﬁle

1 − β), 2τ/β(1 +

1 − β)(β + 1 +

√

√

Now we can study the case of a free ﬁnal time t f ∈ [t f,min, t f,max ], where t f,min is
given as a function of s f by (7.4) or (7.5), while t f,max by (7.3) or (7.6), as depicted
in Fig. 7.2. Local minima of Eb are found by setting

(cid:2)

∂ Eb
∂t f

= bh2 + 4b

−9s2
f
t 4
f

+ 6s f v f
t 3
f

−

v2
f
t 2
f

(cid:3)

= 0 ,

which has four solutions in t f . For a realistic choice of the parameters, one solution
is negative and must be discarded. Among the remaining three, one solution cor-
responds to a local maximum and two to local minima, with the energy becoming
inﬁnitely large for very large end times. The ﬁrst local minimum is at

(7.7)

(7.8)

−v f +

v2
f

+ 6hs f

.

t ∗
f

=

(cid:5)

h

For small h, this value may be larger than t f,max . Therefore the energy consumption
is a decreasing function of time and the optimal time is t f,max . However, for large
values of h (typically, positive slopes), the quantity (7.8) can be lower than the upper
bound and thus represents the global minimum. Such a behavior is illustrated in
Fig. 7.3, in terms of the normalized energy consumption Eb/EW (see (2.5) for the
deﬁnition of the energy at the wheels EW ) for two different road grades. The curve
for α = 10% has a minimum, while that for α = 0 is continuously decreasing.

7.1 Acceleration

(a)

]
h
/
m
k
[
d
e
e
p
S

80

60

40

20

0

0

183

α = 0
α = 10%
Gipps

(b)

1.1

]
-
[

W
E
/

b
E

1.05

10

20

30

15

20

25

30

1
10

Time [s]

End Time [s]

Fig. 7.3 Analytical optimal speed proﬁles for an acceleration from 0 to 50 km/h with varying ﬁnal
time, s f = 200 m (a). Normalized energy consumption as a function of ﬁnal time, for α = 0 and
α = 10% (b). The simpliﬁed EV model parameters used are: m = 1100 kg, h = 0.1472 (α = 0),
h = 1.1282 (α = 10%), b = 147.5

7.1.2.2 Gipps’ Driving

The full Gipps’ model during an acceleration maneuver is not easily integrable to
be used with the simpliﬁed EV energy consumption model. However, observing
the results of its numerical simulation, it becomes apparent that a simple enough
approximation of the speed proﬁle is
(cid:6)

v(t) =

a1t,
v f ,

t ∈ [0, t1]
t ∈ [t1, t f ]

,

where a1t1 = v f . The fulﬁllment of ﬁnal distance yields the further condition v f t f −
1/2v2
f

/a1 = s f , from which the relations

a1 =

v2
f
2(v f t f − s f )

,

t1 = 2(v f t f − s f )
v f

hold. The latter equations bring the bounds for the ﬁnal time, that is, s f ≤ v f t f ≤ 2s f ,
which are shown in Fig. 7.2.

The effective energy consumption is evaluated as

(7.9)

(7.10)

(7.11)

Eb,e =

bv3
f
2t f (v f t f − s f )

,

which is shown to be always positive and larger than with the optimal strategy, see
Fig. 7.3b.

184

7 Speciﬁc Scenarios and Applications

7.2 Deceleration

In this scenario, the vehicle must decelerate from a given speed vi to stop in a given
distance s f and free time t f . A numerical analysis of this scenario is presented in
Sect. 7.2.1. Then in Sect. 7.2.2 we use closed-form solutions of the ED-OCP (6.64)
to corroborate the numerical results.

7.2.1 Numerical Analysis

Figure 7.4 shows the numerical results obtained with the DP Algorithm 6 for the
ICEV of Table 6.2 and the EV of Table 6.3, for varying end time and given end
position.

In the case of an ICEV, the speed proﬁles may consist of an initial acceleration,
followed by coasting and braking phases, as anticipated in the analysis of Sect. 6.4,
although in principle slower decelerations could be achieved by interposing a coasting

(a)

80

]
h
/
m
k
[

d
e
e
p
S

60

40

20

0

0

(c)

60

]
h
/
m
k
[

d
e
e
p
S

40

20

0

0

(b)

]
g
[

f

m

6

4

2

0
14

20

0

−20

(d)

]
h
W

[

b
E

10

20

Time [s]

16

18

20

22

End Time [s]

20

Time [s]

40

20

30

40

End Time [s]

Fig. 7.4 Optimal speed proﬁles for a deceleration from 50 km/h to stop in 200 m with varying ﬁnal
time, for an ICEV (a) and an EV (c). Energy consumption as a function of ﬁnal time, (b) and (d).
The black curves and dots represent Gipps’ model

7.2 Deceleration

185

phase between two braking phases. The maximum deceleration time considered is
when only coasting and braking are used. In the case of an EV, the speed proﬁles
are smoother and larger end times are allowed. The energy consumption generally
decreases with the ﬁnal time and becomes negative in the EV case due to larger
proportion of regenerative braking.

The output of the Gipps’ model (4.6) with amin = −1 m/s2 is also shown in the
ﬁgures. Calculation of energy consumption for both powertrains again reveals that
Gipps’ driving is far from being energy optimal.

7.2.2 Analytical Approach

In order to retrieve and explain the behavior shown by the numerical results of the
previous section, we use the simpliﬁed EV model of Sect. 6.5.3.3, for which explicit
solutions of the ED-OCP can be calculated.

7.2.2.1 Optimal Strategy

The solution of the ED-OCP for the considered model is given by (6.74) and (6.75),
which we repeat here for v f = 0,

v(t) = vi − 4vi t
t f

− 6s f t 2
t 3
f

+ 6s f t
t 2
f

+ 3vi t 2
t 2
f

,

Eb = mhs f − m

+ bh2t f − 2bhvi + 4b

v2
i
2

(cid:2)

3s2
f
t 3
f

− 3s f vi
t 2
f

+

v2
i
t f

(cid:3)

.

Similarly to the previous section, we ﬁnd the conditions F(t f , s f ) ≥ 0 for which
(7.12) is an admissible speed proﬁle. We use the general results derived in Appendix B
and particularize them for v f = 0. Imposing that the speed proﬁle never becomes
negative yields

FU B1 (cid:2) 3s f − vi t f ≥ 0 .

Imposing a maximum speed vmax yields
(cid:4)

FL B1 (cid:2)

vi + vmax +

− vi vmax

v2
max
3

− s f
t f

≥ 0 .

Imposing the maximum deceleration amin yields

FL B2 (cid:2) −6s f + 2vi t f − t 2

f amin ≥ 0

(7.12)

(7.13)

(7.14)

(7.15)

(7.16)

186

7 Speciﬁc Scenarios and Applications

B

t f

A

C

s f

Fig. 7.5 Domain of feasibility (shaded gray area) of the parabolic speed proﬁle in the plane
t f –s f
for the deceleration scenario. The curves shown are: FU B1 (orange), FL B1 (purple),
FU B2 (green), and FL B2 (blue). The coordinates of the intersection points are A: (2/3σ , 2τ ),
B: (2/3 · σ/β2(1 +
1 − β)), and C: (σ/2, τ ), where τ (cid:2)
1 − β), 2τ/β(1 +
1 − β)(β + 1 +
v f /|amin|, β (cid:2) v f /vmax , and σ (cid:2) v2
/|amin|. Also shown (dashed) is the upper bound of the domain
f
of feasibility of the simpliﬁed Gipps’ proﬁle

√

√

√

and

FU B2 (cid:2) 6s f − 4vi t f − t 2

f amin ≥ 0 .

(7.17)

The resulting feasibility domain is illustrated in Fig. 7.2.

Now we study the case of a free ﬁnal time t f ∈ [t f,min, t f,max ], where t f,max is given
as a function of s f by (7.14), while t f,min is given by (7.15) or (7.16), as depicted
in Fig. 7.5. In both cases, the same expressions as in the acceleration scenario are
obtained, with |amin| replacing amax and vi replacing v f . Therefore, (7.7) and (7.8)
are still valid with the aforementioned replacements.

The consumed energy is now lower in absolute value than the wheel energy, which
is a negative quantity. As shown in Fig. 7.6, the stationary point (7.8) is now a maxi-
mum. However, the latter belongs to the feasibility domain only for sufﬁciently low
road grades (steep downhills).

7.2.2.2 Gipps’ Driving

The Gipps’ model is easily integrable in the deceleration case, at least for small step
times (cid:5)t (see Eq. 4.6), yielding a speed proﬁle

(cid:6)

v(t) =

vi ,
vi + a1t,

t ∈ [0, t1]
t ∈ [t1, t f ]

,

(7.18)

7.2 Deceleration

187

(a)

]
h
/
m
k
[

d
e
e
p
S

80

60

40

20

0

0

α = 0
α = −10%
Gipps, α = 0

(b)

−0.8

]
-
[

|

W
E
|
/

b
E

−0.9

−1

10

20

30

40

10

20

30

40

Time [s]

End Time [s]

Fig. 7.6 Analytical optimal speed proﬁles for a deceleration from 50 km/h to stop, with varying
ﬁnal time, s f = 200 m (a). Normalized energy consumption as a function of ﬁnal time, for α = 0
and α = −10% (b). The simpliﬁed EV model parameters used are: m = 1100 kg, h = 0.1472
(α = 0), h = −0.834 (α = −10%), b = 147.5

where t f − t1 = vi /|a1|. The fulﬁllment of the ﬁnal distance yields the further con-
dition vi t f − v2
f

/(2|a1|) = s f , from whence the relations

a1 = −

v2
i
2(vi t f − s f )

,

t1 = 2s f
vi

− t f

hold. The latter equations impose the bounds on the ﬁnal time, s f ≤ vi t f ≤ 2s f ,
which are shown in Fig. 7.5.

The effective energy is evaluated as

(7.19)

(7.20)

Eb,e =

bv3
i
2(vi t f − s f )

,

which is shown to be always positive and larger than with the optimal strategy, see
Fig. 7.6.

7.3 Road Slopes

As anticipated in Chap. 1, a dominating factor in vehicle power demand is road
grade, in particular on steep roads, and more so for heavier vehicles. Therefore, not
surprisingly, energy-optimal speed proﬁles are strongly affected by road grade and
its prior knowledge is highly beneﬁcial in predictive eco-driving. For example, a
vehicle can slow down in anticipation of a steep descent or speed up in preparation
for a climb.

In this section we aim at illustrating the dependency between road grade and
optimal speed. We consider the baseline situation of cruising at constant speed (e.g.,
on a highway) and we introduce a sinusoidal altitude proﬁle of the type

188

7 Speciﬁc Scenarios and Applications

z(s) = z0 sin((cid:6)s) + z1 ,

from which grade is evaluated as

α(s) = dz(s)/ds = (cid:6)z0 cos((cid:6)s) .

(7.21)

(7.22)

Note that the absolute altitude level z1 has no inﬂuence on α. A numerical analysis
of this scenario is presented in Sect. 7.3.1. Then in Sect. 7.3.2 we use closed-form
solutions of the ED-OCP (6.64) to corroborate the numerical results.

7.3.1 Numerical Analysis

We consider a baseline scenario (z0 = 0) of cruising at a constant speed of 36 km/h.
Figure 7.7a, b show the optimal speed proﬁles obtained with the DP (Algorithm 6)
for the ICEV in Table 6.2 and the EV in Table 6.3, respectively for varying z0. These
optimization results conﬁrm the intuitive rule that a vehicle should be slowed down
before a downhill and accelerated before a climb. In other terms, one can observe
an inverse correlation between optimal speed and altitude, that would be in principle
useful to adapt speed when future altitude (grade) is estimated.

We can regard the optimal speed proﬁle as the output of a predictive (P) eco-
driving strategy that, using GPS and 3D GIS information (see Sect. 4.1), perfectly
anticipates the upcoming road slope. To illustrate the effects of such preview, we
compare the energy consumption of the P strategy with that of a non-predictive
strategy (NP) that has no preview and would keep following a constant speed despite
the slope changes. We deﬁne a measure of performance as

ε = E

(P)
T

,

(N P)
T

− E
(P)
T

E

(7.23)

where ET is the tank energy, that is, the fuel energy for the ICEV and the battery
energy for the EV, while the superscripts P, N P stand for the predictive and non-
predictive strategies, respectively.

Figure 7.7c, d show the calculated values of ε as a function of z0. Clearly, the
higher z0 in absolute value, the higher ε. The ICEV is affected more than the EV
by the prediction of the road slope. The numbers reveal that keeping a constant
speed (actually, the optimal speed for z0 = 0, which is a pulse-and-glide proﬁle) can
consume two to three times more energy than following the optimal slope-sensitive
speed proﬁle.

189

1

0

−1

]
-
[

0
z
/
z

7.3 Road Slopes

(a)

60

]
h
/
m
k
[

d
e
e
p
S

50

40

30

20

0

(c)
3

ε

2

1

1

0

−1

]
-
[

0
z
/
z

(b)

60

]
h
/
m
k
[
d
e
e
p
S

50

40

30

20

0

(d)

1

ε

0.5

50

100

150

200

Position [m]

50

100

150

200

Position [m]

0
−4

−2

2

4

0
z0

0
−4

−2

2

4

0
z0

Fig. 7.7 Optimal speed proﬁles for sinusoidal slope proﬁles of the type (7.21), with (cid:6) =
π/100 m−1 and z0 = {−4, −2, 0, 2, 4} m, vi = v f = 36 km/h, s f = 200 m, t f = 20 ± 1 s, and
measures of performance, for an ICEV (a, c) and an EV (b, d). Normalized altitude proﬁle is shown
as a dashed line

7.3.2 Analytical Approach

In order to retrieve and explain the behavior shown by the numerical results of the
previous section, we use the simpliﬁed EV model of Sect. 6.5.3.3, for which explicit
solutions of the ED-OCP can be calculated.

With respect to the assumptions in that section, here we relax the constancy of
slope and make the resistance term h(s) variable with the position. According to
(7.21), the resistance term is evaluated as

h(s) = h0 + gα(s) = h0 + g(cid:6)z0 cos((cid:6)s) ,

(7.24)

where h0 is the constant factor due to rolling resistance, g is gravity and (cid:6) is chosen
such that the net difference of altitude is zero, i.e., sin((cid:6)s f ) = 0.

To solve this problem in a closed form, we consider vi = v f = s f /t f and perturb
the solution for z0 = 0, which is trivially v(t) ≡ s f /t f . We consider small altitude
variations, i.e., gz0 (cid:8) (s f /t f )2, and small resistance forces, i.e., bh0 (cid:8) (s f /t f ).
With these positions, it is easy to show that the control input u p(t) ≈ h0 and the
speed proﬁle

190

7 Speciﬁc Scenarios and Applications

v(t) ≈ s f
t f

− 2bh0 − gz0t f
s f

sin((cid:6)s(t))

(7.25)

satisﬁes the necessary conditions for optimality and is thus the optimal solution
sought. Note that for z0 = 0, the proﬁle (6.73)–(6.74) is retrieved, with h = 0.

The energy consumption can be evaluated by integrating the battery power over

position and using the transformation ds/dt = v,

Eb =

muds +

ds = mh0s f + bh2
0

(7.26)

(cid:7)

s f

0

(cid:7)

s f

0

b

u2
v

(cid:7)

s f

0

ds
v(s)

.

Under the assumptions above, the latter integral is equal to t f . Thus the energy
consumption of the optimal speed proﬁle is

E

(P)
b

= mh0s f + bh2

0t f ,

(7.27)

the same value that would be obtained by (6.75) with h ≡ h0 and a constant speed.
These results conﬁrm the observations made in the previous section that the optimal
speed follows the altitude proﬁle and that the optimal energy consumption is largely
independent of the altitude.

The energy consumption of the non-predictive strategy that follows a constant
speed despite the altitude variations is obtained by evaluating the control input as
u p = h and then inserting it into the expression (7.26). The result is

E

(N P)
b

= mh0s f + bh2

0t f + 1
2

bg2(cid:6)2z2

0t f .

Consequently, the measure of performance deﬁned in (7.23) is evaluated as

(7.28)

(7.29)

ε = 1
2

·

bg2(cid:6)2z2
0t f
mh0s f + bh2

0t f

,

whose quadratic dependency on z0 clearly matches the numerical results of Fig. 7.7.

7.4 Constrained Eco-Driving

In the rest of this chapter (Sects. 7.5–7.8), we shall treat scenarios with trip constraints
imposed on the optimization of the speed proﬁle, under the form of state or interior
constraints.

In particular, we shall present the constrained-optimal speed proﬁles for the sce-
narios considered. These solutions shall be regarded as the output of a predictive (P)
eco-driving strategy that, assuming that the vehicle is equipped with dedicated sen-
sors and/or communication technology, perfectly anticipates the trip constraints with

7.4 Constrained Eco-Driving

Fig. 7.8 Domain of
feasibility of the parabolic
speed proﬁle (shaded gray
area) in the plane t f –s f for
the constrained scenarios.
The curves shown are: FL B1
(purple) and FL B2 (blue).
The coordinates of the
intersection points are
A ≡ C: (0, 0) and B:
(8/3 · v2
4vmax /amax )

/amax ,

max

t f

A ≡ C

B

unlimited preview distance. The P speed proﬁles shall be compared with the respec-
tive unconstrained optimal speed proﬁles to illustrate the effects of the constraints
on the energy consumption.

As discussed in Chap. 1, energy savings are highly dependent on the preview
capability, and we shall study the effects of such anticipation. Therefore, we shall
further compare the P speed proﬁles and energy consumption with those of non-
predictive (NP) eco-driving strategies, which have no or limited preview of the trip
constraints (but are supposed to know the trip duration).

Generally speaking, the NP strategy is composed of four phases for all the con-
strained scenarios considered: (i) in the ﬁrst phase, it follows the unconstrained opti-
mum until a constraint is detected, assuming visual preview only; (ii) upon detection,
the NP strategy adjusts its trajectory to match the constraint and (iii) then it tracks the
constraint perfectly; (iv) lastly, the NP strategy retrieves a sub-optimal behavior to
complete the trip in the desired duration and distance. In some cases we shall assume
the adjustment phase (ii) as instantaneous for simplicity.

In order to understand the differences between P and NP strategies, we use the
simpliﬁed EV model of Sect. 6.5.3.3, for which explicit solutions of the ED-OCP
can be calculated.

(cid:9) (cid:8)

(cid:8)

(cid:9)

v∗(t) = 6s f
t f

t
t f

1 − t
t f

.

In terms of t f , s f , both conditions FU B1 and FU B2 (see Appendix B) are always
satisﬁed for vi = v f = 0, thus there is no upper bound on t f for a given s f , see
Fig. 7.8. Condition FL B2 reads t f ≥
6s f /amax , while condition FL B1 reads t f ≥
3s f /(2vmax ). The unconstrained minimal energy consumption is found as

(cid:4)

E ∗
b

= mhs f + bh2t f +

12bs2
f
t 3
f

.

191

s f

(7.30)

(7.31)

192

7 Speciﬁc Scenarios and Applications

7.5 Speed Limit

In this section, we discuss the eco-driving along a route in the presence of a maximum
speed limit,

v(t) − vmax (t) ≤ 0,

t ∈ [0, t f ] ,

(7.32)

which is a pure state constraint of the form (6.5). The key factor for effective eco-
driving in such a situation is the ability to anticipate the limit and its variability along
the route.

A numerical analysis of this scenario is presented in Sect. 7.5.1. Then in Sect.
7.5.2 we use closed-form solutions of ED-OCP (6.64) to corroborate the numerical
results and highlight the inﬂuence of the preview ability and other parameters of the
problem.

7.5.1 Numerical Analysis

We consider a trip having ﬁxed distance s f and duration t f , with a constant speed
limit vmax . The unconstrained optimal speed proﬁle, used as a baseline, is denoted as
v∗(t). We further compare predictive (P) and non-predictive (NP) constrained optimal
speed proﬁles, as they have been deﬁned in Sect. 7.4. The latter has no information
about the upcoming limit, while predictive eco-driving perfectly anticipates the speed
constraint.

Speed proﬁles P and NP can be obtained numerically using the methods intro-
duced in Chap. 6. With dynamic programming, a speed constraint is easily enforced
by making unfeasible all the points of the grid that exceed the limit value. The pre-
dictive speed proﬁle is thus obtained by solving the constrained OCP for the original
boundary conditions, see Table 7.1. The non-predictive speed proﬁle is obtained by
concatenating (i) the unconstrained solution until a time tN , such that v∗(tN ) = vmax ,
with (ii) the solution of the constrained OCP from tN to the end time, with a distance
to cover s f − s∗(tN ), an initial speed equal to vmax and a ﬁnal speed of zero.

Table 7.1 Boundary conditions for the speed-limit-constrained scenario
Constrained
optimiza-
tion?

Duration

Distance

Initial speed End speed

Unconstrained

Predictive

Non-predictive

#1

#2

N

Y

N

Y

t f
t f
tN
t f − tN

s f
s f
s∗(tN )
s f − s∗(tN )

0

0

0
vmax

0

0

vmax
0

7.5 Speed Limit

(a)

60

]
h
/
m
k
[

d
e
e
p
S

40

20

0

0

193

P
NP

(b)

]

%

[

ε

20

10

U
P
NP

50

100

Time [s]

0
46

48

50

52

vmax [km/h]

Fig. 7.9 Unconstrained optimal (U), predictive (P), and non-predictive (NP) strategies for a trip
with s f = 1500 m, t f = 120 s, vi = v f = 0, vmax = 50 km/h. Speed proﬁles (a) and performance
indexes (b)

Figure 7.9a shows the three speed proﬁles for s f = 1500 m, t f = 120 s, vi =
v f = 0, vmax = 50 km/h, computed with the DP Algorithm 6 and the EV model of
Table 6.3. Note how the non-predictive speed proﬁle is forced to keep the top speed
longer than the P proﬁle in order to cover the prescribed distance in the prescribed
time.

As a measure of performance of the eco-driving strategies, the relative energy loss

with respect to the unconstrained optimum is deﬁned as

ε({P,N P}) (cid:2)

E

({P,N P})
b

− E ∗
b

,

E ∗
b

(7.33)

where E ∗
b is the energy consumption for the unconstrained optimal strategy and
({P,N P})
E
are those for the predictive and non-predictive strategy, respectively.
b
The values obtained for ε(P) and ε(N P) for the aforementioned scenario are plotted
in Fig. 7.9b as a function of the speed limit. The latter has an inﬂuence only if it is
smaller than the maximum speed reached in the unconstrained case (53 km/h for this
scenario). Clearly, the energy losses increase dramatically as the speed constraint
becomes more aggressive, because the vehicle does not have enough time to take
advantage of coasting.

7.5.2 Analytical Approach

In order to retrieve and explain the behavior shown by the numerical results of the
previous section, we use the simpliﬁed EV model of Sect. 6.5.3.3, for which explicit
solutions of the ED-OCP can be calculated. We assume that the maximum road speed
limit is held constant over the sub-trip.

194

7 Speciﬁc Scenarios and Applications

This model, with vi = v f = 0, yields an unconstrained optimal speed proﬁle v∗
given by (7.30) and an overall energy consumption E ∗
b given by (7.31), and will
be now compared with the values achieved by the predictive and the non-predictive
strategies as a function of vmax .

For later use, we introduce here the ratio between the speed limit and the maximum

speed in the unconstrained case (larger speed limits would have no effect),

rs (cid:2) 2vmax t f
3s f

,

(7.34)

with 2/3 < rs < 1 by virtue of condition FL B1 (see Sect. 7.4).

7.5.2.1 Predictive Strategy

Anticipating the presence of the speed limit allows the implementation of a
constrained-optimal speed proﬁle. The necessary conditions for optimality are
obtained from (6.72) in the Lagrangian form with the addition of the conditions
(6.31)–(6.34). Using the nomenclature introduced in Sect. 6.2.2.1, the speed con-
straint g(x(t), t) = v(t) − vmax ≤ 0 is of the ﬁrst order ( p = 1), since ˙g = g(1) =
˙v = u p − h. Additionally, we have ∂g/∂v = 1, ∂g/∂s = 0 and, from the assumption
of constant vmax , ∂g/∂t = 0. Therefore, the system of equations to be solved reads

⎧

⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩

s(0) = 0,

s(t f ) = s f

v(0) = vi ,

v(t f ) = v f

˙s = v(t),
˙v = u p(t) − h,
˙λ = −mu p(t) − μ, λ(0) = λ0
u p(t) = − 1
2b
η(t)g(v(t)) = 0, η(t) ≥ 0,
λ(τ −) = λ(τ +) + π0, π0 ≥ 0, π0g(v(t)) = 0
H (τ −) = H (τ +)

(λ(t) + mv(t) + η(t))

˙η ≤ 0

(7.35)

where τ is a junction time (entry or contact time) for the constraint and the Hamil-
tonian is H = mu pv + bu2
p

+ λ(u p − h) + μv.

When the speed constraint is not active (interior intervals), η(t) ≡ 0 and the opti-
mal control input is linear in time with a constant derivative ˙u p = (μ + mh)/(2b).
Thus the speed is quadratic in time as in the unconstrained case, see (6.73)–(6.74). The
jump conditions together with the algebraic relation between u p and λ imply the con-

7.5 Speed Limit

195

tinuity of the control input.1 Since inside the boundary interval (when the constraint
is active), it must be ˙v ≡ 0, which is ensured by u p ≡ h, then u p(τ −) = u p(τ +) = h.
Once the solution has left the ﬁrst boundary interval, the control input keeps
varying with time with the same constant derivative as in the ﬁrst interior interval.
That means that the trajectory u p(t) cannot reach the boundary value h more than
once. In other terms, the speed constraint can be active only on a single boundary
interval, between an entry time t1 and an exit time t2. The constrained-optimal control
law is thus made up of just three phases, see Fig. 7.11a.

Given the constancy of ¨v = (μ + mh)/(2b) − h in the two unconstrained
(parabolic) phases and the symmetric boundary conditions vi = v f = 0, the two
unconstrained phases must be symmetrical, thus t2 = t f − t1. Further imposing the
continuity of the control input at the junction times (˙v(t1) = ˙v(t2) = 0), the speed
proﬁle is completely characterized by the boundary conditions and the unknown
parameter t1. Explicitly, it reads2

t − vmax
t 2
1

t 2,

v(t) =

⎧

2vmax
⎪⎪⎪⎪⎨
t1
vmax ,
⎪⎪⎪⎪⎩
2vmax
t1

(t f − t) − vmax
t 2
1

(t f − t)2,

t ∈ [0, t1)

.

t ∈ [t1, t2]
t ∈ (t2, t f ]

The time t1 is found by imposing the overall distance,

t1 = 3
2

· vmax t f − s f
vmax

.

We ﬁnd now the conditions F(t f , s f ) ≥ 0 for which (7.36) is an admissible speed
proﬁle. As discussed earlier, the general conditions on the unconstrained speed proﬁle
FU B1 and FU B2 are both inactive for vi = v f = 0, while FL B1 and FL B2 ﬁx the
unconstrained lower bound.

This lower bound can be exceeded by the constrained speed proﬁle, as discussed

in detail in Appendix B. A ﬁrst obvious constraint is

(7.36)

(7.37)

(7.38)

vmax − s f
t f

≥ 0 .

1Denoting H (τ −) − H (τ +) with (cid:5)H and analogously for the other jumps at a junction time, we
can compute (cid:5)H = mv(cid:5)u p + b(cid:5)u2
+ (cid:5)(λu p) − h(cid:5)λ from the Hamiltonian deﬁnition and the
p
fact that (cid:5)v = 0. The algebraic relation between λ and u p provides (cid:5)λ = −2b(cid:5)u p − (cid:5)η, which
equals −2b(cid:5)u p + η for the slack conditions, and (cid:5)(λu p) = −2b(cid:5)u2
− mv(cid:5)u p − (cid:5)(ηu p),
p
− mv(cid:5)u p − ηh by construction. Combining these equations, we obtain
which equals −2b(cid:5)u2
p
+ 2bh(cid:5)u p. Since this quantity must be zero for the jump conditions, (cid:5)u p = 0
(cid:5)H = −b(cid:5)u2
p
results.
2See Appendix B for the general solution when vi (cid:10)= 0, v f

(cid:10)= 0.

196

7 Speciﬁc Scenarios and Applications

Fig. 7.10 Domain of
feasibility of the
unconstrained speed proﬁle
(shaded gray area) and of the
constrained speed proﬁle
(dark gray area) in the plane
t f –s f for the limit speed
scenario. The curves shown
are: FL B1 (purple), FL B2
(blue), FL B2(cid:11) (black), and the
inactive constraint (7.38)
(dashed)

t f

B

A ≡ C

s f

On the other hand, limiting the acceleration/deceleration of the constrained speed
proﬁle to a maximum value amax , that is, imposing ˙v(0) = −˙v(t f ) = amax yields

FL B2(cid:11)(t f , s f ) (cid:2) vmax t f − s f − 4v2
max
3amax

≥ 0 .

(7.39)

Note that the latter condition implicitly ensures that t1 given by (7.37) is a positive
quantity. It also is intrinsically more restrictive than (7.38), which is thus never active.

The domain of feasibility is illustrated in Fig. 7.10.
Finally, the effective energy consumption, as deﬁned in (6.76) for the uncon-
strained proﬁle, is evaluated by particularizing and summing (6.76) for the three
phases, with phase 2 that has no contribution. After tedious calculations, we obtain

E

(P)
b,e

=

12bs2
f
t 3
f

(cid:8)

(cid:9)

.

r 3
s
3rs − 2

(7.40)

7.5.2.2 Non-predictive Strategy

The non-predictive strategy initially follows the unconstrained optimal speed proﬁle
v∗(t). Then, at a time tN , the speed limit is reached and the strategy is forced to keep
the speed constant. As the numerical results of the previous section have shown, there
is a time, denoted here as tN < tT < t f , when the NP strategy retrieves a sub-optimal
(parabolic, within the assumption of the model) speed proﬁle until stop. Therefore the
NP speed proﬁle is made of three phases and, imposing the continuity of the control
input (˙v(tT ) = 0), it is completely characterized by the boundary conditions and the
unknown parameters tN , tT . The latter are found by imposing that v∗(tN ) = vmax and
the overall distance.

7.5 Speed Limit

The ﬁrst condition, using (7.30) and (7.34), yields
(cid:15)

(cid:14)

(cid:4)

tN = t f
2

1 −

1 − rs

,

while the second condition yields

tT = t f

(cid:8)

− 1
2

+ 1
rs

−

(cid:9) (cid:4)

(cid:8)
1 − 1
rs

(cid:9)

1 − rs

.

The effective energy consumption is ﬁnally found as

(cid:8)

3r 2
s

E

(N P)
b,e

=

6bs2
f
t 3
f

+ 2rs − 3 + (2r 2
s
4rs − 3

√

− 5rs + 3)

1 − rs

(cid:9)

,

where sN (cid:2) s∗(tN ) is easily evaluated from (7.30).

7.5.2.3 Analysis

As a measure of performance of eco-driving strategies, we use here the relative
effective energy loss with respect to the unconstrained optimum, deﬁned as

With this deﬁnition, the inﬂuence of vehicle parameters vanishes and (7.44) is a
function of the scenario parameter rs only.

For the predictive strategy,

ε({P,N P})
e

(cid:2)

E

({P,N P})
b,e

− E ∗
b,e

.

E ∗
b,e

= r 3

s

ε(P)
e

− 3rs + 2
3rs − 2

,

while for the non-predictive strategy

= 3r 2

s

ε(N P)
e

− 6rs + 3 + (2r 2
s
2(4rs − 3)

− 5rs + 3)

1 − rs

.

√

Functions (7.45)–(7.46) are plotted in Fig. 7.11b. Although they cannot be compared
quantitatively, the analytical predictions show the same trend of the numerical results
of Fig. 7.9. Note that the energy losses become unrealistically high as rs approaches
its lower bound of 2/3 (when s f = vmax t f the acceleration and deceleration phases
become inﬁnitely fast).

197

(7.41)

(7.42)

(7.43)

(7.44)

(7.45)

(7.46)

198

(a)
Speed

vmax

7 Speciﬁc Scenarios and Applications

P
NP

(b)

]
-
[

e

ε

10

5

0

t1

tN

t2

tT

Time

rs [-]

0.7

0.8

0.9

1

Fig. 7.11 Schematic strategies for the limit speed scenario: unconstrained optimal, non-predictive
sub-optimal, and predictive (a); performance index as a function of the parameter rs (b)

7.6 Intersection

This section discusses the effect of an intersection or a stop sign in the middle
of a route that is otherwise unconstrained. This circumstance imposes the interior
constraints

s(tt ) = st ,

v(tt ) = vt ,

(7.47)

with st denoting the position of the intersection, vt the prescribed crossing speed,
while the crossing time tt is free.

A numerical analysis of this scenario is presented in Sect. 7.6.1. Then in Sect. 7.6.2
we use closed-form solutions of the ED-OCP (6.64) to corroborate the numerical
results and highlight the inﬂuence of the preview ability and other parameters of the
problem.

7.6.1 Numerical Analysis

As in the previous sections, we consider a trip having a ﬁxed distance s f and duration
t f . The unconstrained optimal speed proﬁle, used as a baseline, is denoted as v∗(t).
We further compare predictive (P) and non-predictive (NP) constrained optimal speed
proﬁles, as they have been deﬁned in Sect. 7.4. The latter has just some limited visual
preview of the intersection, quantiﬁed by the preview distance rt st (0 ≤ rt < 1), while
predictive eco-driving perfectly anticipates the intersection constraint with unlimited
preview distance (rt = 1).

Speed proﬁles P and NP can be obtained using the methods introduced in Chap. 6.
In particular, if the intersection crossing time tt , is ﬁxed, the optimization of the trip
ahead of the intersection becomes independent from that after it. The predictive speed
proﬁle is thus obtained by solving a ﬁrst unconstrained OCP from the initial time to

7.6 Intersection

199

Table 7.2 Boundary conditions for the intersection-constrained scenario

Unconstrained
Predictive

Non-
predictive

#1
#2
#1

#2
#3

(a)

60

40

20

]
h
/
m
k
[
d
e
e
p
S

0

0

Initial speed

End speed

0
0
vt
0

v∗(tN )
vt

0
vt
0
v∗(tN )

vt
0

P
NP

Duration
t f
tt
t f − tt
tN

tt − tN
t f − tt

U
P
NP

Distance
s f
st
s f − st
st (1 − rt )

rt st
s f − st

(b)

]

%

[

ε

50

40

30

50

100

Time [s]

0

200

400

600

prev. distance [m]

Fig. 7.12 Unconstrained optimal (U), predictive (P), and non-predictive (NP) strategies for a trip
with s f = 1500 m, t f = 120 s, vi = v f = 0, st = s f /2 = 750 m, vt = 0. Speed proﬁles (a) and
performance indexes (b)

the crossing time, then a second one from tt to the end time. As for the NP speed
proﬁle, it results from the concatenation of: (i) the unconstrained optimal speed proﬁle
until the time tN at which the intersection is detected, such that s∗(tN ) = st (1 − rt ),
(ii) the solution of an unconstrained OCP from time tN to the crossing time tt , and
(iii) downstream of the intersection, the solution of an unconstrained OCP from tt to
the end time. In both cases, the crossing time tt is further optimized to have minimal
energy consumption. See Table 7.2 for a more detailed list of the respective boundary
conditions.

Figure 7.12a shows the three speed proﬁles for s f = 1500 m, t f = 120 s, vi =
v f = 0, st = s f /2 = 750 m, vt = 0 (stop), rt = 0.2 (preview distance of 150 m),
computed with the DP Algorithm 6 and the EV model of Table 6.3. The optimal
crossing time for the predictive strategy is found as tt = t f /2 = 60 s, which yields
two equal speed proﬁles before and after the intersection, while for the NP strategy
it is found to be around 64 s.

The values of the measures of performance (7.45) are plotted in Fig. 7.12b as
a function of the preview distance. While ε(P) does not depend on the preview
distance, ε(N P) generally decreases with it. Note that the optimal crossing time in

200

7 Speciﬁc Scenarios and Applications

the NP strategy varies with the preview distance, ranging from 65 s at small preview
distances, while decreasing to 60 s as rt increases.

7.6.2 Analytical Approach

In order to retrieve and explain the behavior shown by the numerical results of the
previous section, we use the simpliﬁed EV model of Sect. 6.5.3.3, for which explicit
solutions of the ED-OCP can be calculated.

In particular, the beneﬁts of preview and anticipation are analyzed as a function
of two parameters, namely the preview distance and the crossing speed, while setting
the intersection position at st = s f /2. We deﬁne for later use the ratio between the
crossing speed vt and the average speed along the route,

with 0 ≤ rv ≤ 3/2 since vt cannot exceed the top speed of the unconstrained scenario,
2/3(s f /t f ). As for the preview distance, we convert it into a more easily treatable
preview time, by using the average speed of the unconstrained proﬁle. In such a way,
the ratio rt takes the new formulation

rv (cid:2) vt t f
s f

,

rt = tt − tN

,

tt

(7.48)

(7.49)

with rt ∈ [0, 1].

7.6.2.1 Predictive Strategy

The predictive speed proﬁle is composed of two separate parabolic phases, before and
after the intersection. Imposing the crossing speed and the distance of both phases,
the P proﬁle is completely deﬁned by the crossing time tt , see Fig. 7.13. The optimal
value for this parameter is found by minimizing the consumption. Using (7.30), the
effective energy consumption as a function of tt is
(cid:8)

(cid:8)

(cid:9)

(cid:9)

(cid:16)

E

(P)
b,e

(tt ) = bs2
f

3

1
t 3
t

+

1
(t f − tt )3

− 6

rv
t f

+

1
t 2
t

+ 4

1
(t f − tt )2
(cid:8)
r 2
v
t 2
f

1
tt

+

+

(cid:9)(cid:17)

,

1
(t f − tt )2

(7.50)

7.6 Intersection

Fig. 7.13 Schematic
strategies for the intersection
scenario: unconstrained
optimal, non-predictive
sub-optimal, and predictive,
with rv = 0

speed

tN

tt

tA

The minimum of this function is obtained for

(P)
∂ E
b,e
∂tt

= 0 → tt = t f
2

,

meaning that the predictive speed proﬁle is made of two equal phases, the result
numerically found in Sect. 7.6.1. With this optimal crossing time, the effective con-
sumption is derived as

E

(P)
b,e

=

16bs2
f
t 3
f

(cid:18)
3 − 3rv + r 2
v

(cid:19)

.

7.6.2.2 Non-predictive Strategy

The non-predictive strategy initially follows the unconstrained optimal speed proﬁle
v∗. This phase ends at time tN = tt (1 − rt ) when the presence of the intersection is
detected. The corresponding distance and speed are easily evaluated as

s∗(tN ) = s f
4
v∗(tN ) = 3s f
2t f

(2 − 3rt + r 3
t

) ,

(1 − r 2
t

) ,

respectively. The intersection is then approached with a second parabolic proﬁle
to be reached at time tt . After that, a third parabolic speed proﬁle is performed
until stop at the ﬁnal distance. Imposing the crossing speed and the distance of the
two latter phases, the NP speed proﬁle is completely characterized by the boundary
conditions and the unknown parameter tt . The latter should in principle be found
by minimizing the energy consumption, similarly to the predictive scenario. Instead

201

time

(7.51)

(7.52)

(7.53)

(7.54)

202

7 Speciﬁc Scenarios and Applications

of attempting such an optimization that would lead to formulas difﬁcult to manage,
we shall consider for simplicity the same value as in the predictive scenario, i.e.,
tt = t f /2, for which the overall consumption is derived as

E

(N P)
b,e

=

4bs2
f
t 3
f

·

(9 − 12rv + 4r 2
v

) + rt (15 − 12rv + 4r 2
v

)

.

(7.55)

2rt

Note that for rt = 1, the fully predictive result (7.52) is retrieved.

7.6.2.3 Analysis

The performance indexes for the predictive and the two non-predictive strategies are
obtained from (7.52), (7.55) as

ε(P)
e

=

(3 − 2rv)2
3

ε(N P)
e

=

(1 + rt )(3 − 2rv)2
6rt

.

Functions (7.56)–(7.57) are plotted in Fig. 7.14a. As in the previous section, these
results are not quantitatively comparable with the numerical ones shown in Fig. 7.12.
However, the qualitative trend shows that, as the preview horizon increases, energy
loss of the non-predictive strategy monotonically decreases.

On the other hand, the energy loss decreases with an increase of the desired speed
at the intersection, as shown in Fig. 7.14b for a preview distance corresponding to
rt = 0.25. If the vehicle must stop at the trafﬁc signal (rv = 0), the resulting energy
loss with the NP strategy is several times higher than that of the P strategy, which is
due to higher electric losses during the regenerative braking process.

(7.56)

(7.57)

P
NP

and

(a)

10

]
-
[

e

ε

5

P
NP

(b)

]
-
[

e

ε

10

5

0

0

0.2

rt [-]

0.4

0

0

0.5

1

1.5

rv [-]

Fig. 7.14 performance indexes for the intersection scenario as a function of the parameters rt (a)
and rv (b)

7.6 Intersection

203

These results are largely independent of the choice of the boundary conditions.
For a slightly different scenario where the vehicle would cruise at a constant speed if
the intersection was not present (vi = v f = s f /t f ), the effective energy consumption
of the three strategies are

E ∗
b,e

= 0, E

(P)
b,e

=

(1 − rv)2, E

(N P)
b,e

=

(1 − rv)2

16bs2
f
t 3
f

8bs2
f
t 3
f

(cid:9)

(cid:8)
1 + 1
rt

,

(7.58)

showing a similar dependency on rv, rt than (7.52)–(7.55).

7.7 Trafﬁc Light

The scenario studied in this section is the presence of a signalized intersection (trafﬁc
light) in the middle of the route (at st = s f /2), allowing the crossing only during
ﬁxed time slots that correspond to the green light periods. In particular, the light is
set to be red at time t f /2. Denoting the crossing time with tt (such that s(tt ) = st ),
the constraint reads

tt ≤ t f
2

(1 − rx ) ∨ tt ≥ t f
2

(1 + rx ) ,

(7.59)

where rx is the parameter that deﬁnes the duty cycle of the trafﬁc light (see Sect. 4.1.3)
and Fig. 7.15.

A numerical analysis of this scenario is presented in Sect. 7.7.1. Then, in Sect. 7.7.2
we use closed-form solutions of ED-OCP (6.64) to corroborate the numerical results
and highlight the inﬂuence of the preview ability and other parameters of the problem.

Fig. 7.15 Schematic
deﬁnition of the trafﬁc light
scenario

position

s f

st

red light

t f
2

(1 − rx)

t f
2

(1 + rx)

time

t f

204

7 Speciﬁc Scenarios and Applications

Table 7.3 Boundary conditions for the trafﬁc-light-constrained scenario

Unconstrained
Predictive

Non-
predictive

#1
#2
#1

#2
#3

Initial speed

End speed

Duration
t f
tt
t f − tt
tN

tA − tN
t f − tA

Distance
s f
st
s f − st
s∗(tN )

0
0
vt
0

st − s∗(tN )
s f − st

v∗(tN )
0

0
vt
0
v∗(tN )

0
0

7.7.1 Numerical Analysis

As in the previous sections, we consider a trip having a ﬁxed distance s f and duration
t f . The unconstrained optimal speed proﬁle, used as a baseline, is denoted as v∗(t).
We further compare predictive (P) and non-predictive (NP) eco-driving, as they have
been deﬁned in Sect. 7.4. The latter has just visual information of the signal phase and
color, while predictive eco-driving perfectly anticipates the trafﬁc light constraint.

The enforcement of the interior constraint (7.59) requires that the optimization of
the speed proﬁles P and NP is made with a DP algorithm having speed and time as
state variables. To speed up the calculation, a single-state DP code can still be used,
provided that time tt is considered a free parameter to be further optimized.

For the predictive strategy, we can reasonably assume from physical consider-
ations that the optimal choice for tt is to equal the last useful green time, that is,
tt = t f /2(1 − rx ).3 The original OCP can thus be split into two partial OCPs, before
and after the trafﬁc light crossing. However, these two OCPs are not independent as
in the intersection case of Sect. 7.6, but coupled by the crossing speed vt that plays
the role of ﬁnal speed in the former OCP and initial speed in the latter. The parameter
vt must therefore be further optimized to have the minimal energy consumption.

As for the NP speed proﬁle, it ﬁrst follows the unconstrained solution until the
time at which the trafﬁc light is assumed to be detected, which we also set at tN =
t f /2(1 − rx ) = tt . Then, having no preview about the red phase duration, the NP
strategy should decelerate and stop in an arbitrary time, and wait for the next green
phase. The faster the deceleration, the larger is the energy consumption. We consider
the best-case scenario (from the NP perspective), where the strategy exactly chooses
to stop at the last time on red, tA = t f /2(1 + rx ), only to start again soon after.
Thus, the rest of the NP proﬁle is found by concatenating (i) the solution of an
unconstrained OCP from time tt to the time tA, and (ii) after the trafﬁc light, the
solution of an unconstrained OCP from tA to the end time. See Table 7.3 for a more
detailed list of the respective boundary conditions of the three strategies.

3Due to the symmetry of the problem in this particular case, the same result would be obtained with
tt as the ﬁrst useful green time after the central red phase.

7.7 Trafﬁc Light

205

(b)

800

]

m

[
n
o
i
t
i
s
o
P

600

400

200

0

0

U
P
NP

50

100

Time [s]

(a)

]
h
/
m
k
[

d
e
e
p
S

40

20

0

0

U
P
NP

50

100

Time [s]

(c)

]

%

[

ε

20

10

0

0

0.1

0.2
rx [-]

0.3

Fig. 7.16 Unconstrained optimal (U), predictive (P), and non-predictive (NP) strategies for a trafﬁc
light scenario with s f = 800 m, t f = 120 s, vi = v f = 0, st = s f /2 = 400 m, rx = 0.3. Speed (a)
and position (b) proﬁles and performance indexes (c)

Figure 7.16a shows the three speed proﬁles for s f = 800 m, t f = 120 s, vi =
v f = 0, st = s f /2 = 400 m, rx = 0.3, computed with the DP Algorithm 6 and the
EV model of Table 6.3. Figure 7.16b shows the respective position trajectories,
together with the forbidden window with the trafﬁc light being red. The optimal
crossing speed of the predictive strategy is found to be around 30 km/h in this case.
The values of the measures of performance (7.33) are plotted in Fig. 7.16c as a
function of the duty cycle parameter rx . While ε(P) increases with an increase of
rx and tends to zero as rx tends to zero, ε(N P) results from two opposite trends and
shows a minimum. On the one hand, small values of rx mean small preview times
and strong decelerations/accelerations to catch the new green period. On the other
hand, large values of rx mean longer red intervals and thus stronger accelerations in
the second green period to complete the trip.

206

7 Speciﬁc Scenarios and Applications

7.7.2 Analytical Approach

In order to retrieve and explain the behavior shown by the numerical results of the
previous section, we use the simpliﬁed EV model of Sect. 6.5.3.3, for which explicit
solutions of the ED-OCP can be calculated.

7.7.2.1 Predictive Strategy

The predictive strategy perfectly anticipates the presence of the trafﬁc light and
chooses the optimal crossing time and speed satisfying the constraint imposed by its
timing. As discussed above, we assume the optimal timing choice as tt = t f /2(1 −
rx ). However, the crossing speed vt is free and can be optimized. Similarly to (7.50),
we evaluate the overall consumption as a function of vt ,

(cid:2)

E

(P)
b,e

(vt ) = 4b

12s2
f
t 3
f

1 + 3r 2
x
)3
(1 − r 2
x

− 12s f vt
t 2
f

1 + r 2
x
)2
(1 − r 2
x

+ 4v2
t f

t

1
(1 − r 2
x

)

(cid:3)

.

(7.60)

The minimum of function (7.60) is obtained for

(P)
∂ E
b,e
∂vt

= 0 → vt = 3s f
2t f

· 1 + r 2
x
1 − r 2
x

.

Note that for rx = 0 the top speed of the unconstrained optimal proﬁle is retrieved.
With this choice of crossing speed, the effective consumption is derived as

(7.61)

(7.62)

E

(P)
b,e

=

12bs2
f
t 3
f

· 1 + 6r 2
x
(1 − r 2
x

− 3r 4
x
)3

and equals the unconstrained optimum for rx = 0.

7.7.2.2 Non-predictive Strategy

For the non-predictive strategy, we set tN = t f /2(1 − rx ) and we impose a stop
(vt = 0) at the trafﬁc light at time tA = t f /2(1 + rx ), as in the numerical analysis.
Thus the effective consumption is derived as

E

(N P)
b,e

=

12bs2
f
t 3
f

·

(1 + r 2
x

)(3 + rx (31 + (−3 + rx )rx (8 + r 2
x

))

.

(7.63)

16(1 − rx )3rx

7.7 Trafﬁc Light

Fig. 7.17 Performance
index for the trafﬁc light
scenario as a function of the
parameter rx

10

5

]
-
[

e

ε

P
NP

0

0

0.2

rx [-]

0.4

207

(7.64)

(7.65)

7.7.2.3 Analysis

The performance indexes (7.44) are evaluated as

ε(P)
e

= r 2

(3 − r 2
)2
x
x
)3
(1 − r 2
x

and

= 3 + 15rx + 27r 2

x

ε(N P)
e

− 9r 3
− 11r 4
x
x
16(1 − rx )3rx

+ 9r 5
x

− 3r 6
x

+ r 7
x

.

Figure 7.17 shows the two functions (7.64)–(7.65) as a function of the parameter rx .
Clearly, the trend numerically obtained and shown in Fig. 7.16c is retrieved, with
ε(P) increasing with rx and ε(N P) showing a minimum.

These results are largely independent of the particular boundary conditions cho-
sen. For a slightly different scenario where the vehicle is cruising at a constant speed
(vi = v f = s f /t f ) except for the trafﬁc light, the effective energy consumption of
the three strategies are

E ∗
b,e

= 0, E

(P)
b,e

=

48bs2
f
t 3
f

·

r 2
x
(1 − rx )3

, E

(N P)
b,e

=

8bs2
f
t 3
f

· 1 + rx + r 2
(1 − rx )3

x

,

(7.66)

showing a similar dependency on rx to (7.62)–(7.63).

7.8 Car Following

In the scenario of this section, the host vehicle is subject to avoiding rear-end colli-
sions with a preceding vehicle, whose motion is described by a temporal law s p(t).

208

7 Speciﬁc Scenarios and Applications

That imposes a constraint of the type

s(t) − (s p(t) − smin(v(t), v p(t))) ≤ 0,

t ∈ [0, t f ] ,

(7.67)

where smin is the minimum inter-vehicle safe distance. The latter quantity can actually
describe a distance headway or a time headway enforced by the road law or other
considerations. While the minimal safe distance headway is usually a constant, the
minimal safe time headway depends on the relative speed of the two vehicles. In
this section, we shall assume that the safe distance at most depends on the preceding
vehicle’s speed v p only (not on the host vehicle’s speed), and thus it will be considered
as a prescribed function of time, smin(t).

A numerical analysis of this scenario is presented in Sect. 7.8.1. Then in Sect.
7.8.2 we use closed-form solutions of ED-OCP (6.64) to corroborate the numerical
results and highlight the inﬂuence of the preview ability and other parameters of the
problem.

7.8.1 Numerical Analysis

Position constraint (7.67) plays the role of a state constraint in the ED-OCP. Addi-
tionally, there might be speed constraints such as those studied in Sect. 7.5. The
key factor for performing eco-driving in such a situation is the ability to detect the
position and the velocity of the preceding vehicle. That is usually feasible with cur-
rent ADAS-type sensors (see Sect. 3.2.1), which nevertheless have a ﬁnite range.
An extension of the preview distance provided by standard ADAS sensors could be
made possible by the use of dedicated vehicle-to-vehicle or vehicle-to-infrastructure
communication (see Sect. 3.1).

As in the previous sections, we consider a trip having a ﬁxed distance s f and
duration t f . The preceding vehicle is assumed to advance at constant acceleration,
that is, we assume s p(t) = s p,0 + v p,0t + a pt 2/2.4 The unconstrained optimal speed
proﬁle, used as a baseline, is denoted as v∗(t). We further compare predictive (P) and
non-predictive (NP) constrained optimal speed proﬁles, as they have been deﬁned in
Sect. 7.4. The latter has just a limited preview of the preceding vehicle, deﬁned by
the preview distance rd s f , with 0 ≤ rd ≤ 1. Here we consider only the case rd = 0.
The predictive eco-driving perfectly anticipates the preceding vehicle constraint with
unlimited preview distance (rd = 1).

The speed proﬁle P is obtained using the methods introduced in Chap. 6. In partic-
ular, a full two-state DP code can be used, with time as the independent variable and
velocity and position as state variables. In this way it is possible to enforce the posi-
tion constraint directly, by making unfeasible all the points of the position grid that

4In Chap. 9, we present a case study where motion of the preceding vehicle is modeled as a Markov
chain and predicted probabilistically.

7.8 Car Following

209

Table 7.4 Boundary conditions for the position-constrained scenario
Constrained
optimiza-
tion?

Duration

Distance

Initial speed End speed

Unconstrained
Predictive
Non-
predictive

#1

#2

N
Y
N

Y

t f
t f
tN

s f
s f
s∗
p

(tN )

0
0
0

0
0
v∗(tN )

t f − tN

s f − s∗(tN ) v p(tN )

0

exceed the maximal allowed position s p(t) − smin(t). The predictive speed proﬁle is
thus obtained by solving the constrained OCP for the original boundary conditions,
see Table 7.4. The non-predictive speed proﬁle is obtained by concatenating (i) the
unconstrained solution until a time tN such that s∗(tN ) = s p(tN ) − smin(tN ) with (ii)
the solution of the constrained OCP from tN to the end time, with a distance to cover
s f − s∗(tN ), an initial speed equal to v∗(tN ) and a ﬁnal speed of zero. Note that this
deﬁnition might imply an unrealistic speed discontinuity at tN if v p(tN ) < v∗(tN ).
Figure 7.18a, b shows the U and P proﬁles in terms of speed and position computed
with the two-state DP and the EV model of Table 6.3 for s f = 500 m, t f = 60 s, vi =
v f = 0, and two leader’s scenarios: s p,0 = 20 m, v p,0 = 15 km/h, a p = 0.14 m/s2
(P1) and s p,0 = 50 m, v p,0 = 15 km/h, a p = 0.17 m/s2 (P2). Clearly, the P proﬁles
present milder initial accelerations to allow a rendez-vous with the leader when the
two vehicles have the same speed. For the sake of ﬁgure readability, these ﬁgures do
not show the NP proﬁles.

(a)

60

]
h
/
m
k
[
d
e
e
p
S

40

20

0

0

U
P1
P2

(b)

600

]

m

[

n
o
i
t
i
s
o
P

400

200

0

0

20

40

60

20

40

60

Time [s]

Time [s]

Fig. 7.18 Unconstrained optimal (U) and predictive (P) strategy for a trip with s f = 500 m, t f =
60 s, vi = v f = 0, s p,0 = {20, 50} m, v p,0 = 15 km/h, and a p = {0.14, 0.17} m/s2

210

7 Speciﬁc Scenarios and Applications

7.8.2 Analytical Approach

In order to retrieve and explain the behavior shown by the numerical results of the
previous section, we use the simpliﬁed EV model of Sect. 6.5.3.3, for which explicit
solutions of the ED-OCP can be calculated.

We further assume that the preceding vehicle departs from the same position as the
host vehicle (smin = 0) and drives at a constant speed, denoted by v p. A more general
case, including initial separation and relative speed between the two vehicles, and a
constant leader acceleration, is treated in Appendix B. The unconstrained solution
in terms of speed is still given by (7.30).

7.8.2.1 Predictive Strategy

The predictive speed proﬁle is the result of a constrained optimization. The nec-
essary conditions for optimality derive from (6.72) in the Lagrangian form with
the addition of the conditions (6.31)–(6.34). Using the nomenclature introduced
in Sect. 6.2.2.1, the position constraint g(x(t), t) = s(t) − v pt ≤ 0 is of the sec-
ond order ( p = 2), since ¨g = g(2) = ˙v = u p − h. Additionally, we have ∂g/∂s = 1,
∂g(1)/∂v = 1, ∂g/∂t = −v p, and ∂g(1)/∂t = ∂g(1)/∂s = ∂g/∂v = 0. Therefore, the
system of equations to be solved reads

⎧

⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩

s(0) = 0,

s(t f ) = s f

v(0) = vi ,

v(t f ) = v f

˙s = v(t),
˙v = u p(t) − h,
˙λ = −mu p(t) − μ, λ(0) = λ0
˙μ = 0, μ(0) = μ0
u p(t) = − 1
2b
η(t)g(s(t), t) = 0, η(t) ≥ 0,
λ(τ −) = λ(τ +) + π1
μ(τ −) = μ(τ +) + π0
π0 ≥ 0, π1 ≥ 0, π0g(s(t), t) = 0, π1g(s(t), t) = 0
H (τ −) = H (τ +) + π0v p

(λ(t) + mv(t) + η(t))

˙η ≤ 0,

¨η ≥ 0

(7.68)

where τ is a junction time (entry or contact time) for the constraint and the Hamil-
tonian is H = mu pv + bu2
p

+ λ(u p − h) + μv.

When the position constraint is not active, η(t) ≡ 0 and the optimal control input
is linear in time with a constant derivative ˙u p = (μ0 + mh)/(2b). Thus the speed
is quadratic in time as in the unconstrained case, see (6.73)–(6.74). The position
constraint can be active either on a boundary interval or at a contact point. Here
only the case with a contact point t1 is considered. The tangency conditions impose
that s(t1) = s p(t1) = v pt1 and v(t1) = v p. The jump conditions together with the

7.8 Car Following

211

algebraic relation between u p and λ imply the continuity of the control input at the
contact point.5

The constrained-optimal trajectory is thus made up of two parabolic phases sep-
arated by the contact point, see Fig. 7.20a, b. Imposing the tangency conditions,
the speed proﬁle is completely characterized by the boundary conditions and the
unknown parameter t1. Explicitly, it reads

v(t) =

⎧
⎪⎪⎨
⎪⎪⎩

4v p
t − 3v p
t 2,
t 2
t1
1
t + v p
3v p − 2v p
t1
t1

t ∈ [0, t1)

.

(7.69)

2t f − 3t1
(t f − t1)2

(t − t1)2,

t ∈ [t1, t f ]

Note that the ﬁrst of (7.69) implies that the ﬁrst phase has a maximum at 2/3t1. The
maximum speed reached is 4/3v p. Here we shall assume that this speed is lower than
any top speed limit.

The contact time is found by imposing the overall distance, yielding

t1 =

t 2
f v p
4t f v p − 3s f

.

(7.70)

We ﬁnd now the conditions F(t f , s f ) ≥ 0 for which (7.69) is an admissible speed
proﬁle. As discussed earlier, the general conditions on the unconstrained speed pro-
ﬁle FU B1, FU B2, and FL B1 are always satisﬁed when vi = v f = 0 and vmax → ∞.
Thus the only conditions to be fulﬁlled, which deﬁnes the limits of feasibility of
the unconstrained speed proﬁle, are FL B2 (maximum acceleration/deceleration) and
FL B3 that is imposed by the position constraint. The latter condition can be expressed
by the requirement that the quadratic-in-time equation s∗(t) = v pt has at most one
degenerate real root. As shown in Appendix B, that reads

FL B3(t f , s f ) (cid:2) 8v pt f − 9s f ≥ 0 .

(7.71)

The domain of feasibility of the unconstrained speed proﬁle can be exceeded
by the constrained speed proﬁle. However, we must obviously require that the ﬁnal
position does not exceed the ﬁnal leader position, that is,

FL B3(cid:11)(cid:11)(t f , s f ) (cid:2) v pt f − s f ≥ 0 .

(7.72)

Note that this condition implicitly ensures that t1 given by (7.70) is a positive quantity.

5Denoting H (τ −) − H (τ +) with (cid:5)H and analogously for the other jumps at a junction time, we
can compute (cid:5)H = mv p(cid:5)u p + b(cid:5)u2
+ (cid:5)(λu p) − h(cid:5)λ + v(cid:5)μ from the Hamiltonian deﬁnition
p
and the fact that (cid:5)v = 0. The algebraic relation between λ and u p provides (cid:5)λ = −2b(cid:5)u p − (cid:5)η,
which equals −2b(cid:5)u p for the slack conditions, and (cid:5)(λu p) = −2b(cid:5)u2
− mv p(cid:5)u p − (cid:5)(ηu p),
p
− mv p(cid:5)u p by construction. Combining these equations, we obtain (cid:5)H =
which equals −2b(cid:5)u2
p
+ 2bh(cid:5)u p + v p(cid:5)μ. Since this quantity must equal v pπ0 = v p(cid:5)μ for the jump conditions,
−b(cid:5)u2
p
(cid:5)u p = 0 results. In addition, π1 = (cid:5)λ = 0.

212

7 Speciﬁc Scenarios and Applications

In the position-constrained proﬁle’s domain of feasibility, the lower bound FL B2
is replaced by the condition that the maximum acceleration and deceleration of the
position-constrained proﬁle, a(0), are lower than amax and |amin| = amax , respec-
tively. That yields

FL B2(cid:11)(cid:11)a (cid:2) amax − 4
t 2
f

(4t f v p − 3s f ) ≥ 0 ,

(7.73)

which is always satisﬁed in the region of interest, and

FL B2(cid:11)(cid:11)d (cid:2) amax − 2
3t 2
f

(4t f v p − 3s f )(2t f v p − 3s f )
t f v p − s f

≥ 0 ,

(7.74)

which in turn limits the domain of feasibility of the position-constrained proﬁle.

The domain of feasibility in terms of s f , t f is illustrated in Fig. 7.19. For later

use, we introduce here a speed ratio

with 0 ≤ r p ≤ 1/8 as a consequence of (7.71).

Finally, the effective energy consumption is derived as

(7.75)

(7.76)

r p (cid:2) v p
s f /t f

− 1 ,

E

(P)
b,e

=

4bs2
f
9t 3
f

·

(4r p + 1)3
r p

.

t f

D

Fig. 7.19 Domain of
feasibility of the
unconstrained speed proﬁle
(shaded gray area) and the
constrained speed proﬁle
(dark gray area) in the plane
t f –s f for the car following
scenario. The curves shown
are: FL B2 (blue), FL B3
(yellow), FL B2(cid:11)(cid:11)a (dashed
green), FL B2(cid:11)(cid:11)d (dashed
blue), and FL B3(cid:11)(cid:11) (red). The
coordinates of the
intersection points are D:
(128/27σ , 16/3τ ), where
σ (cid:2) v2
p

/amax , τ (cid:2) v p/amax

A ≡ B ≡ C

s f

7.8 Car Following

213

7.8.2.2 Non-predictive Strategy

The non-predictive speed proﬁle initially follows the unconstrained optimal speed
proﬁle v∗, see Fig. 7.20. This phase ends at time tN when the preceding vehicle
is reached (assuming smin = 0). The preceding vehicle is then followed, assuming
for simplicity instantaneous adaptation (i.e., inﬁnitely fast deceleration) of the NP
speed to v p. This phase lasts until time tT , at which the non-predictive speed proﬁle
retrieves a parabolic sub-optimal proﬁle until stop.

Therefore, the speed proﬁle is made of three phases and, imposing continuity of the
control input at tT (˙v(tT ) = 0), it is completely determined by the boundary conditions
and the unknown parameters tN , tT . Imposing the condition s∗(tN ) = s p(tN ) = v ptN ,
the contact time is evaluated as

tN = 3t f
4

(cid:2)

(cid:20)

1 −

(cid:3)

.

1 − 8t f v p
9s f

(7.77)

On the other hand, the switching time tT is found by imposing the overall distance,
yielding

(a)
speed

(b)
position

tN

tT

t1

time

tN

tT

t1

time

(c)

2

]
-
[

e

ε

1.5

1

0.5

0

0

P
NP

5 · 10−2

rp [-]

0.1

Fig. 7.20 Schematic strategies for the car following scenario: unconstrained optimal (blue), predic-
tive (orange), and non-predictive (green) speed (a) and position (b) proﬁles; performance indexes
as a function of the parameter r p (c)

214

7 Speciﬁc Scenarios and Applications

tA = 3s f
v p

− 2t f .

(7.78)

Finally, the effective energy consumption is evaluated as

E

(N P)
b,e

=

4bs2
f
t 3
f

(1 + r p)2((1 + r p)
(cid:4)

·

1 − 8r p − 3(1 + 13r p))

.

(7.79)

9r p(

1 − 8r p − 3)

(cid:4)

7.8.2.3 Analysis

The performance indexes (7.44) are evaluated as

ε(P)
e

=

(1 − 8r p)2(1 + r p)
27r p

(7.80)

and

(cid:4)

9r p(1 + r p)

1 − 8r p + (1 − 2r p)(2 − 17r p − r 2
p

)

ε(N P)
e

=

.

(7.81)

Note that ε(P) goes to zero for r p = 1/8, where ε(N P) would be negative. It is thus
clear that the domain of feasibility of the NP proﬁle in terms of r p is smaller than
that of the P proﬁle. These trends are shown in Fig. 7.20c where the two performance
indexes are plotted as a function of the speed ratio r p.

54r p

*
* *

The scenarios presented in this chapter are obviously oversimpliﬁed and represent
real-life situations only in an idealized way. However, their analysis has allowed us
to identify for each of them the key parameters that induce energy inefﬁciencies and
how to alleviate them with predictive optimal driving control. While the existing
literature has often addressed these scenarios separately with ad hoc strategies, the
next chapter, grounded on the theory of Chap. 6, will discuss their implementation in
a uniﬁed eco-driving system. More realistic conclusions can be drawn after several
of these scenarios are treated in the detailed case studies of Chap. 9.

Chapter 8
Eco-Driving Practical Implementation

The aim of this section is to present a few practical implementation issues of eco-
driving. In Sect. 8.1 we shall discuss the various eco-driving systems that implement
partly or fully the concepts described in the previous chapters. All of these systems
use the localization, perception, and planning/control functions that have been treated
throughout this book. A few additional and speciﬁc algorithmic and implementation
issues are further detailed in Sect. 8.2. Then, we will discuss in Sect. 8.3 the issues
related to advising a human driver about the optimal speed to follow and the direct
implementation of eco-driving via an autonomous driving system.

8.1 Implementation of Eco-Driving Concepts

In this section we present, in order of increasing complexity and comprehensiveness,
eco-coaching (Sect. 8.1.1), PCC (8.1.2), eco-ACC (Sect. 8.1.3), and the most general
predictive eco-driving schemes (Sect. 8.1.4).

8.1.1 Eco-Coaching

Eco-coaching is the online assessment of the driving style of human drivers by
comparing their actual speed traces to the energy-optimal speed proﬁles. An example
of eco-coaching system that has been demonstrated for EVs and ICEs is Geco [1, 2].
Its practical implementation follows a number of steps as illustrated by the ﬂowchart
in Fig. 8.1.
Eco-Driving Practical Implementation

Recording

ˆv, ˆR
ˆα, vlim

B.C. &
Constraints

Bi

Ci

Optimi-
zation

Score
HMI

Driver &
Vehicle

v∗
i

i

Bkp
Id.

time loop t ← t + Δt

Fig. 8.1 Conceptual sketch of an eco-coaching system

The system is based on the real-time recording of the actual vehicle speed ˆv.
This measure can be obtained from several sources, including integration of GPS
coordinates and on-board measurements (odometry) available on the vehicle com-
munication bus. Relying only on GPS-based measurement makes the system free
from in-vehicle connections and able to run on a mobile device or as a web service,
but suffers from inaccuracies due to satellite signal quality. However, the current
precision of GNSS is considered sufﬁcient for this type of application, and accuracy
is expected to further improve with the anticipated trend in localization precision.
In addition to speed, also curvature ˆR, slope ˆα, and legal speed limit vlim need to be
extracted from GPS and map data, e.g., using algorithms introduced in Sect. 8.2.1.
These speed traces are continuously analyzed to identify when a breakpoint
occurs. As explained in Sect. 8.2.2, such identiﬁcation is based on the deﬁnition
of breakpoints either as the locations where the characteristics of the road change,
or the points where surrounding trafﬁc induces strong decelerations or stops.

When a breakpoint is detected, a sub-trip is deﬁned encompassing the last two
breakpoints, see Fig. 8.2. For this sub-trip, the distance covered, the travel time, and
the average speed are evaluated as
(cid:2) τi+1

(i)
f

t

= τi+1 − τi ;

(i)
f

s

=

ˆv(τ )dτ ;

(i)
v
i

= ˆv(τi );

(i)
f

v

= ˆv(τi+1) ,

(8.1)

τi

where τ is time of record, τi+1 is current time and τi is the time of last breakpoint.
(i)
These quantities form the boundary condition vector Bi (cid:2) {t
}, while
, s
f
the road parameter vector Ci (cid:2) {α(i), R(i), v
} is composed of the slope, curvature,
and speed limit in the sub-trip.

(i)
, v
i

(i)
lim

(i)
f

(i)
f

, v

A speed optimization is then performed using the elements of Bi and Ci as the
optimization parameters. The methods described in Chap. 6 can be generally used to
optimize the speed proﬁle and compute the minimal energy E ∗
T . For EVs, the simpler
approach is to use the parabolic speed proﬁle (6.74). Alternatively, optimal speed
proﬁles can be obtained by training neural networks to evaluate the optimal sequence
of control modes and their switching times, that is, provide the vector Oi = {t1, . . .}
as a function of the input vector Ii as also described in Chap. 6.

8.1 Implementation of Eco-Driving Concepts

217

Speed

τi

τi+1

Time of record τ

Sub-trip i

Compute v∗
i

(τ)

Fig. 8.2 Illustration of the eco-coaching approach, with the recorded speed (black), the breakpoints
(circles), a sub-trip, the time instant at which an optimization is performed, and the optimized speed
proﬁle (gray)

The output of such a process is ultimately the optimal speed proﬁle v∗
i

(τ ), τ ∈
[τi , τi+1] that the driver should have followed during the last sub-trip, with the same
constraints in terms of duration, distance, initial and ﬁnal speed, maximal speed, than
the actual proﬁle performed.

The optimal speed proﬁle is typically displayed to the drivers by an HMI (see
Sect. 8.3.1), in order to make them aware of the best driving practices. Additionally,
the system can provide an “eco-driving” score, comparing a model-based estimation
of the actual (tank) energy consumed during the sub-trip, with the optimum calcu-
lated. The drivers are expected to learn from these scores and adapt their driving
style toward the optimum.

8.1.2 Predictive Cruise Control

In this book we adopt the terminology of Predictive Cruise Control (PCC) to denote
those cruise control systems that, in addition to the standard feature of tracking
a reference speed, are mainly focused on anticipation of road slopes. A few such
systems are actually on the market as of this book’s writing,1 particularly for heavy-
duty truck applications. As shown in Sect. 7.3, a speed proﬁle that anticipates and
reacts to road slopes in a certain way (reach a minimum speed at the top of a hill,
maximum speed at the bottom of a downhill) may actually coincide with the minimal-
energy speed proﬁle.

1Introduced by Daimler Trucks in 2009, now PCC systems are available on trucks by DAF, Ken-
worth, Volvo Trucks, as well some Mercedes and Volkswagen cars, among others.

8 Eco-Driving Practical Implementation

218

GPS

ˆz(t, . . . , s f )

3D Digital
Maps

v∗(t)

+ -

Cruise
Control

v(t)

Vehicle

vd

Optimi-
zation

time loop t ← t + Δt

Fig. 8.3 Conceptual sketch of a predictive cruise control system

In a typical embodiment of PCC, see Fig. 8.3, the GPS signal is an input. Using
stored or retrieved 3D digital road maps, PCC estimates the altitude proﬁle of the
road ahead, ˆz(σ ), σ ∈ [s, s f ], up to the selected horizon s f . In order to limit the
computing resources, this horizon might be shorter than the whole trip. An algorithm
then calculates the optimal speed proﬁle2 v∗(τ ), τ ∈ [t, t f ], for the temporal horizon
t f that is linked to s f through the desired average speed vd . The ﬁrst value of the
optimal speed reference is sent to a speed controller (which is in fact a conventional
cruise controller), which ultimately pilots the vehicle’s actuators to track the reference
speed as a function of the measured actual speed.

8.1.3 Eco-ACC

As brieﬂy explained in Sect. 4.2.2, adaptive cruise controllers (ACC) are cruise
control systems that automatically adjust the vehicle speed to keep a safe gap from the
vehicle ahead. Besides the simple PI control schemes described in Sects. 3.3.4.1 and
4.2.2, ACC could in principle be implemented by solving, at each time, an optimal
control problem that minimizes some safety-related cost. Those systems that are
known as eco-ACC use in addition an energy-efﬁciency-related cost, whence comes
their name.

Figure 8.4 shows a ﬂowchart illustrating the concept. Unlike in PCC where a single
optimization is performed at the beginning of an entire trip or of a long section,
in an eco-ACC system a new optimization is performed at every time step for a
prediction or look-ahead horizon. This approach is often generically referred to as
Model Predictive Control (MPC), and is described more extensively in Sect. 8.2.5.
Typically, in eco-ACC systems the prediction horizon t f is ﬁxed, in an embodiment
that is called a receding horizon approach. Over this horizon, the disturbances and
constraints acting on the vehicle must be predicted. Considering for simplicity only
road grade and curvature, top speed limit and preceding vehicle, the road parameter
vector is C(t) (cid:2) {α(s(τ )), R(s(τ )), vlim(s(τ )), s p(τ )}, τ ∈ [t, t + t f ].

2For ICEVs, optimal gear proﬁle is usually also calculated.

8.1 Implementation of Eco-Driving Concepts

3D Digital
Maps

vd

sp(t)

vp(t)

Detection

Constraints

Optimi-
zation

C(t)

v∗(t, . . .)

Driver &
Vehicle

time loop t ← t + Δt

Fig. 8.4 Conceptual sketch of an Eco-ACC system

219

s(t)
v(t)

The road characteristics within the prediction horizon are retrieved from detailed
3D maps that are either stored within the system or accessed remotely. The presence of
a preceding vehicle (moving or stationary obstacle), together with its relative position
and speed to the host vehicle, is assumed to be detected thanks to ADAS sensors
such those introduced in Chap. 3. Based on the current relative speed and headway, a
dedicated algorithm estimates the leader position s p, for the upcoming horizon. Such
estimation is very critical since it strongly affects the effectiveness of the optimization
results, and is described in some detail in Sect. 8.2.3. In addition, V2I communication
or camera sensors can provide information on the state of upcoming trafﬁc lights,
which also affects the optimization process by introducing additional constraints. A
few simple algorithms for trafﬁc light detection are presented in Sect. 8.2.4.

Once the constraints are set, optimization of the speed proﬁle of the host vehicle
can be run for the entire prediction horizon. The cost function considers several
factors. It generally includes the energy-based cost related to the tank energy, the
safety cost related to the headway distance with the preceding vehicle, but might
also include a regulation cost that penalizes the variations of the control inputs, and a
speed smoothness cost that penalizes deviations from the desired average speed. The
OCP is completed by the state equations and by the control and speed constraints,
and can be summarized as

(cid:2)

t+t f

minimize
u(t)

J =

t

(cid:3)
w1 PT (v(τ ), u(τ ), α(s(τ ))) + w2(s(τ ) − s p(τ ))2+
(cid:4)

+w3(v(τ ) − vd )2 + w4(u(τ ) − ud )2

dτ

subject to ˙s(τ ) = v(τ )

(8.2)

˙v(τ ) = f (v(τ ), u(τ ), α(s(τ )))
umin(v(τ ), τ ) (cid:3) u (cid:3) umax (v(τ ), τ )
0 ≤ v(τ ) ≤ min(vlim(s(τ )), vtur n(R(s(τ ))))

where u is the control vector, ud is the steady-state control corresponding to cruising at
constant speed vd , f is the speed dynamics equation (6.15), and the w’s are weighting

220

8 Eco-Driving Practical Implementation

factors chosen opportunely. The output of this optimization block is the optimal speed
proﬁle for the entire horizon v∗(τ ), τ ∈ [t, t + t f ].

Finally, this speed proﬁle is either advised to the human driver through an HMI
(see Sect. 8.3.1) or directly realized through a vehicle controller in the case of an
automated speed controller. The actual position and speed of the host vehicle serve
as the inputs to update the boundary conditions. A new iteration is performed at each
time step.

8.1.4 Predictive Eco-Driving

The eco-ACC concept presented in the last section is not the most general embod-
iment of eco-driving techniques. Particularly in urban driving, the receding ﬁxed
horizon approach must be replaced by a “shrinking” horizon based on a predictive
breakpoint detection. In addition, a reference speed to track might not necessarily be
available, and in the most general case the speed must be fully optimized.

The fundamentals of such predictive eco-driving have been presented and dis-
cussed in the previous chapters. Figure 8.5 shows a ﬂowchart illustrating the practi-
cal implementation of an eco-driving function. Similarly to an eco-ACC system, the
approach is intrinsically iterative, with a new optimization that is performed every
time step for the whole extent of the prediction horizon.

Typically, this horizon is set as the remaining trip to the next infrastructure break-
point (e.g., a signalized intersection) and must be deﬁned by the distance to be
covered s f (t) and an estimation of the travel time t f (t). These pieces of information
can be obtained, e.g., from an eco-routing system or directly from real-time trafﬁc
and infrastructural data. Together with the initial speed and desired ﬁnal speed, they
form the boundary conditions vector B(t) (cid:2) {t f (t), s f (t), vi (t), v f (t)} to the opti-
mization. The process of setting the boundary conditions is described in more detail
in Sect. 8.2.6.

Other elements that have to be predicted are the disturbances and constraints acting
on the vehicle during the just-deﬁned horizon. A road parameter vector C(t) (cid:2)

3D Digital
Maps

sp(t)

vp(t)

Detection

B.C. and
Constraints

C(t)

B(t)

Optimi-
zation

v∗(t, . . .)

Driver &
Vehicle

s(t)
v(t)

time loop t ← t + Δt

Fig. 8.5 Conceptual sketch of a predictive eco-driving system

8.1 Implementation of Eco-Driving Concepts

221

{α(s(τ )), R(s(τ )), vmax (τ ), s p(τ )}, τ ∈ [t, t + t f (t)], can be obtained similarly to
what was discussed for the eco-ACC approach.

Once the boundary conditions and the leader and infrastructure constraints are
set, an optimization of the speed proﬁle of the host vehicle can be run for the entire
horizon. The OCP to be solved is generally that described in Chap. 6, which we
rewrite here in a form that is valid for ICEVs and EVs:

(cid:2)

t+t f (t)

minimize
u(t)

J =

τ =t

subject to ˙s(τ ) = v(τ )

PT (v(τ ), u(τ ), α(s(τ )))dτ

˙v(τ ) = f (v(τ ), u(τ ), α(s(τ )))
v(t) (cid:2) vi (t),
v(t + t f (t)) = v f (t),
s(t) = 0,
s(t + t f (t)) = s f (t)
umin(v(τ ), τ ) (cid:3) u (cid:3) umax (v(τ ), τ )
0 ≤ v(τ ) ≤ min(vlim(s(τ )), vtur n(R(s(τ ))))
0 ≤ s(τ ) ≤ s p(τ )

(8.3)

where u is the control vector and f is the speed dynamics equation (6.15). For HEVs,
the dynamics of the state of charge ξb must be additionally taken into account, as
well as the additional boundary condition ξb(t + f f (t)) = ξ f . The quantity ξ f is not
known a priori, as it is the result of the SoC trajectory optimization over the whole trip,
and not just one sub-trip (see Sect. 6.6). However, it can be approximated by heuristic
expressions such as that described by (4.47). Overall, the output of this optimization
block is the optimal speed proﬁle for the entire horizon v∗(τ ), τ ∈ [t, t + t f (t)].

Similarly to an eco-ACC system, the optimal speed proﬁle is either advised to the
human driver through an HMI (see Sect. 8.3.1) or directly realized through a vehicle
controller in the case of an automated speed controller. The actual position and speed
of the host vehicle serve as the feedback input to update the boundary conditions for
a new iteration after each time step.

8.2 Practical Issues

Many of the building blocks appearing in the ﬂowcharts of the previous sections
have been extensively treated in this book. For instance, the use of 3D digital maps
is the subject of Sect. 4.1. Also, the characteristics of the various sensors used,
not explicitly shown in the ﬂowcharts, can be found in Sect. 3.2.1. However, many
corollary functions and sub-systems have not been treated yet with an adequate detail
and thus shall be discussed in this section. Among these are, the speed recording and

222

8 Eco-Driving Practical Implementation

the breakpoint detection of eco-coaching (Sects. 8.2.1 and 8.2.2), the leader position
prediction and the MPC algorithms of both eco-ACC and predictive eco-driving
(Sects. 8.2.3–8.2.5), as well as predictive boundary condition setting (Sect. 8.2.6).

8.2.1 Speed and Path Recording

As discussed in Sect. 3.2, accurate measurement of vehicle velocity often needs
multiple sensors (GPS, IMU, wheel odometer) and the fusion of their output through
extended Kalman ﬁltering. Simple and fast-running eco-coaching systems like the
one shown in Fig. 8.1 might nevertheless rely only on relatively noisy GPS data beside
3D map data, from which longitudinal velocity (speed), road slope, and road curvature
must be extracted. Raw data (latitude, longitude, elevation) on a sub-trip need ﬁrst
to be transformed into local Cartesian coordinates (xc, yc, zc) based on the UTM
(Universal Transverse Mercator) system, to which record times tc, c = 1, 2, . . . , C
are associated. If s is the curvilinear position and θ is the heading angle, numerical
differentiation of the data set should in principle reveal the speed,

the curvature

and the slope

with

v(s) = ds
dt

,

1
R(s)

= dθ (s)
ds

,

α(s) = arctan

(cid:5)

(cid:6)

dz(s)
ds

,

d x = cos θ ds ,
dy = sin θ ds .

(8.4)

(8.5)

(8.6)

(8.7)

(8.8)

To differentiate the available data numerically, a smoothing ﬁlter such as the
Savitzky–Golay ﬁlter [3] can be used given its ability to increase the signal-to-noise
ratio without greatly distorting the signal [4]. With this approach, the curvature can
be obtained directly from the ﬁrst- and second-order position derivatives, without
the intermediate evaluation of the heading.

Another approach consists of setting an ad-hoc optimal control problem to ﬁnd
the time proﬁles of speed, curvature, and slope that minimize the error between
GPS data (xc, yc, zc) and reconstructed positions evaluated at times tc [5]. To do

8.2 Practical Issues

223

so, time is chosen as the independent variable,3 while the “control” vector consists
of the derivatives of the sought functions ˜u(t) (cid:2) [dv/dt, d(1/R)/dt, dα/dt]. The
performance index to be minimized can be deﬁned for the i-th sub-trip as

(cid:2)

t f

0

C(cid:7)

c=1

r ˜u2dt +

(cid:8)
(xc − x(tc))2 + (yc − y(tc))2 + (zc − z(tc))2

(cid:9)

,

(8.9)

with (8.4)–(8.8) as dynamic equations and t f given by the ﬁrst of (8.1). The weight-
ing factor r trades off the variations in the reconstructed curvature proﬁle with the
reconstruction accuracy. Appropriate boundary conditions and constraints complete
the OCP.

More accurate estimation might be obtained using IMU data and/or sensor fusion,

particularly for on-board systems that are integrated with the in-vehicle data bus.

8.2.2 Breakpoint Detection

In analyzing a recorded speed and path proﬁle, breakpoints can be deﬁned with two
types of considerations. On one hand, ﬁxed or stationary breakpoints can be deﬁned
at locations where: (i) slope α, (ii) road curvature R, or (iii) top speed limit vlim
change more than a predeﬁned threshold with respect to their value in the previous
sub-trip, or (iv) the trip is likely to undergo a discontinuity, like in the presence of
signalized intersections, stops, or other types of intersections.

On the other hand, the analysis of the actual speed proﬁle ˆv generally reveals
additional breakpoints that were likely induced by surrounding trafﬁc, which is not
predictable only using static road information. The detection of such breakpoints can
be done, in principle, by identifying the speed minima (including stops) subsequent
to decelerations that are not already accounted for by the static breakpoints.

Minima detection is, however, not always a simple task as the recorded speed pro-
ﬁle can be very noisy and spurious minima can appear. The latter could be eliminated
by keeping, e.g., only minima that have a sufﬁcient prominence4 or that have a mini-
mum time separation from other minima. These features can be imposed while using
functions that are available in commercial software, for example Matlab’s ﬁndpeak.
However, often it is not sufﬁcient to isolate the representative breakpoints. Digital
ﬁlters such as the aforementioned Savitzki–Golay ﬁlter [3] can smooth the data and
reduce the noise, but they are an option only if they preserve the main minima that
can be attributed to breakpoints. Ramer–Douglas–Peucker algorithm [6] can be used

3Curvilinear position is the independent variable in the original formulation of [5], although this
choice generates some difﬁculties.
4Analogously to the prominence of a peak, the prominence of a valley measures how much the
valley stands out due to its intrinsic depth and its location relative to other valleys. A shallow
isolated valley can be more prominent than one that is deeper but is an otherwise unremarkable
member of a deep sequence.

224

8 Eco-Driving Practical Implementation

to decrease the number of points in the recorded speed trace, which can also reduce
the noise. Mathematical morphology can also be used, directly on the speed trace or
rather on a ﬁltered signal, to isolate the valleys from the original signal. However, the
position of these valleys might be displaced when their shape is strongly asymmetric.

8.2.3 Leader Position Prediction

The optimality of the iterative schemes of Figs. 8.4 and 8.5 is strongly affected by
the quality of prediction of the preceding vehicle’s states. The simplest approach to
predicting the leader’s future speed is to assume that the vehicle continues to move
with the same acceleration until it stops or exceeds a maximum velocity [7]. But
this method can be unrealistic because it may lead to a very high or a zero predicted
velocity at the end of a long horizon. Therefore, this model is often [8] improved by
considering a speed-dependent acceleration value.

To this end, the car-following models described in Sect. 4.2.1 could in principle
be applied to the leader and the generic equation (4.2) integrated over the prediction
horizon to yield v p(τ ), τ ∈ [t, t + t f (t)]. Normally, the information about the speed
of the vehicle preceding the leader and its gap from the leader are not available, so
that (4.2) is integrated assuming either free ﬂow,

˙v p(τ ) = F(v p(τ ), δ → ∞) ,

(8.10)

or approaching a ﬁxed obstacle, e.g., a red light or an intersection, whose position is
known,

˙v p(τ ) = F(v p(τ ), δ(τ ))
˙δ(τ ) = −v p(τ ) .

The integration of these differential equations in closed form is only possible for
very simple car following models. For more realistic ones, such as the Gipps’ model
or the IDM, numerical integration is required, which is not always practical in an
onboard system.

Therefore, more heuristic approaches have been often used in the literature. For

example, introducing a multiplier to weigh the current acceleration as

a p(τ ) = a p(t) · ζ (v p(τ )) ,

where ζ (v p) is deﬁned as

ζ (v p) (cid:2)

1
(1 + e−β1(v p−w1))(1 + eβ2(v p−w2))

.

(8.11)
(8.12)

(8.13)

(8.14)

8.2 Practical Issues

Fig. 8.6 Function (8.14)

ζ

1

225

vp

The parameters w1 and w2 deﬁne an approximate range of velocities. The function
(8.14) states that a p(τ ) ≈ a p(t) if v p(τ ) is within that range, otherwise a p(τ ) ≈ 0,
and β1 > 0 and β2 > 0 express the sharpness of the sigmoid function, see Fig. 8.6.
That means that the acceleration of the preceding vehicle approaches zero when it
reaches a maximum velocity or stops completely.

In the case the preceding vehicle is approaching a red signal, prediction using
(8.14) is not appropriate, since it is certain that the vehicle will stop at the end of the
section after a known distance δ(t) = s f − s p(t). For this special case, a prediction
model of the preceding vehicle based on experimental driving data has been proposed
in [7] as

v p(δ(τ )) =

ci δi (τ ) = − ˙δ(τ ) ,

(8.15)

5(cid:7)

i=0

with the coefﬁcients ci experimentally determined. The corresponding stopping rate
is obtained as a p(τ ) = −v p(δ(τ )) · dv p(δ)/dδ.

With V2V connectivity, the future intent of the preceding vehicle can be com-
municated to the follower, which reduces the uncertainty. A vehicle cannot know
its future moves with certainty but if it employs an MPC approach for longitudinal
control it generates, as a by product, a future sequence of its optimal control moves
conditioned on its current state. This “intended” sequence of its future moves can be
communicated to following vehicles as a best estimate of what it is going to do. The
ego following vehicle can replace, in its cost function and constraints, the intended
position of the preceding vehicle over the horizon. The MPC problems can be solved
sequentially by each participating CAV from the front to the tail of a string resulting
in a distributed MPC solution of the car following problem as also described in [9].
Even in absence of V2V connectivity, latest sensor observations can be used to
estimate the probable position of the preceding vehicle along a future planning hori-
zon. In [10–12], different ﬂavors of a Markov chain approach are proposed to predict
the likely position of the preceding vehicle over ego car planning horizon. By count-
ing historical occurrences, probabilities are assigned to the transition between two
states (i.e., vehicle velocity) in consecutive time steps. In a Markov chain model
the assumption is that a state at any point in time is only dependent on the states
of one prior step and not earlier steps. In [11] only velocity transitions of the pre-

226

8 Eco-Driving Practical Implementation

ceding vehicle were modeled, but more precise predictions can be made if enough
data is available to include the acceleration state as well. To reduce the size of the
transition probability matrix5 and the need for training data it is possible to use
only a categorical variable describing whether the preceding vehicle is accelerating,
decelerating, or cruising. For instance, the velocity can be quantized at 1 m/s steps
between 0 and maximum allowable velocity while the acceleration state can be cho-
sen from {accelerating, decelerating, cruising} as shown in [12]. A higher resolution
quantization of acceleration is used in [13, 14].

Once the velocity of preceding vehicle is estimated and given the current position
of the preceding vehicle s p(0), future positions can be determined using kinematics.
Because a model is used to generate the ﬁnal output, this approach always gives
physically realistic trajectories. To each sequence of velocities and resulting posi-
tions a probability calculated from the constructed Markov transition matrix can be
assigned. With a sufﬁcient number of samples, a distribution can be ﬁt to the gen-
erated position histogram to be used in anticipative car following as described in a
case study in Sect. 9.3.

8.2.4 Probabilistic Trafﬁc Light Prediction

There can be much uncertainty in the phase and timing of a trafﬁc signal which makes
predicting its future state quite challenging. For ﬁxed-time trafﬁc signals which do
not respond to trafﬁc conditions (see Sect. 4.1.3) and operate only on a timing table,
the trafﬁc signal clock may drift during a 24 h period (this is potentially due to
variations in the electric grid frequency, see [15] for more details). Therefore, it is
not possible to know with certainty the start of greens and reds, even for ﬁxed-time
signals. The level of uncertainty is higher for actuated and adaptive trafﬁc signals
which do respond to trafﬁc conditions. Although they have a base timing table, the
timings of actuated and adaptive lights may change according to trafﬁc conditions,
rendering not only the start of reds and greens but also the phase lengths uncertain.
Due to the aforementioned uncertainties, it is difﬁcult to always determine the start
and duration of greens deterministically. One can employ a probabilistic prediction
framework to handle the case with partial or uncertain information. Here we describe
the approach that ﬁrst appeared in [16].

Assume that the current phase (color) and the average red and green lengths for a
signal are known. This information can be used to predict the probability of a green
over the planning horizon. The state of a light is denoted by (cid:8)(t) which can assume
two values, g and r , representing green and red respectively. The goal is to determine
the probability of a light being green at time t + t p conditioned on its current color
at time t. To form this conditional probability function, the durations of green and
red are assumed to be tg and tr respectively on average. The trafﬁc signal is assumed

5A matrix Pαβ (cid:2) P
state α to state β.

(cid:8)
v p(τ + (cid:9)τ ) = β|v p(τ ) = α

(cid:9)

indicating the probability to go from velocity

8.2 Practical Issues

227

to operate cyclically, which is true for many trafﬁc signals, and as a result the total
cycle time is ﬁxed and equal to tg + tr . Here yellow time is included in red.

Using relatively straight-forward probabilistic reasoning, the chance of a green

light in t p seconds, given a green at current time t can be found to be:

P[(cid:8)(t + t p) = g|(cid:8)(t) = g] =

,

(8.16)

⎧

⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎩

tg − tm
tg
tg − tr
tg

0,
tm − tr
tg

,

if tm ≤ tr ∧ tm ≤ tg

,

if tr ≤ tm ≤ tg

if tg ≤ tm ≤ tr
if tg ≤ tm ∧ tr ≤ tm

,

where tm (cid:2) mod(t p, tg + tr ) is the residue of division of t p by tg + tr and its role
is to remove whole cycle times from t p. In other words because the signal clock is
assumed to be periodic, the resulting conditional probability is also going to be a
periodic function of time so the probability of green (or red) can be described in
terms of tm instead of t p.

Now for instance when tm ≤ min(tg, tr ), then (cid:8)(t + tm) = g for 0 ≤ t < tg − tm
and (cid:8)(t + tm) = r for tg − tm ≤ t ≤ tg, so that the probability of light being green
now and in tm seconds is tg−tm
, which explains the ﬁrst line of Eq. 8.16. But if
tg
tg ≤ tm ≤ tr and the light is green now, it is impossible for it to be green in tm
seconds as in third line of Eq. 8.16. The details may be best understood graphically
and therefore they are not explained here.

Similarly, the chance of a green light in t p seconds, given a red at time t is:

P[(cid:8)(t + t p) = g|(cid:8)(t) = r ] =

.

(8.17)

⎧
⎪⎪⎪⎨
⎪⎪⎪⎩

,

tm
tr
1,
tg
,
tr
tg+tr −tm
tr

,

if tm ≤ tr ∧ tm ≤ tg
if tr ≤ tm ≤ tg
if tg ≤ tm ≤ tr
if tg ≤ tm ∧ tr ≤ tm

Figures 8.7 and 8.8 show several probabilistic prediction examples with different
splits between red and green but with the same cycle length. These are visualizations
of the probabilities which we use in probabilistic simulation cases described later in
Sect. 9.1.

8.2.5 MPC Schemes

In contrast to the ofﬂine optimal control framework described in Sects. 6 and 7, MPC
needs to solve an optimization problem online at each control time step to compute
the optimal control input. This fact has prevented the application of MPC in several

228

(a)

n
e
e
r
G

f
o
y
t
i
l
i
b
a
b
o
r
P

1

0.8

0.6

0.4

0.2

0

0

(c)

n
e
e
r
G

f
o

y
t
i
l
i
b
a
b
o
r
P

1

0.8

0.6

0.4

0.2

0

0

8 Eco-Driving Practical Implementation

g = 50, r = 10

g = 40, r = 20

100

200

Time [s]

100

200

Time [s]

(b)

n
e
e
r
G

f
o
y
t
i
l
i
b
a
b
o
r
P

1

0.8

0.6

0.4

0.2

0

0

(d)

n
e
e
r
G

f
o

y
t
i
l
i
b
a
b
o
r
P

1

0.8

0.6

0.4

0.2

0

0

g = 30, r = 30

g = 20, r = 40

100

200

Time [s]

100

200

Time [s]

Fig. 8.7 Conditional future probability of green given that the light is currently green, for four
different light timing patterns. In all patterns the total cycle time is 60 s, with the lengths of green
and red indicated in the legends. The time axis is t p as described in (8.16)–(8.17)

contexts, either because the processor technology needed to solve the OCP within the
sampling time is too expensive or simply infeasible for onboard automotive-grade
controllers, or because the implementation of the numerical solver causes software
certiﬁcation and/or explicability concerns, especially in safety-critical applications.
At the same time, such limitations have motivated the development of explicit MPC
approaches, where the optimal control inputs are pre-computed ofﬂine as a function
of the states [17], or even the analytical and semi-analytical approaches presented
throughout this book. However, in non-critical and research applications, numerical
MPC remains the most common option.

Practical methods to solve problem (8.3) online generally require its discretization,

that is, replacing the integral J with a sum

t+t f (t)(cid:7)

τ =t

PT (·)(cid:9)τ

(8.18)

and the dynamic equations with algebraic equations v(τ + (cid:9)τ ) = v(τ ) + f (·)(cid:9)τ ,
s(τ + (cid:9)τ ) = s(τ ) + v(τ )(cid:9)τ , with the prediction time step (cid:9)τ not necessarily equal

8.2 Practical Issues

229

g = 50, r = 10

g = 40, r = 20

(a)

n
e
e
r
G

f
o

y
t
i
l
i
b
a
b
o
r
P

1

0.8

0.6

0.4

0.2

0

0

(c)

n
e
e
r
G

f
o

y
t
i
l
i
b
a
b
o
r
P

1

0.8

0.6

0.4

0.2

0

0

100

200

Time [s]

g = 30, r = 30

100

200

Time [s]

(b)

n
e
e
r
G

f
o

y
t
i
l
i
b
a
b
o
r
P

(d)

n
e
e
r
G

f
o

y
t
i
l
i
b
a
b
o
r
P

0

0

1

0.8

0.6

0.4

0.2

1

0.8

0.6

0.4

0.2

0

0

100

200

Time [s]

g = 20, r = 40

100

200

Time [s]

Fig. 8.8 Conditional future probability of green given that the light is currently red, for four different
light timing patterns. In all patterns the total cycle time is 60 s, with the lengths of green and red
indicated in the legends. The time axis is t p as described in Eqs. 8.16 and 8.17

to the control time step (cid:9)t. The stability of MPC has been proven at least for OCP
without terminal state constraints and terminal cost [18]. An excellent survey on
stability in MPC is given in [19].

For linear systems with linear constraints and a quadratic cost, the discretized
problem can be rewritten into a standard quadratic programming (QP) form, as it
is the case, for instance, of the quadratic EV model (6.74). A variety of methods
(gradient, interior-point, etc.) are commonly used to solve QP problems exactly
and many fast and efﬁcient solvers are available, including toolboxes in the main
programming languages [20].

More generally, nonlinear MPC (NMPC) problems must be solved iteratively
and involve approximations of the problem equations. As far as optimal control is
concerned, the two solution approaches can be recognized, those of indirect and
direct methods.

Indirect methods, based on the PMP (see Sect. 6.2.2) and resulting in a two-
point boundary value problem, suffer from a general lack of efﬁcient and robust
generic software packages to be implemented online. In contrast, the use of direct
methods is nowadays much more common. With this approach, the NPMC must be

230

8 Eco-Driving Practical Implementation

converted into a nonlinear programming (NLP) problem. To do that, pseudospectral
(orthogonal collocation) algorithms are commonly employed, which use polynomials
to approximate states and control inputs at some collocation points. Depending on the
choice of the polynomial basis and of the collocation points, several pseudospectral
methods are available, such as those named after Gauss (GPM), Chebyshev (CPM),
and Legendre (LPM).

Once cast into an NLP, the latter can be solved using the several existing Newton-
type methods. These are roughly classiﬁed into sequential quadratic programming
(SQP) and interior-point (IP) methods [21, 22]. For both categories, several solvers
and software packages are available [22]. Energy-efﬁcient driving systems have been
actually implemented with SQP solvers such as NPSOL [23] and SNOPT [24], as
well as with an IP-type solver such as C/GMRES [25] and IPOPT.

The use of such methods needs, however, special treatments of the original OCP
to, e.g., regularize constrained or singular arcs, smooth discontinuous functions, etc.
The use, when available, of intrinsically robust, analytical or semi-analytical solution
procedures, such as those presented in this book, could overcome these difﬁculties.

8.2.6 Setting of Boundary Conditions

As discussed in Sect. 8.1.4, the optimization block in the predictive eco-driving
scheme of Fig. 8.5 requires proper boundary conditions

B(t) = {t f (t), s f (t), vi (t), v f (t)} ,

(8.19)

where the argument t explicitly denotes that such setting is made at each new opti-
mization run.

The initial speed of the new optimization horizon is naturally set to the current

speed,

vi (t) = v(t) .

As for the other boundary conditions, their deﬁnition results from the knowledge
of the road network ahead and the estimated leader position. We shall assume good
predictive capability of both these elements, which form the road parameter vector
C(t) = {α(s(τ )), vmax (τ ), s p(τ )}, τ ∈ [t, t + t f (t)].

The spatial horizon can be either constant or variable. The former option, s f (t) ≡
s f , is also known as sliding horizon and is sometimes appropriate for highway trips,
in the absence of any sensible breakpoints. This is the preferred option for PCC and
eco-ACC implementations, as discussed in Sects. 8.1.2 and 8.1.3.

In most driving situations, however, road topology naturally ﬁxes the next break-
point. Referring to the scenarios of Sect. 7, at least four situations may occur, where
the next breakpoint is the position (i) where road slope and/or curvature change sen-
sibly with respect to the current value, (ii) where a different speed limit than the
current is posted, (iii) of a signalized intersection, or (iv) of a stop. Denoting the

8.2 Practical Issues

231

position of the next breakpoint as ˆsN B(t), where the hat denotes an estimation and
the argument t the fact that such estimation can vary with time during the trip, the
spatial horizon is naturally set as

s f (t) = ˆsN B(t) − s(t) .

(8.20)

As for the temporal horizon, it also is rarely ﬁxed and sliding. More often, it is
estimated based on ˆsN B and some desired or average speed (e.g., trafﬁc-induced)
V (t) that is needed to reach it,

t f (t) = s f (t)
V (t)

.

(8.21)

Though, in case (iii) of a signalized intersection, it is more natural to set a breakpoint
time ˆtN B(t) during the green phase and, similarly to (8.20), evaluate the time horizon
as the remaining time to catch the green,

t f (t) = ˆtN B(t) − t .

(8.22)

The terminal speed v f (t) also is to be estimated. In case (i) above, that is a typical
highway situation, often v f (t) = vi (cruising). In case (ii) to avoid having to abruptly
decelerate or brake at the beginning of the new segment, the obvious choice is to
set v f = ˆvmax,N B(t) − (cid:9)v, where ˆvmax,N B is the speed limit in the next sub-trip and
(cid:9)v is a safety margin to allow further acceleration in the next sub-trip. In case (iii),
v f (t) should equal the crossing speed vt at the trafﬁc light, and could in principle be
the result of a further optimization as shown in Sect. 7.7.6 In case (iv), v f (t) ≡ 0.

The feasibility of the sub-trip horizons deﬁned in one of the ways discussed above
must be checked. For that, the feasible range of durations and distances satisfying all
constraints, F(t f (t), s f (t)) ≥ 0, must be constructed as shown in Chap. 7 using the
available information contained in the road parameter vector C(t). Additionally, the
vehicle and powertrain characteristics can be used to set the maximum acceleration
or deceleration.

If the pair (s f (t), t f (t)) is not feasible, a correction must occur. Two cases may
be identiﬁed. In case, e.g., of a preceding vehicle that is slower than thought (V (t)
overestimated in (8.21)), then likely an increase of t f (t) sufﬁces to bring the boundary
conditions back in the feasible range. If, however, a non-estimated obstacle appears,
for instance, the preceding vehicle will stop before the estimated position ˆsN B, then
the most natural option is to decrease s f (t) and possibly t f (t) according to (8.21).
These two situations are illustrated in Fig. 8.9. In both cases, a safety margin can be
conveniently applied with respect to the closest boundary of the feasibility domain.

6In this OCP, v f (t) is open so the corresponding costate is ﬁxed.

232

(a)
t f

8 Eco-Driving Practical Implementation

(b)
t f

s f

s f

Fig. 8.9 Correction of boundary conditions that are infeasible for an underestimation of t f (left)
and an overestimation of s f (right)

8.3 On-Board Implementation

The effective implementation of the concepts presented in the previous sections
requires several technical arrangements. Here we discuss the ergonomy of the HMIs
aimed at advising drivers about eco-practices (Sect. 8.3.1) and of their response to
these advice (Sect. 8.3.2). Finally some issues related to the automated implementa-
tion are discussed in Sect. 8.3.3.

8.3.1 Human-Machine Interfaces

The energy-efﬁciency systems described in the previous sections and chapters must
be complemented with human-machine interfaces to communicate with a human
driver. As discussed above, the role of an eco-coaching HMI is to effectively assess
the driver’s behavior in-trip or post-trip; that of an eco-driving HMI is to advise a
speed to follow, and possibly other actions. In addition, eco-routing HMIs advise the
route to follow.

The main types of driver assistance systems are: (i) visual interfaces, (ii) visual-

auditory assistance systems, and (iii) haptic assistance systems.

8.3.1.1 Visual and Acoustic Assistance Systems

Visual and visual–acoustic assistance systems are based on dedicated on-board multi-
modal displays or personal mobile devices (smartphones, tablets). The system archi-
tecture may include several tabs, related to different functions or different drive stages
(e.g., pre-trip eco-routing, in-trip eco-driving, post-trip eco-coaching).

Eco-routing output is usually presented similarly to current navigation systems,
with the user providing origin and destination by entering physical addresses or

8.3 On-Board Implementation

233

Fig. 8.10 Example screenshot of an eco-routing interface (http://isntsv-optem:8080/EcoRouting/),
showing the user’s inputs addresses and coordinates, the routes displayed on a map, and the corre-
sponding energy, time, and distance attributes

clicking on a map, and possibly time of departure (if not automatically detected). The
system then displays the computed eco-route on the map. Information on predicted
trip energy consumption, duration, and distance as compared with standard route
choices (typically, the fastest and the shortest route) can be also useful for the driver.
A screenshot of an example eco-routing interface is shown in Fig. 8.10.

In-trip or post-trip eco-coaching HMIs must provide the user with useful feedback
on his/her driving style. For this purpose, scores are commonly used. These scores
can be indirect or direct. An example of the ﬁrst type is the time fraction spent with
a vehicle speed different from the optimal. On the other hand, direct scores compare
the actual (tank) energy consumed7 during the sub-trip, ET , with the calculated
optimum, E ∗

T , for instance using the deﬁnition

EDS (cid:2) 10

(cid:5)
2 − ET
E ∗
T

(cid:6)

.

(8.23)

The numerical coefﬁcients of (8.23) ensure that, when ET = E ∗
T , the score is equal
to 10 while, if the actual consumption is twice the minimum, then the score is zero.
Scores can be presented by exact values, horizontal bars, or various visual
metaphors, see the screenshots in Fig. 8.11. A history with scores for recent sub-
trips or entire trips is also often useful, particularly if the system allows calculating
analytics, e.g., the average score of all the saved trips. That allows the driver to com-
pare his/her current performance with recent ones and to get an impression about

7Note that the means to actually measure the energy consumption on board is a complex subject
that is beyond the scope of this book.

234

8 Eco-Driving Practical Implementation

Fig. 8.11 Example screenshots of an eco-coaching interface (GECO [26]) showing a presentation
of the EDS scoring as a numerical value and of the energy consumption (in CO2 g/km) as a
metaphor (left); three sliders rating accelerations, decelerations, and smoothness (middle); a visual
comparison of the optimal vs. the actual velocity proﬁles in the last sub-trip (right)

his/her progress. This learning process supports the long-term motivation for an
energy-efﬁcient behavior of the driver.

Since they must induce a desired behavior of the driver, predictive eco-driving
HMIs might be more complex. They typically include several kinds of icons, rep-
resentative of different events during the drive, visual advices, feedback on fulﬁll-
ment of the eco-driving behavior through scores, as well as game (intrinsic reward)
elements [27].

Visual advice can be provided by presenting the current speed calculated by the
eco-driving function as a numerical value, on a tachometer-like icon, or as a hori-
zontal bar in comparison with the current actual speed. Moreover, the recommended
speed can be conveniently visualized as a range, besides its exact computed value
[28]. Second-order information on the required change in pedal depression has been
demonstrated to be more effective than ﬁrst-order information on the current speed
error [29].

In addition to visual advise, feedforward information of upcoming events (trafﬁc
light with distance and possibly status, trafﬁc sign, curves, roundabout, etc.) is often
also presented in eco-driving assistance interfaces [27].8

The use of game elements in the driver assistance context is also increasingly
popular [30]. The objective of such gamiﬁed interfaces is to facilitate intrinsically-
motivated energy-saving behaviors that are less amenable to change than with simple
prescriptions. According to the self-determination theory, a psychology theory of
human personality and motivation, the factors to be considered when developing
such interfaces include: (i) avoiding external rewards (e.g., prizes, cash incentives);

8See a few examples in the case studies of Chap. 9.

8.3 On-Board Implementation

235

(ii) providing positive feedback to drivers regarding their eco-driving behavior; and,
(iii) fostering social interactions (e.g., through cooperative systems) [30].

Game elements can be provided to drivers through challenges based on different
levels of difﬁculty, to facilitate feelings of enhanced competence as they progress
through levels. Research in this ﬁeld has highlighted the need to balance difﬁculty
and user skill, in order to avoid boredom (when challenges are too easy) and/or
frustration (when challenges are too difﬁcult).

Social-interaction features can be designed to let the users share their scores with
friends or other drivers, in order to socially engage and cooperate toward the com-
mon goal of eco-driving. Competitive challenges for users or teams (of friends, co-
workers) are also organized by providers of eco-driving systems and local authorities
to promote the adoption of energy-saving driving styles [31].

8.3.1.2 Haptic Assistance Systems

In a typical vehicle, there is a proportional relationship between the force applied
to the accelerator pedal and the pedal depression produced. In a haptic system, this
relationship is changed by increasing or decreasing the accelerator pedal resistance.
The variable force-depression proﬁle should somehow reﬂect the acceleration that
is advised to the drivers and thus expected from them. Two methods have been
demonstrated in recent years [29], see Fig. 8.12.

The haptic force method requires the driver to produce a signiﬁcant extra force
to increase the pedal depression beyond that calculated by the eco-driving function
to be optimum for energy efﬁciency at the current instant. In contrast, to discourage
under-accelerating, a weakening of the pedal resistance below that of a standard
accelerator pedal is enforced for pedal depressions below the advised one, so that
the pedal is easier to push than in a vehicle not equipped with the haptic assistance
system.

The haptic stiffness method discourages an over-acceleration through a change in
pedal stiffness rather than a step-change in force for the drivers to overcome. Again,
this method is able to encourage harsher acceleration when energy efﬁciency can
be improved by increasing pedal force, through a reduction in the resistance of the
accelerator pedal relative to a non-haptic standard pedal.

The effectiveness of these two methods and in comparison to visual assistance
systems is still a matter of debate, with the few experimental results being somehow
contradictory [29].

8.3.2 Human Response

The effectiveness of energy-efﬁcient driving assistance systems depends not only on
the algorithms and the HMI used, but also strongly on how the human drivers react
to the advice and adopt it.

Effectiveness of the system as a whole can be evaluated through ﬁeld tests, driving
simulators, or trafﬁc simulations. Commonly, multiple participants are selected for

236

8 Eco-Driving Practical Implementation

(a)

Pedal
Force [N]

(b)

Pedal
Force [N]

Pedal Depression [%]

Pedal Depression [%]

Fig. 8.12 Haptic force (a) and haptic stiffness (b) system proﬁles for three setpoints of pedal
depression. Dashed: standard pedal; color curves: increasing acceleration setpoints

such tests, and the same driving scenarios are completed at several separate occasions.
To limit the inﬂuence of external factors, such repetitions are aiming at performing
or reproducing, e.g., conditions at the same day of the week and departure time of
the day. Though often professional drivers are involved in such tests for practical
reasons, the use of non-instructed participants should be favored.

The outcomes of these tests can be of a different nature. In particular, the human
response to HMIs can be assessed by several measures. Questionnaires ﬁlled by
participants to an experimental campaign may inform about the user perception of
the interface design (how engaging it is, how easily it is understood, its perceived
usability), their self-perception while using the system (e.g., self-evaluating their
level of anxiety, annoyance, curiosity), or about the impact of using the interface on
driving.

Quantitative indexes are also used in the ergonomic science, such as the percentage
of success in correctly reacting and the reaction time to feedback. To evaluate the
level of distraction induced by the use of the HMI, the duration of driver’s eye glances
to the interface(s) and their relative occurrence with respect to those directed to the
road scene ahead, are often used [32].

Of course the energy actually spent is the ultimate measure of effectiveness of the
system as a whole [33]. The energy efﬁciency beneﬁts of using an eco-driving system
should be evaluated both in the short and in the long term, where the superiority over
classical eco-driving trainings should be more apparent.

8.3.3 Automated Drive

By removing the burden from human drivers, automated drive systems are expected to
signiﬁcantly ease implementation of eco-driving functions. This could be as simple as
issuing the eco-speed or -lane determined at the motion planning layer (Sect. 3.3.3)
to the lower level feedforward and feedback motion controllers (Sect. 3.3.4) that
actuate the throttle, the brake, and the steering control motors.

8.3 On-Board Implementation

237

For instance in anticipative car following, an MPC planner issues its acceleration
command to the low level controllers. In one possible implementation, pre-mapped
feedforward controllers could map the commanded acceleration to throttle or brake
pedal positions, while a feedback loop is in charge of velocity tracking. A potential
challenge is mismatch between simpliﬁed models used at the planning layer and
actual dynamics of the vehicle, which could cause degradation in tracking perfor-
mance. One possible solution in an MPC framework is augmenting a (step) distur-
bance observer [34] to the simpliﬁed model thus introducing integrating modes that
improve tracking performance. Computation and communication delays need to be
accounted for and addressed or they may cause poor tracking or chattering.

There are challenges at the low-level control layers as well. Poorly designed
low-level controllers can diminish the energy gains planned at higher level or could
even cause an increase in energy use. For example, an over-aggressive low-level
controller may cause chatter between throttling and braking in an effort to precisely
follow the eco-speed. This could arise for instance in a vehicle with an internal
combustion engine if the response time of the engine is not properly taken into
account. The situation can be worse if the vehicle is having a turbocharger or an
automatic transmission with torque converter, both of which add extra delays to the
vehicle response. Controller de-tuning may be an option in scenarios such as eco-
approach to trafﬁc signals but may not be possible for instance in tight platooning.
Electric vehicles may be easier to control in similar scenarios due to their more
responsive electric motors and drivetrain structures.

Control and perception modules can operate at their own pace and communi-
cate via an environment such as Robot Operating System (ROS) using publish and
subscribe functions [35]. A highly sophisticated motion planner that incorporates
macro trafﬁc planning may run on a backend cloud. In this case, the communication
between the motion planner and the vehicle modules can be achieved by communi-
cation networks such as dedicated short-range communications (DSRC) and cellular
communications. In all these circumstances, global time-stamping of data would be
preferable for synchronization. In addition, potential risks such as deadlocks, time
delays, and data losses should also be considered in the system designs and imple-
mentations.
Detailed Case Studies

In this chapter we present a few case studies that demonstrate and possibly expand
the concepts presented earlier in this book in practical applications. Each case study
is often a compilation of several research papers led by the authors and is meant to
highlight system integration and practical considerations.

9.1 Eco-Approach to Signalized Intersections

In Sect. 1.3.2 an overview of published results on eco-approach to signalized inter-
sections was presented. Section 4.1.3 provided a basic overview of signalized inter-
sections and Sect. 7.7 presented more insight about potential energy saving via a
fundamental numerical and analytical treatment.

In this section we provide a case study summarizing published results of a decade
of work on the topic at Clemson University. More speciﬁcally deterministic and
probabilistic planning of eco-approach to trafﬁc lights [1, 2], impact on mixed trafﬁc
via trafﬁc microsimulation analysis [3], and real-world experimental implementation
[4] are discussed.

9.1.1 Numerical Approach

The goal is to ﬁnd a velocity proﬁle which reduces the energy consumption during
a trip based on full or partial SPAT information. This problem can be formulated
as an energy (fuel) minimization problem as was treated numerically in Sect. 7.7.1
and analytically in Sect. 7.7.2. Energy minimization requires inclusion of dynamic
models of a speciﬁc vehicle and its propulsion system (ICEV, EV, HEV) to relate
energy use to the velocity proﬁle. To avoid the ensuing computational complexity
and to decouple the choice of optimal speed from a vehicle’s make and model, a
simpler cost function can be used that penalizes a weighted sum of the total trip time
and the acceleration and deceleration, instead of total energy use. The underlying
assumptions in this choice are that idling at a trafﬁc light and excessive acceleration
that lead to braking both cost energy with little to no beneﬁt to the driver. Other factors
such as motion constraints imposed by red intervals, road speed limits, and the fact
that very low velocities will be unacceptable to consumers, can be accounted for by
constraining the solution space. In this case study, the fuel economy for a speciﬁc
vehicle model is evaluated a-posteriori, by feeding the optimal velocity proﬁle to a
high-ﬁdelity dynamic model of the vehicle.

We ﬁrst describe, in Sect. 9.1.1.1, the scenario when deterministic and accurate
SPAT information over the entire prediction horizon is available. When the phase
and timing of upcoming signals are uncertain, a probabilistic term can be added to
the cost function, as described in Sect. 9.1.1.2.

9.1.1.1 Planning with Deterministic SPAT Information

When only a single trafﬁc light is on the horizon, one can use deterministic knowledge
of green and red intervals to plan within the allowable velocity limits a timely arrival
at a green as shown in Fig. 9.1.

To obtain a best achievable energy efﬁciency baseline, the optimal control problem
is ﬁrst solved assuming full and deterministic knowledge of signals’ phase and timing
over the planning horizon. Instead of the cost function in (8.2), a simpler and heuristic
cost function is used that can be later transformed to a quadratic program for efﬁcient
numerical solution. The following cost function was chosen,

vmax

vmin

Time

CV

Distance to stop-bar
or rear end of queue

Fig. 9.1 Feasible velocity intervals in order to avoid stopping at red, if possible

243

(9.1)

(9.2)

(9.3)

(9.4)

(9.5)

9.1 Eco-Approach to Signalized Intersections

(cid:3)

k+N −1(cid:2)

J =

i=k

w1

(cid:2)ti
(cid:2)tmin

+ w2

(cid:4)
(cid:4)
(cid:4)
(cid:4)

ai
amax

(cid:5)

(cid:4)
(cid:4)
(cid:4) + c(si , ti ) 1
(cid:4)
ε

,

where J is the total cost and is indexed over position s with index i that starts at the
current position step k and ends N steps later at step k + N − 1 with N being the
length of the prediction horizon. Here (cid:2)ti = ti+1 − ti is the time required for a vehicle
to cover the ﬁxed distance (cid:2)s = si+1 − si between steps si and si+1 given the velocity
at si and the acceleration ai ; (cid:2)tmin is the minimum time to complete the step if starting
and ending at the maximum velocity and is used as a scaling factor, ai is the constant
acceleration assumed during step i, and amax is the maximum allowed acceleration.
The constants w1 and w2 are weighting terms. Motion constraints imposed by a red
interval are imposed as a soft constraint by inclusion of the term c(si , ti ) 1
ε in the
cost function. The value of c(si , ti ) is zero except for spatiotemporal intervals when
a light is red in which case its value is set to one, and ε is a very small constant (for
example 10−6), such that idling at red is discouraged.

The vehicle kinematics, realized by the following two-state equations, are imposed
as equality constraints. Here s is the independent variable, velocity v and time t are
the two states, and acceleration a is the input:

Discretizing the above equations with a constant sampling interval of (cid:2)s and with a
zero-order hold on acceleration, we obtain:

dv(s)
ds
dt (s)
ds

= a(s)
v(s)
= 1
v(s)

,

,

(cid:6)

vi+1 =

ti+1 = ti +

(vi )2 + 2ai (cid:2)s ,
2(cid:2)s
(vi )2 + 2ai (cid:2)s

vi +

(cid:6)

,

The hard inequality constraints: vmin ≤ vi ≤ vmax and amin ≤ ai ≤ amax are also
enforced. Here vmin and vmax are the road speed limits and can also include lowest
speed acceptable to a driver; amin and amax are the feasible bounds for deceleration
and acceleration.

The above optimal control problem can be solved numerically using Dynamic
Programming (DP) and based on the discretization on position, time, and velocity as
schematically shown in Fig. 9.2. The solution is calculated in one backwards sweep
along the position axis taking advantage of Bellman’s principal of optimality. The
outline of the DP algorithm was described in Algorithm 1 of Sect. 6.2.2.2.

244

9 Detailed Case Studies

Fig. 9.2 Schematic of the DP grid

9.1.1.2 Planning with Probabilistic SPAT Information

Because perfect full-horizon SPAT information is not always available as explained in
Sect. 8.2.4, here we consider the scenario where SPAT is known only probabilistically
for instance based on historical data. The cost function in (9.1) is modiﬁed to the
following to take into account the probabilistic nature of SPAT information,

(cid:3)

k+N −1(cid:2)

J =

i=k

w1

(cid:2)ti
(cid:2)tmin

+ w2

(cid:4)
(cid:4)
(cid:4)
(cid:4)

ai
amax

(cid:4)
(cid:4)
(cid:4)
(cid:4) + c(si , ti )| ln ( p(si , ti ))|

(cid:5)

.

(9.6)

All parameters and variables in (9.6) are the same as those described for (9.1); the
only new variable is p(si , ti ) which represents probability of green at time ti for
a light situated at position si . Therefore higher costs are assigned to solutions that
pass through time intervals where probability of green is lower. At the limit when
probability of green at si and ti is zero, ln ( p(si , ti )) = ∞ and passing through a
red would be discarded. Where p(si , ti ) = 1, this term of the cost function drops to
zero and increases the likelihood that the corresponding velocity will be selected.
The probability of green for each light can be generated based on real-time and/or
historical information as described in Sect. 8.2.4. Minimization of the cost function
(9.6) with the equality and inequality constraints described in the previous subsection,
remains a deterministic optimal control problem. The problem is solved using DP but
in a receding horizon manner; as new information becomes available, the DP is re-
solved taking into account the updated information over the remaining trip horizon.
Note that an alternative approach will be a Stochastic Dynamic Programming (SDP)
formulation where the expected value of the cost in (9.1) is penalized.

9.1 Eco-Approach to Signalized Intersections

245

9.1.2 Simulation Results

9.1.2.1 Single Vehicle Simulation

A vehicle driving down a 800 m long street with three trafﬁc signals was simulated in
three scenarios. In the ﬁrst scenario it is assumed that the vehicle has no information
about the future state of the trafﬁc light, in the second scenario real-time probabilistic
SPAT information as described in Sect. 8.2.4 is assumed, and the third scenario full a-
priori knowledge of SPAT information is assumed. Each scenario was run 1000 times
in a Monte Carlo type experiment in which the start of red phases were randomized
within a window of sufﬁcient length for the vehicle to complete the route. The total
cycle length, and length of each red were kept constant. Also the proportion of red to
green times across all simulations were constrained to be the same. The start of each
red of a trafﬁc signal was chosen independently of the start of red of the next trafﬁc
signal. In all simulations, the penalty weights in the cost functions (9.1) and (9.1) are
set to w1 = 1/8, w2 = 1/8. The value of ε is set at 10−6. To solve the DP, the solution
space is discretized to distances of 20 m, time increments of 1 s, and velocity steps
of 1 m/s as schematically shown in Fig. 9.2. In this discretization grid choice, the
computational time and memory requirements were reasonable for implementation
on a PC.

In calculating the fuel economy, it was not computationally feasible to run all cases
through a simulation cycle with a full high-ﬁdelity vehicle model. Therefore a simpli-
ﬁed vehicle model was developed using efﬁciency maps taken from AUTONOMIE
[5] and a simpliﬁed gear shifting logic. For example, the effects of engine start and
stop transients on fuel economy were not modeled in the simpliﬁed fuel economy
calculations. The simulated vehicle is a two-wheel-drive, automatic transmission,
conventional-engine vehicle. This vehicle had a total mass of 1580 kg, an engine
producing a peak of 115 kW, and a constant electrical load of 200 W. The velocity
proﬁles generated by the dynamic program were fed to this model to calculate the
fuel economy for each case. This considerably simpliﬁed model provides a signiﬁ-
cant reduction in computational time when calculating the fuel economies for large
numbers of simulation cases.

The Monte-Carlo simulation results found in Table 9.1 indicate that, for the road
conditions described and with only real-time information and the probabilistic mod-
els, an average of 16% increase in fuel economy could be expected, representing
approximately 62% of the beneﬁt of full and exact trafﬁc signal timing information.
With Monte-Carlo simulations indicating positive results for ﬁxed time trafﬁc
lights, next an example of trafﬁc signals with adaptive timing is presented. Twenty
four hours of recorded trafﬁc signal timing data from a series of signals in an urban
corridor in Northern California is used. Figure 9.3 shows the lengths of the green
phases for four different movements of one of these trafﬁc signals.

A vehicle was simulated driving through the three trafﬁc signals every 10 min
over the 24 h yielding a total of 144 simulated drives per level of information. The
real-world distance between the signals is preserved in the simulation, such that the

246

Table 9.1 Monte-Carlo
simulation results reﬂect the
positive inﬂuence of
information, on average, on
fuel economy

9 Detailed Case Studies

Mean (MPG)

Standard
deviation
(MPG)

5.0
3.7
3.0

No information
Real time information
Full information

25.9
29.9
32.5

150

Morning

Evening

Phase 1
Phase 2
Phase 3
Phase 4

]
s
[

s
h
t
g
n
e
l

e
s
a
h
P

200

100

50

0

100

200

300

400

500

600

700

Cycle count since midnight

Fig. 9.3 Histories of green phases of four different movements of a trafﬁc light on the chosen
real-world route, for every cycle over a 24 h period (midnight to midnight)

Table 9.2 Fuel economy
results from recorded
real-world trafﬁc signal
timings with simulated
vehicles moving between the
lights reﬂect the positive
inﬂuence of information

No information
Real time information
Full information

31.7
33.7
34.5

Mean(MPG)

Standard
deviation
(MPG)

3.1
3.0
3.6

simulated vehicle has to cover the same distance using the same trafﬁc signal timing
offsets as a real driver would encounter. The total simulation distance is 1320 m.
The lights occur at 520, 800, and 1200 m mark from the start. The DP resolution
is the same as those set before. No other vehicles are considered to be on the road.
In the case of real-time information the probability of green is calculated using
Eq. (8.16) using a 24 h average of red and green lengths as tr and tg. If more relevant
averages (for example a short-term average, a time of day average, or other statistical
means) are available, they may continue to improve the performance of this real-time
information case.

9.1 Eco-Approach to Signalized Intersections

247

The simulation indicates that drivers with access to real-time probabilistic infor-
mation were able to improve fuel economy over drivers with no information by
approximately 6% (Table 9.2). This accounts for roughly 70% of the potential gains
available through access to full and exact future knowledge of trafﬁc signal timing.
To deal with unexpected trafﬁc, pedestrians crossing out of cross-walks, and other
disturbances, the DP can be simulated frequently reproducing its cost-to-go map and
optimal policy when necessary.

9.1.2.2 Multi Vehicle Microsimulation

While eco-approach to trafﬁc signals could improve the energy efﬁciency of the ego
vehicle, its impact on energy efﬁciency of upstream trafﬁc deserves further inves-
tigation. One such microsimulation study was presented in [3]. Simulations were
conducted in Quadstone Paramics [6] and custom code was developed to simulate
vehicles with the eco-approach functionality. The equipped vehicles receive the tim-
ing of next upcoming trafﬁc light in advance and adjust their speed for a timely
arrival at green based on an analytical solution to the optimal control problem. The
simulation is run in an urban corridor network. The 2.4 km (1.5 mile) path con-
tains four signalized intersections with ﬁxed timings. The speed limit of each link is
80 km/h (50 mph). Conventional vehicles do not have prior access to trafﬁc signal
information and always try to reach the maximum road speed limit unless affected
by nearby vehicles or trafﬁc signals. Three different trafﬁc demand levels (300, 600,
and 900 vehicles per hour per lane) and seven different penetration levels of equipped
vehicles (100%, 90%, 70%, 50%, 30%, 10%, 0) are considered; therefore 21 simu-
lations were conducted. Fuel consumption was estimated using a simpliﬁed model
adopted from [7] which relates the fuel consumption rate to vehicle’s velocity and
acceleration. The parameters of the model are those in [7] and obtained by a third
order polynomial ﬁt to experimental data. It was further assumed that the engine was
idling during negative acceleration consuming a constant idling fuel rate.

Figure 9.4 summarizes the energy consumption results for equipped vehicles as
well as conventional vehicles. As shown in this ﬁgure, equipped vehicles (three
bottom curves) consume much less fuel than conventional vehicles. This is due to
fewer stops and closer-to-optimal operation of the engine. Another very interesting
trend seen in Fig. 9.4 is that with the increment of the percentage of equipped vehicles,
conventional vehicles consume less fuel. In other words, equipped vehicles have a
positive impact on the energy efﬁciency of the entire mix of vehicles. With the
increment of equipped vehicles, other conventional vehicles are more likely to follow
them and beneﬁt indirectly. However the energy efﬁciency of equipped vehicles
generally decreases as their penetration increases. This could be due to slow-down
of some equipped vehicles hindering procession of those behind them through a
green.

248

9 Detailed Case Studies

240

220

200

180

160

]
L
m

[
n
o
i
t
p
m
u
s
n
o
c

l
e
u
F

300 veh/h/l
600 veh/h/l
900 veh/h/l
Conventional
Connected

0

0.2

0.4

0.6

0.8

1

Fraction of vehicles equipped with speed advisory system

Fig. 9.4 Fuel consumption of vehicles with and without speed advisory system under different
trafﬁc demand levels and different penetration levels of equipped vehicles

9.1.2.3 Experimental Veriﬁcation

Real-world implementation of trafﬁc signal eco-approach or advisory has been
reported in several recent publications. In [4] the concept is tested in the city of San
Jose, California where the authors had real-time information of around 800 trafﬁc
lights. The connected vehicle identiﬁes the next relevant trafﬁc light and subscribes
to it to receive updates about the state of the light using the cellular network via User
Datagram Protocol (UDP) messaging. Because the vehicle only subscribed to the
next upcoming light, a rule-based algorithm was employed to determine the feasible
speed range for green arrival and use of dynamic programming was not needed. A
user interface was created and recommended the appropriate speed range to pass
through the next upcoming trafﬁc signal during the green phase. The appropriate
speed recommendation was displayed to the driver as green zones on the speedome-
ter, as seen in Fig. 9.5.

A BMW 5 Series vehicle was used in these street experiments. Four drivers were
asked to follow the speed recommendation shown on the dash display as long as
safety was not jeopardized. The drivers were then asked to repeat the test, this time
with the velocity advisory system deactivated. The tests were conducted in four
different days and in real mixed trafﬁc conditions. The fuel consumption of each
driver was recorded for approximately one hour sessions and the results can be
found in Table 9.3. In addition, the mean non-zero velocity, mean positive non-zero
acceleration, and standard deviation of the same are all reported for evaluation of the

9.1 Eco-Approach to Signalized Intersections

249

Fig. 9.5 Driver’s dash display, including speed recommendation and countdown. A similar interface
has been used in [8, 9]

Table 9.3 Field testing in San Jose, CA. Drivers were aware of the velocity advisory system and
were speciﬁcally asked to follow the dash-display recommendations
Driver # System inactive
System active
Mean
MPG
velocity
(m/s)

Mean
velocity
(m/s)

σ accel. MPG

σ accel.

Driver 1
Driver 2
Driver 3
Driver 4

13.48
12.71
13.16
10.91

7.3
6.6
7.4
7.5

0.6
0.5
0.7
0.7

14.44
13.55
15.91
11.22

5.9
6.5
6.2
7.7

Mean
accel.
(m/s2)
1.4
1.2
1.5
1.5

Mean
accel.
(m/s2)
1.2
1.2
1.2
1.5

0.5
0.5
0.4
0.8

system. The fuel consumption measurements in Table 9.3 show that on average a 9.5%
decrease in fuel usage is possible if drivers follow the displayed recommendations
as closely as possible.

9.2 Cooperative Intersection Control

Results in previous section demonstrate that individual vehicles potentially save
energy when they adjust their speed for a timely arrival at a green light. One could
expect even higher efﬁciency with cooperative intersections in an all-autonomous
vehicle environment as described in Sect. 1.4.3.

In recent years a few groups have proposed methods for such cooperative inter-
section control concepts. Here we summarize the results in [10, 11] in which the
arrival time assignment was formulated as a Mixed Integer Linear Program and was
implemented in a Vehicle-In-the-Loop (VIL) experiment.

250

9 Detailed Case Studies

9.2.1 Formulation as an Optimization Problem

Figure 9.6 schematically shows a shaded two-way intersection and the goal is to
schedule the two conﬂicting directions of movements. This is done by deﬁning a
larger square centered at the intersection denoted by access area. Each vehicle i, is
assigned an access time ti , to the edge of this square when it is empty of vehicles
from the opposing movement. The access area is sized large enough and based on
the speed limit, to ensure there is enough time to react safely to a vehicle that violates
its access time in the opposing movement.

The objective of increasing intersection throughput can be formalized here as an
optimization problem. If n vehicles are subscribed at each instant to an intersection,
minimizing the maximum assigned access times to these vehicles will push more
vehicles through the intersection in a given time span. But the optimization objective
could also consider the desired speed of each vehicle. One choice for the objective
function can then be a weighted sum of both objectives:

J = w1max({t1, . . . , tn}) + w2

|ti − tdes,i | ,

(9.7)

n(cid:2)

i=1

where ti and tdes,i are assigned and desired access times for vehicle i respectively and
w1 and w2 are penalty weights. This optimization is expected to not only improve
intersection ﬂow but can reduce energy consumption due to reduced number of stops.
Given the speed limit vmax and the maximum acceleration constraint amax , the
earliest possible access time for vehicle i, denoted by tmin,i = t0 + (cid:2)t1 + (cid:2)t2, can
be calculated as illustrated in Fig. 9.7:

tmin,i = t0 + min

(cid:9)

⎛
⎝ vmax − vi
ai

,

v2
i

+ 2ai di − vi

ai

⎞

(cid:12)

⎠ + max

di
vmax

−

− v2
v2
max
i
2ai vmax

(cid:13)

, 0

,

(9.8)

ti

Fig. 9.6 Schematic of the
proposed collaborative
intersection control system.
Gray denotes intersection
area while white denotes
access area

9.2 Cooperative Intersection Control

251

Fig. 9.7 The earliest
possible access time based
on speed limit and maximum
accelerations

Speed

ai

vmax

di

t0

Δt1

Δt2

Time

ti

where t0 is the current time, di is the distance of vehicle i to the intersection, vi is
the current speed of the vehicle i, and ai is the maximum feasible acceleration for
vehicle i thus yielding the minimum travel time. The minimum access time tmin,i
serves as a lower bound to the assigned access time for each vehicle:

ti ≥ tmin,i .

(9.9)

(9.10)

Two consecutive vehicles that are traveling on the same movement should be
separated by a time headway of tgap1 as they enter the intersection area. If vehicle j
is the immediate follower of vehicle k in the same movement, the headway constraint
can be expressed as

t j − tk ≥ tgap1

.

Two vehicles traveling on different phases (conﬂicting movements) need to be
separated by a larger time headway to ensure that a vehicle can only enter the access
area after all conﬂicting vehicles have left the intersection. For each two vehicles
j and k that are on different phases of an intersection, the following OR constraint
needs to be enforced:

t j − tk ≥ tgap2 ∨ tk − t j ≥ tgap2

,

(9.11)

where ∨ is the OR operator. The time headway between access times tgap2 can be
determined based on the dimensions of intersection and speed limits to allow enough
time for a vehicle to come to a stop in the event that the vehicle in the opposing
movement violates its assigned access time.

9.2.2 Numerical Solution

The optimization problem presented in Sect. 9.2.1 can be converted to a Mixed Integer
Linear Program (MILP) using standard techniques. More speciﬁcally, in the cost

252

9 Detailed Case Studies

function (9.7) the term max({t1, . . . , tn}) can be replaced by a new slack variable
tmax and by imposing new constraints ti ≤ tmax . In the same cost function, the terms
|ti − tdes,i | can be replaced by new slack variables δti and imposing δti ≥ ±(ti −
tdes,i ). As a result the cost function (9.7) will be a linear function of the optimization
variables ti and the newly introduced slack variables. The constraints in (9.9) and
(9.10) are also linear. Each disjunctive OR constraint in (9.11) can be converted
to two linear constraints using the big M method and by introducing new binary
variables Bl ∈ {0, 1} and a large constant M as follows:

t j − tk + M Bl ≥ tgap2
tk − t j + M(1 − Bl) ≥ tgap2

,

,

(9.12)

where 0 ≤ l ≤ m, m is the number of disjunctive constraints, and j and k corre-
spond to any two vehicles on different phases of an intersection. When Bl = 0,
the ﬁrst constraint in (9.12) indicates t j − tk ≥ tgap2 and the second constraint in
(9.12) is automatically satisﬁed given that M is sufﬁciently large. When Bl = 1 then
tk − t j ≥ tgap2 the ﬁrst constraint in (9.12) is automatically satisﬁed and the second
constraint is active.

The above optimization problem can then be written in a canonical linear pro-
gramming form. That is to minimize cT x subject to Ax ≤ b and x ≥ 0. Here
x = (t1, . . . , tn, δt1, . . . , δtn, tmax , B1, . . . , Bm) is the vector of optimizing variables,
n is the number of all subscribed vehicles, and m is the number of artiﬁcial binary
variables of Eq. (9.12). By including Bl for each disjunctive (OR) constraint among
optimization variables, we ensure that the most favorable of the two OR constraints
is chosen.

The above MILP problem was solved using IBM’s CPLEX optimization package
on an Intel Core i5@2.5 GHz Windows 7 laptop with 8 GB of RAM. For 50 subscribed
vehicles, the average intersection controller execution time was 120 ms but varied
between 28 ms and 2400 ms. These times include the MILP solver execution time
plus the time needed for pre-processing the probe vehicle data and expressing the
problem in canonical form. The MILP problem was solved once every 4 s to adapt
to unmodeled effects and to deviation of vehicles from their assigned access times.

9.2.3 Simulation Results

Here we summarize some of the results detailed in [10, 12]. Figure 9.8 shows 9 vehi-
cles approaching an intersection with X and O representing vehicles on conﬂicting
movements. The distance of each to the intersection at the time of their subscription
is shown on the vertical axis in the two plots of Fig. 9.9. The assigned access times
are shown on top horizontal axis. Two extreme choices of penalty weights w1 and
w2 are shown in the two plots. It can be seen that the MILP objective of reducing the

9.2 Cooperative Intersection Control

253

(a)

Phase X

(b)

X’

X”

Phase O

CV8

CV2

CV3

CV1

CV7

CV9

O’

O”

CV4

CV5

CV6

Fig. 9.8 Nine vehicles at a simpliﬁed two phase intersection with four movements

maximum assigned access time along with collision avoidance constraints groups
together the vehicles of the same movement, when possible.

The performance of the proposed intersection control concept was also compared
to a signalized intersection with a pre-timed trafﬁc light in a one hour microsimu-
lation with many vehicles. The intersection had four 500 m legs. The signal phase
and timing for the benchmark pre-timed trafﬁc signals were optimized off-line using
Synchro signal optimization [13] resulting in a cycle time, green split, and yellow
interval of 100, 44.5, and 3.5 s respectively. The vehicles were sampled from a neg-
ative exponential distribution [14] at 750 vehicles per hour for all four legs of the
intersection. The vehicles’ arrival pattern was recorded and replayed in all simula-
tions. The average and maximum speeds were set to vavg = 15.6 m/s (35 mph) and
vmax = 20 m/s (45 mph). The pre-timed case was simulated twice: (i) with no speed
advisory in which vehicles did not receive SPaT preview and (ii) with speed advi-
sory to vehicles, similar to that of Sect. 9.1, in which vehicles received SPaT preview
when they were within a 500 m range of the intersection. The penalty weights in the
MILP objective function (9.7) were set to w1 = 50% and w2 = 50%.

Table 9.4 summarizes some of the performance metrics for the three simulations
that were conducted. It can be seen that number of stops has an almost 100-fold
reduction with respect to a pre-timed signalized intersection. Average idle time for
stopped vehicles is also cut in half. The average travel time shows considerable
improvement as well. We expect the reduced idling and travel time positively impact
energy efﬁciency. The experimental results presented next conﬁrm this hypothesis.

254

9 Detailed Case Studies

2
V
C

4
V
C

1
V
C

3
V
C

5
V
C

8
V
C

6
V
C

7
V
C

9
V
C

Fig. 9.9 Examples of MILP
solution with 9 subscribed
vehicles (vertical axis at time
zero: remaining distance of
each individual vehicle to the
access area, horizontal axis
at distance zero: access time
assigned to each individual
vehicle, solid lines:
minimum access times tmin,i ,
dashed lines: desired access
times tdes,i , i ∈ [1, 9], colors
and marks refer to the four
directions of Fig. 9.8); a all
weight given to intersection
throughput improvement, b
all weight given to satisfying
the desired speeds of all
vehicles [10]

(a)

]

m

[

e
c
n
a
t
s
i
D
g
n
i
n
i
a
m
e
R

(b)

]

m

[

e
c
n
a
t
s
i
D
g
n
i
n
i
a
m
e
R

−500

−1,000

0

0

−500

−1,000

CV1
CV2
CV3
CV4
CV5
CV6
CV7
CV8
CV9

CV1
CV2
CV3
CV4
CV5
CV6
CV7
CV8
CV9

0

20

40

60

80

Time [s]

1
V
C

3
V
C

2
V
C

4
V
C

5
V
C

6
V
C

8
V
C

7
V
C

9
V
C

0

20

40

60

80

Time [s]

Table 9.4 Microsimulation results comparing MILP controlled intersection concept with pre-timed
signalized intersections with and without speed advisory
Performance metric

Pre-timed+advisory

Pre-timed

MILP

2900

1171

3640

Intersection traversals
Simulation time [min] 61
Number of
intersection stops
Total intersection
idling Delay [min]
Avg. idle per stopped
vehicle [s]
Avg. travel time per
vehicle [s]

50

20

2900
61
872

1843

15

51

2900
61
13

2

9

36

9.2 Cooperative Intersection Control

255

9.2.4 Experimental Results

In order to investigate the energy efﬁciency potential of the proposed approach, a
Vehicle-In-the-Loop (VIL) test concept was proposed in [11] in which a real vehicle
approaching a signal-less intersection on a test track interacts with hundreds of sim-
ulated vehicles approaching a simulated version of that intersection. Simulated and
real vehicles all subscribe and communicate similarly to the intersection controller
and are treated equally. The position of the real vehicle is injected in the microsim-
ulation and therefore is easily visualized. The proposed approach is more realistic
than a simulation-only environment, while also ensuring a safer environment for test
vehicles because conﬂicting movements (and potential crashes) occur in a simulated
environment. The VIL concept is shown in Fig. 9.10.

The test vehicle was a human driven Honda Accord LX with a 2.4 L 4-Cylinder
SI gasoline engine. The vehicle was driven on an isolated straightaway located at
International Transportation Innovation Center (ITIC) test track in Greenville, South
Carolina. A custom-coded user interface on a mobile phone allowed speed control
by the driver for a timely arrival at assigned access times. A cellular network was
used for communication between the in-vehicle mobile phone and remote intersection
controller. The mobile phone sent the vehicle position and velocity to the intersection
controller every 5 s, received the assigned access time, calculated appropriate speed
to meet this access time, and visualized the calculated speed by a narrow green arc
on a circular speedometer. The trafﬁc microsimulator node ran inside the test vehicle
as shown in Fig. 9.10c for real-time monitoring of the simulations.

The fuel rate was estimated from data logged in real-time from the vehicle On-
Board Diagnostics (OBD-II) port with details reported in [11]. Extra care was taken
in calibrating the fuel rate estimator so that it matched the actual fuel consumption
measured from a gasoline tank ﬁll-up.

Within the same VIL framework described above 3 sets of tests were run: a pre-
timed intersection baseline, pre-timed with speed advisory baseline similar to that of
Sect. 9.1, and our proposed MILP controlled intersection. Each set consisted of 12
laps around the test track with wide U-turns at both ends of the track. The start time

(a)

Intersection Controller

(b)

GPS
Position/Time

Real Vehicles
(VIL)

Cellular
Broadcast

Proposed intersection control
with virtual trafﬁc sign

Simulated
Vehicles

Real
Vehicle in the loop

(c)

Driver Assistant
iOS application

Virtual Driver Assistant
Fuel Rate Tracker
Virtual Trafﬁc Signal

Inters. area
Safety area
Conn. veh.

Vehicle-in-the loop
simulation

Fig. 9.10 Vehicle-in-Loop experimental setup in [11] showing a interactions between a real vehicle
and microsimulation environment via 4G network, b Java microsimulation interface, and c in-vehicle
setup

256

9 Detailed Case Studies

Table 9.5 VIL experiment results for real vehicle: Comparing MILP controlled intersection concept
with pretimed baselines
Performance metric

Pre-timed+advisory

Pre-timed

MILP

10

12

Intersection traversals
Simulation time [min] 57.5
Number of
intersection stops
Total intersection
idling delay [min]
Avg. idle per stopped
vehicle [s]
Avg. travel time per
vehicle [s]
Fuel consumption [L]

1.13

108

4.3

26

12
55
0

0

0

99

12
51
0

0

0

79

1.11

0.91

at the beginning of each lap was randomized using a random number generator to
prevent unintended bias due to cyclic runs.

Table 9.5 summarizes some of the performance metrics for the test vehicle. The
test vehicle passed the MILP-based imaginary intersection 12 times without stopping.
This resulted in 19.5 and 18.0% reduction in fuel consumption compared respectively
with the two pretimed benchmarks.

9.3 Anticipative Car Following

In Sect. 1.3.3 we highlighted the potentials offered by CAVs for proactive and antic-
ipative car following to lower energy use compared to current reactive car following
practices. This approach is the eco-ACC introduced in Sect. 8.1.3. An analytic treat-
ment of this scenario was presented in Sect. 7.8.

Here we expand on what was presented before in the book and present a detailed
case study based on a compilation of the approach and results in [15–18]. We start
by formulating car following as an optimal control problem. The unknown “distur-
bance” is the future position of the preceding vehicle which motivates methods for
its deterministic or probabilistic prediction. We show via microsimulation analysis
that one could gain on average by such anticipative car following measures.

9.3.1 Formulation as an Optimization Problem

In anticipative car following the goal is to reduce energy-consuming braking or stop
and go events by judiciously adjusting the following distance between the two vehi-

9.3 Anticipative Car Following

257

cles as a buffer. This desire can be cast as an optimization with a cost function that
balances the car following distance against acceleration command by penalizing a
weighted sum of both as described in Sect. 8.1.3. For instance, in a model predic-
tive approach the following quadratic cost minimization can be performed at the
beginning of each receding horizon similar to that shown in [16],

J = ws(cid:7)s p(N ) − s(N ) − T ˙s(N ) − L min(cid:7)2+

min
u(i)

(cid:14)
ws(cid:7)s p(i) − s(i) − T ˙s(i) − L min(cid:7)2 + wu(cid:7)u(i)(cid:7)2

(cid:15)

,

(9.13)

+

N −1(cid:2)

i=0

where N is the number of time steps in a prediction horizon, progression of steps along
the horizon is indexed by i, u(i) are the acceleration commands and optimization
variables, (cid:7).(cid:7) denotes the two norm and ws and wu are penalty weights. Here s p and
s are the position of the preceding and ego vehicles respectively, and L min is the
minimum desired gap between them when the ego vehicle is stopped. The distance
headway T ˙s is the product of time headway T and velocity of the ego vehicle ˙s and
is meant to induce larger gaps at higher ego vehicle speeds.

The vehicle longitudinal kinematics along with a ﬁrst order lag between the accel-
eration command input u and the vehicle’s acceleration a can be enforced as equality
constraints and obtained by discretizing the following continuous time equations:

˙s(t) = v(t) ,
˙v(t) = a(t) ,
a(t) + 1
τ

u(t) ,

˙a(t) = − 1
τ

(9.14)
(9.15)

(9.16)

where τ approximates the time constant from acceleration command to actual accel-
eration. After discretization, the continuous-time t is indexed by i as the independent
variable.

Hard constraints on vehicles states and on the following distance must be enforced
at each step in time. An important safety constraint is a lower bound on car following
distance. An upper bound can also be optionally enforced to avoid leaving large gaps
that could negatively impact trafﬁc ﬂow or encourage cut-ins. In summary:

L min ≤ s p(i) − s(i) − T ˙s(i) ≤ L max

i = 1, . . . , N .

(9.17)

Minimum and maximum speed limits should also be enforced,

vmin ≤ v(i) ≤ vmax

i = 1, . . . , N .

(9.18)

As shown in [17] and illustrated in Fig. 9.11, the powertrains maximum accelera-
tion capacity depends strongly on velocity as seen in combined engine-transmission
maps. The velocity dependent acceleration constraint can be approximated as piece-

9 Detailed Case Studies

258

(a)

]

2
s
/
m

[
d
n
a
m
e
D
n
o
i
t
a
r
e
l
e
c
c
A

4

2

0

−2

1

2

3

6

30

1 2
3
4

(b)

]

2
s
/
m

[
d
n
a
m
e
D
n
o
i
t
a
r
e
l
e
c
c
A

4

2

0

−2

9

30

0

10

20

40

0

10

20

40

Velocity [m/s]

Velocity [m/s]

Fig. 9.11 Velocity dependent acceleration constraints (dashed orange) for a a passenger vehicle
where conjunctive maximum acceleration constraints yield a convex velocity-acceleration admis-
sible set and b a heavy duty vehicle where disjunctive maximum acceleration constraints yield a
non-convex velocity-acceleration admissible set. In both scenarios, the blue phase portrait trajec-
tories are sample operating point trace of vehicles running MPC planning under US06 drive cycle
[17]

wise linear combinations of velocity and acceleration as detailed in [17] and
illustrated in Fig. 9.11. Depending upon the convexity of the acceleration-velocity
constraint-admissible set, these piecewise linear constraints may be applied conjunc-
tively or disjunctively. As shown in [17] disjunctive OR constraints can be converted
to conjunctive AND constraints by introducing new integer optimization variables
in the big M method described in Sect. 9.2.2.

In [18] a terminal constraint is also imposed on velocity and position of the ego
vehicle to prevent a collision post-prediction horizon. This terminal constraint on
velocity and position of ego vehicle is constructed using kinematic relationships
and assuming that the preceding vehicle will apply maximal braking post-prediction
horizon (worst case scenario). While the resulting terminal constraint is nonlinear, a
linear approximation to it could be used.

The above linear constraints along with the quadratic cost function in (9.13) form
a quadratic program over each horizon. Efﬁcient QP solvers exist that could solve
this problem in real-time. Even when integer variables are introduced to handle dis-
junctive linear constraints shown in Fig. 9.11b, the resulting Mixed Integer Quadratic
Program (MIQP) can still be solved relatively fast as documented in [17].

The main challenge is the uncertainty about the position of the preceding vehicle
s p over the optimization horizon. Note that s p appears in the cost function (9.13) as
well as in the constraint (9.17). The optimization could be solved under the worst
case scenario assuming the preceding vehicle comes to a sudden emergency stop at
each step of the horizon. Such worst case assumptions could induce very conservative
and perhaps unnecessarily large headways between vehicles. Here we employ the
methods described in Sect. 8.2.3 for predicting the motion of preceding vehicle.

9.3 Anticipative Car Following

259

With a probability distribution for s p(i), the gap constraints can be enforced prob-
abilistically as a so-called chance constraint. For instance a minimum gap constraint
in Eq. (9.17) can be instead written as:

P(s(i) + T ˙s(i) ≤ s p(i) − L min) ≤ 1 − α i = 1, . . . , N ,

(9.19)

which means that the chance of violating the constraint should be less than 1 − α.
Note that at any current step i = 0, s, ˙s, and s p are all deterministic rather than prob-
abilistic, and MPC ﬁnds solutions that do not violate constraints. The probabilistic
constraint will be converted to a deterministic constraint using probability distribu-
tion of s p(i). If we denote R1−α as the position where the cumulative distribution
function of s p(i) is equal to 1 − α, then the equivalent deterministic constraint is

s(i) + T ˙s(i) ≤ R1−α − L min .

(9.20)

Similarly, the maximum distance constraint can be enforced probabilistically.
With transformation of the probabilistic constraints to deterministic ones, we end up
with a standard MPC problem. This is the approach employed in [15, 16].

9.3.2 Numerical Solution

In [18] a parameter optimization was performed to ﬁnd optimal values of the penalty
weights and the prediction horizon length. Once the parameters were ﬁxed, the Gurobi
optimization package [19] was used to solve the QP MPC problem for a passenger
vehicle. For a heavy truck the maximum acceleration constraint is disjunctive as
was illustrated in Fig. 9.11b which resulted in a Mixed Integer Quadratic Program
(MIQP) formulation for the MPC problem. For both cases, passenger cars and heavy
truck, two scenarios were considered: (i) When a CAV follows another CAV in which
future intentions of the preceding CAV were available to the following CAV for the
duration of prediction horizon, and (ii) when a CAV follows a conventional vehicle
in which a probabilistic model similar to those described in Sect. 8.2.3 was used to
estimate the intentions of the preceding vehicle.

Table 9.6 shows the computation times for both QP and MIQP MPCs. One MPC
vehicle was simulated following an open-loop vehicle. The optimization was solved
on a laptop PC equipped with 16.0 GB RAM and a 2.70 GHz CPU. In Table 9.6,
Optimization Time refers to the time required to solve the mathematical program (QP
or MIQP) and Compt. Time refers to the total time required to run a single vehicle’s
control move determination, including both preview handling and optimization.

260

9 Detailed Case Studies

Table 9.6 Computation time for anticipative car following MPC. The MPC is converted to a QP
for a passenger car and to a MIQP for a heavy truck. When a CAV follows another CAV the preview
source is connectivity and full intentions over the horizon is communicated from the preceding
CAV. On the other hand when the preceding vehicle is a conventional vehicle, preview source is a
probabilistic model
Algorithm Preview

Mean
comp.
time [s]

Max
comp.
time [s]

Mean opt.
time [s]

Max opt.
time [s]

source

Worst
case in-
horizon
con-
straints

Worst
case
terminal
con-
straints

Car
Car
Truck
Truck

Connectivity No
Probabilistic Yes
Connectivity No
Probabilistic Yes

Yes
Yes
Yes
Yes

0.0337
0.0757
0.0435
0.0571

0.0561
0.1134
0.0789
0.0919

0.0108
0.0110
0.0148
0.0069

0.0444
0.0892
0.0504
0.0425

9.3.3 Simulation Results

Here we report the results of the implementation in [18] in which a mixed string
of 8 vehicles following a target vehicle are simulated. The mix includes conven-
tional cars with no connectivity that use a standard Intelligent Driver Model (IDM)
for car following as described in Sect. 4.2.1.3. The IDM parameters were sampled
from empirical data. More speciﬁcally, the desired time headway and maximum
and minimum acceleration levels were sampled from log-normal distributions ﬁt to
the empirical data of [20]. Different penetrations of CAVs in the mix are explored.
Each CAV solves a variant of the receding horizon car following approach described
above. When a CAV is immediately preceded by another CAV it receives the intended
position of the preceding vehicle but when it is following an IDM vehicle it uses a
probabilistic prediction of the preceding car motion. Post horizon, collision avoidance
is ensured by considering worst case hard constraints at the end of each prediction
horizon when two CAVs follow each other. When a CAV follows an IDM vehicle,
worst case collision constraints are enforced along the prediction horizon as well.

Both passenger vehicle and heavy duty CAVs are injected in the mix. Observing
that the penetration of heavy trucks is 25% in some US highways, 0, 1, or 2 heavy
duty trucks are injected in the mix of the 8 vehicles in the string. The receding
horizon problem for the passenger vehicle is converted to a QP and that of a heavy
duty CAV becomes a MIQP as described in Sect. 9.3.1. A quasi-random approach
is used to create different placement of the vehicle types in the string leading to a
total of 2224 scenarios and simulations as detailed in [17]. Figure 9.12 shows the
cumulative fuel consumption results at different CAV penetrations and for 0, 1, and
2 heavy duty vehicles. The fuel consumption was estimated using quasi-static engine
fuel maps. As expected the energy efﬁciency increases with the penetration of CAVs.
A comparison between homogeneous human-like IDM strings and those composed

9.3 Anticipative Car Following

261

Fig. 9.12 Combined string
fuel economy at various
penetration levels of
predictive and heavy vehicles

/

]
L
m
k
[
y
m
o
n
o
c
E

l
e
u
F
g
n
i
r
t
S

15

10

5

0/8 Truck
1/8 Truck
2/8 Truck

0.192 %FE
%CAV

0.152 %FE
%CAV

0.138 %FE
%CAV

0

20

40

60

80

100

Predictive Vehicle Concentration [%]

entirely of CAVs is available from the endpoints of each line in the plot. In absence
of heavy duty vehicles a 1.9% improvement in fuel economy is shown for every 10%
increase in CAV penetration.

9.4 Anticipative Lane Selection

In Chap. 4 mandatory and discretionary lane change behavior of human drivers were
brieﬂy discussed and the MOBIL lane change model was presented. Connected and
automated vehicles can more judiciously make a lane change decision and execute
it as explained in Sect. 1.3.4. Here we present a case study based on results in [21]
in which lane selection is formulated as an optimization problem and in anticipation
of neighboring vehicles’ intentions.

9.4.1 Formulation as an Optimization Problem

A lane command ul as well as a longitudinal acceleration command ua are the high
level control inputs. The longitudinal state space Eq. (9.16) relates ua to vehicle
longitudinal acceleration, velocity, and position. The lateral position of the vehicle
l(i) is expressed in lane width units with respect to a reference frame that aligns
integer values of l with lane centers. For example, on a two-lane road l = 1 could
coincide with the center of the right lane, l = 2 denotes the center of the left lane,
and l = 1.5 is on the visible marking between the lanes. In [21] a critically damped
second order lag is assumed between the lane command ul and the actual lane l of
the form

¨l(t) + 2ζ ωn

˙l(t) + ω2

nl(t) = ω2

nul(t) .

(9.21)

262

9 Detailed Case Studies

The damping ratio ζ is chosen to be unity and the natural frequency ωn is chosen to
be 1.1 rad/s resulting in a settling time of around four seconds to match a naturalistic
lane change behavior. Binary “lane indicator” variables will be deﬁned later that
determine whether each lane is occupied as a function of l.

The state dynamics in (9.16) and (9.21) are discretized,

transforming the
continuous-time formulation with t as the independent variable into a discrete-time
problem with i as the independent variable. The cost function (9.13) can be modiﬁed
to include lane choices along with new constraints that arise in multi-lane trafﬁc.
Similar to the approach in Sect. 9.3.1, the following moving horizon cost function
can be used,

min
ua (i),ul (i)

J =

N −1(cid:2)

i=0

(cid:14)
wv(v(i) − vr e f (i))2 + wa(ua(i))2 + wl(l(i) − lr e f (i))2

(cid:15)

+

wv(v(N ) − vr e f (N ))2 + wl(l(N ) − lr e f (N ))2 ,

(9.22)
where i = 0 denotes the current time step and N is the prediction horizon. Here vr e f
is the desired velocity and lr e f denotes the desired lane1 that could be dictated from
the vehicle navigation system. For instance a vehicle may prefer to stay in the right-
most lane in anticipation of an imminent exit. The above cost function strikes a trade
off between remaining in the desired lane and following the desired velocity while
it penalizes the acceleration command to reduce unnecessary braking and energy
loss. Minimizing the moving horizon cost could command changing to a faster lane
to pass a slow moving vehicle instead of reducing speed in the desired lane. After
passing the slow vehicle, return to the desired lane could be commanded due to the
residual lane cost. This behavior is consistent with what a human driver would do.
The position of the ego vehicle s in its lane is constrained by other reachable
vehicles in the same lane. The ego can be either behind or in front of another vehicle
which is a non-convex OR constraint:

s (cid:2) sr ear, p − L ego ∨ s (cid:3) s f r ont, p ,

(9.23)

where ∨ is the OR operator. Here sr ear, p denotes the position of the rear bumper
of the neighboring vehicle p and s f r ont, p is the position of its front bumper. The
length of the ego vehicle is denoted by L ego. Similar to the approach in Sect. 9.2 the
disjunctive OR constraint can be converted to an AND constraint using the big M
method:

s (cid:2) sr ear, p − L ego + Mβ p ∧ s (cid:3) s f r ont, p − M(1 − β p) ,

(9.24)

where ∧ is the AND operator. Here β p ∈ {0, 1} is a new binary variable deﬁned
for each reachable obstacle p in the ego vehicle lane and M is a large enough

1lr e f does not need to be an integer, in fact it is useful to offset it slightly to break symmetry in
common situations.

9.4 Anticipative Lane Selection

263

constant. When β p = 0, the ﬁrst constraint in (9.24) may be active and indicates
s (cid:2) sr ear, p − L ego and the second constraint in (9.24) is trivially satisﬁed given that
M is sufﬁciently large. When β p = 1 then s (cid:3) s f r ont, p and the ﬁrst constraint in
(9.24) is automatically satisﬁed. The optimal solution chooses the value for β p that
results in minimum value of the cost function in (9.22).

Finally for each lane a new “lane indicator” binary variable μnl ∈ {0, 1} can be
deﬁned. When the ego is fully or partly in lane nl, μnl = 1, otherwise if it does not
occupy lane nl at all μnl = 0. The inequality constraints in (9.24) are only relevant
if the two vehicles occupy the same lane. So in multi-lane scenarios the constraint
in (9.24) should be expressed as

s (cid:2) sr ear, p − L ego + Mβ p + M(1 − μnl ) ∧ s (cid:3) s f r ont, p − M(1 − β p) − M(1 − μnl ) ,
(9.25)
which should be imposed for every reachable vehicle in the occupied (or to be
occupied) lanes.

The lane indicator binary variables μnl are determined as a function of ego vehicle
lane state l(i). For instance in a 2-lane scenario only two of these binary variables μ1
and μ2 are deﬁned. Consider the variable δ to be the maximum deviation, in units of
lane width, for a vehicle to remain wholly in a lane. If 1 + δ ≤ l(i) ≤ 2 − δ then the
vehicle occupies both lanes and we set μ1 = μ2 = 1. If l(i) ≤ 1 + δ then vehicle is
in lane 1 and we set μ1 = 1 and μ2 = 0. If l(i) ≥ 2 − δ then vehicle is in lane 2 and
we set μ1 = 0 and μ2 = 1.

Setting these lane indicators must be handled by using inequality constraints as
proposed in [21] since the MIQP solver demands a certain canonical form that does
not accommodate if-then-else rules. For instance in a two lane scenario the following
four constraints correctly set the values for μ1 and μ2,

− l(i) − Mμ1 ≤ −(2 − δ) ,
l(i) + Mμ1 ≤ M + 2 − δ ,
l(i) − Mμ2 ≤ 1 + δ ,
−l(i) + Mμ2 ≤ −1 − δ + M ,

(9.26)

(9.27)
(9.28)

(9.29)

where again M is a large enough number and μ1, μ2 ∈ {0, 1} are binary optimization
variables to be determined for each time step.

9.4.2 Numerical Solution

The above moving horizon optimization was solved using the Gurobi optimization
package [19]. In order to reduce the computational effort of a mixed integer quadratic
program which can be high for reasonable choices of prediction horizon, a move
blocking approach is used in [21] to reduce the number of integer variables. The lane

264

Table 9.7 Simulation results
of anticipativelane selection
algorithm

Rule-based
MPC
Free ﬂow

9 Detailed Case Studies

Time [min]

Fuel [L]

13.8
12.9
12.7

17.1
15.7
15.3

change command ul is held constant over every three steps while the acceleration
command ua can assume a different value at each step of the prediction horizon. With
a sampling time of 0.4 s, a 10 s prediction horizon could be handled in real-time.
With move blocking, longer horizons could be executed real time all on a laptop PC
equipped with a 4 core, 2.7GHz CPU and 16GB RAM. More details can be found
in [21].

9.4.3 Simulation Results

In [21] the simulated receding horizon approach was tested ﬁrst in a two lane scenario
in MATLAB with 4 MPC CAVs in their desired ﬁrst lane encountering a slow moving
vehicle. Each CAV has a different desired speed and a set of full factorial simulations
was performed to include all possible placements of the CAVs with respect to each
other. The MPC algorithm was compared to a reactive rule-based algorithm in which
the CAVs used an IDM model for car following. They changed lane reactively when
slowed down by a user deﬁned threshold behind the slow moving vehicle provided
that necessary space in the adjacent lane was available.

As shown in Table 9.7, the MPC algorithm reduced fuel consumption by 8.4% and
travel time by 6.2% compared to the rule-based algorithm in full factorial simulations.
The results were also compared to free ﬂow trafﬁc results. Excess travel time, deﬁned
as the increase in travel time over the congestion-free value, decreased by 79% relative
to the reactive algorithm. Correspondingly, excess fuel consumption was reduced by
80% compared to a baseline of 18.1 mL for the average vehicle.

9.5 Eco-Routing and Eco-Coaching

Eco-routing has been extensively described in Chap. 5. Eco-coaching, an implemen-
tation variant of eco-driving is the subject of Sect. 8.1.1. This section is mainly based
on the publication [22], which collects various results of the European Commis-
sion funded project OPTEMUS (2015–2019).2 The scope is to discuss the energy
efﬁciency beneﬁts of the eco-routing and eco-coaching functions as experimentally
assessed on a demonstrator car.

2www.optemus.eu.

9.5 Eco-Routing and Eco-Coaching

265

9.5.1 Experimental Setup

In order to evaluate the impact of the eco-routing and eco-coaching (Sect. 8.1.1)
strategies in real-world conditions, an experimental setup as illustrated in Fig. 9.13
was implemented. The system consists of:

• A dedicated smartphone application, which serves as a Human-Machine Interface

(HMI) and hosts the eco-driving algorithms ensuring high response time;

• A cloud computing server which communicates with a Geographical Information
System (GIS) to retrieve real-time trafﬁc data and hosts the routing and driving
range algorithms which are both costly in terms of computation time;

• An On Board Diagnosis (OBD) dongle which monitors the battery state-of-charge.

This device is optional and could be replaced by an observer.

For the pre-trip and in-trip assistance, the driver can obtain from the HMI the most
energy-efﬁcient route, as well as the energy driving range available with the current
battery state-of-charge. Furthermore, to perform in-trip eco-driving assistance, the
smartphone application computes the optimal speed on the previous sub-trip at each

Eco-Routing and
Driving Range Algorithms

GIS

Destination

Suggested route
Driving range
Optimal speed proﬁle

HMI

Eco-Driving
Algorithm

Smartphone App

Battery
State of charge

OBD Dongle

Fig. 9.13 System architecture for experimental validation of eco-routing and eco-coaching algo-
rithms

266

9 Detailed Case Studies

speed breakpoint, as shown in Fig. 8.2. The application shows the optimal trajectory
together with the actual speed proﬁle in order to provide the drivers with visual
feedback on their driving style. An energy consumption evaluation of the driving
style on the sub-trip is also shown.

9.5.2 Experimental Results

In order to experimentally assess the energy beneﬁts in using the proposed strategies,
a series of ﬁeld tests has been conducted. The tests have been conducted in the urban
and sub-urban area of Turin, Italy, with a Fiat 500e (83 kW, 200 N electric motor)
driven by a professional driver.

9.5.2.1 Energy Consumption Model

For the energy consumption model validation, a total of 35 trips were recorded,
featuring an overall traveled distance of 434.6 km and a total travel time of 16.1 h
(i.e. an average of about 12.4 km and 27.5 min per trip). The vehicle reference data
for model validation were provided by the CAN-Bus data acquisition system. The
topological data (i.e. road network, road signs, etc.) and the trafﬁc information (i.e.
average speeds) were provided by HERE [23].

The presented models for energy consumption and travel time, in Eqs. (4.41) and
(4.31) respectively, were compared to standard state-of-the-art approaches. In par-
ticular, the energy consumption model was compared to a simple model reducing
Eq. (4.28) to the average speed Vi for the entire road link (“NOacc”), and yet a simpler
version neglecting also the auxiliary power term (“NOacc+NOaux”). Analogously,
the travel time model was compared to a simple model obtained by considering only
average velocity, τi = (cid:9)i /Vi in (4.31) (“NOacc”). The results of the experimental val-
idation in Table 9.8 are expressed in terms of symmetric Mean Absolute Percentage
Error [24] (sMAPE3) with respect to the CAN-bus measured energy consumption and
travel time. The energy consumption estimation performed by the different models
for one speciﬁc case is shown in Fig. 9.14. The proposed model largely outperforms
the state-of-the-art approaches. Accuracy of the prediction models is crucial for a
reliable navigation strategy.

3sMAPE is an accuracy measure based on percentage errors. It is used to solve the issue of heavier
penalty on negative errors than on positive errors.

9.5 Eco-Routing and Eco-Coaching

267

Table 9.8 Experimental validation results of the energy consumption model

Energy
Proposed
model

NOacc

sMAPE

8.5%

17.4%

NOacc+
NOaux

30.4%

Time
Proposed
model

7.9%

NOacc

13.4%

Fig. 9.14 Energy
consumption estimations
over one trip compared to the
CAN-bus reference
measurement

CAN-bus reference
Proposed model
NOacc
NOacc+NOaux

1,500

1,000

500

]
h
W

[
n
o
i
t
p
m
u
s
n
o
C
y
g
r
e
n
E

0

0

2

4

6

8

10

12

Distance [km]

9.5.2.2 Eco-Routing

The aim of the conducted experiments for eco-routing validation is threefold. The
ﬁrst goal, achieved in simulation, is to show that a bi-objective eco-routing is highly
effective in discarding those energy-optimal routes that penalize travel time. This
feature could increase drivers’ compliance to the route planning assistance. The
second goal, achieved in simulation, is to prove that the shortest route is likely to
be out of the Pareto efﬁcient solutions in terms of energy consumption and travel
time. The third goal, achieved both in simulation and experimentally for a selected
origin/destination (O/D) pair, is to show that the eco-route is actually more energy-
efﬁcient than the shortest and the fastest route.

The energy and time weights wk (5.7) and τk (5.15) were computed by using aver-
age trafﬁc speed information for a regular working day at 09:00. The non-dominated
points in the objective space calculated by the proposed algorithm are shown in
Fig. 9.15. The eco-route and the fastest route correspond to the two solutions for
λ = 1 and λ = 0 in formulation (5.17). A route corresponding to one of the Pareto-
optimal trade-offs is labeled as multi-route. The shortest route is away from the Pareto
front of the non-dominated points, and therefore not interesting either in terms of
energy consumption nor in terms of travel time. The four routes are displayed on a
map in Fig. 9.16.

For the experimental routing validation, the professional driver was instructed to
drive on the eco, the shortest, and the fastest routes previously identiﬁed in simulation.

268

9 Detailed Case Studies

Fig. 9.15 Routing
simulation results.
Non-dominated points in the
criteria space calculated by
the proposed algorithm. The
performance of the four
routes is also displayed

Pareto
Eco-Route
Shortest Route
Fastest Route
Multi-Route

1,800

2,000

2,200

2,400

Energy Consumption [Wh]

]
s
[

e
m
T

i

l
e
v
a
r
T

1,800

1,600

1,400

Shortest Route
Fastest Route
Eco-Route
Multi-Route

]
g
e
d
[

e
d
u
t
i
t
a
L

45.06

45.04

45.02

45

7.55

7.6
Longitude [deg]

7.65

7.7

Fig. 9.16 The four routes obtained in simulation for the selected origin/destination pair

The driver performed three repetitions for each route, starting the experiments always
at the same hour of the day, therefore over several working days. As summarized in
Table 9.9, the experimental results showed that the eco-route for the identiﬁed O/D
pair is actually the most energy-efﬁcient among the three alternatives. In particular,
the eco-route shows on average an energy gain of 4.5% with respect to the shortest
route, and 12.4% with respect to the fastest one. In terms of energy prediction accu-
racy over the three repetitions of each route, the sMAPE (between the measurement
and the estimation) ranged from 4.5% for the eco-route to 9.3% for the fastest route.
In terms of travel time prediction, the sMAPE ranged from 3.5% for the eco-route
to 12.7% for the fastest.

9.5 Eco-Routing and Eco-Coaching

269

Table 9.9 Experimental eco-routing results

Eco

Short

Fast

Energy
Mean

1784
1759.5
1868
1854
2041
2305

CAN
Prediction
CAN
Prediction
CAN
Prediction

sMAPE

Gain

4.5%

/

5.9%

4.5%

9.3%

12.4%

Travel time
Mean

1637
1696
2236
2230
1457
1655

sMAPE

3.5%

10.6%

12.7%

9.5.2.3 Driving Range Estimation

As discussed in Sect. 5.2 typical strategies for the estimation of electric vehicles driv-
ing range make assumptions on the average energy consumption per kilometer. Such
an average energy consumption, often corresponding to the worst-case consumption
for conservative estimation, is then used to calculate the driving range in terms of
distance.

In Fig. 9.17, the proposed strategy for the calculation of the driving range is
compared to a typical approach based on an average energy consumption and the
corresponding driving range in terms of distance. In the experiment, which can
be conducted only in simulation, a conservative average energy consumption of
0.18 kWh/km was chosen (the value is consistent with a worst-case energy con-
sumption observed during the experimental campaign). The available energy capac-
ity was set to 1 kWh. The chosen average energy consumption translates into a radius
of 5.5 km, which corresponds to a quite symmetric driving range as shown in blue
in Fig. 9.17. However this approach neglects important factors such as road grade,
trafﬁc conditions, type of employed route. The proposed strategy is able to take
into account all these aspects, and every destination inside the driving range may
be reached by following an eco-route. The driving range (in green in Fig. 9.17) is
asymmetric about the origin due to the presence of hilly terrain in the road network
and different consumption patterns. In this example, the energy driving range varies
from a minimum of about 5 km to a maximum of about 10 km.

Furthermore, it may happen that the region is not simply connected, as discussed
in [25], meaning that some destinations in the driving range are unreachable with the
current battery state of charge, even by following an eco-route. Such critical destina-
tions may be shown to the driver for more precise assistance, and they are shown with
orange dots in Fig. 9.17. In this case, the unreachable destinations correspond either
to points close to the driving range boundary or to particularly energy-expensive
roads, such as motorways.

270

9 Detailed Case Studies

45.1

45.05

45

]
g
e
d
[

e
d
u
t
i
t
a
L

Origin
Energy
(1 kWh)
Distance
(5.5 km)
Unreachable
(>1 kWh)

Fig. 9.18 Itinerary for the
eco-coaching experimental
campaign. The itinerary is
about 16 km long, with an
estimated travel time of
40 min

7.45

7.5

7.55

7.75

7.8

7.85

7.6

7.65
Longitude [deg]

7.7

Fig. 9.17 Comparison of the energy driving range based on the prediction of energy consumption
and the standard distance driving range

9.5.2.4 Eco-Coaching

The eco-coaching strategy was tested in the city center of Turin. The following
test procedure was followed: (i) three repetitions of the itinerary given in Fig. 9.18
without eco-driving assistance (i.e. “pre-eco”), (ii) the driver was then introduced
to the eco-driving smartphone application, and (iii) three repetitions of the itinerary
were then performed with the eco-driving assistance (i.e. “eco”).

An example of the corresponding speed proﬁles is given in Fig. 9.19. Table 9.10
shows the energy consumption measured from the CAN bus with and without the
eco-driving assistance. It shows that with the eco-coaching assistance the energy
consumption was reduced by 9% on average, while travel time was reduced by 3%.
It is therefore possible to improve the energy efﬁciency of the trips without driving

9.5 Eco-Routing and Eco-Coaching

271

(a)

60

]
h
/
m
k
[
d
e
e
p
S

40

20

0

(b)

60

]
h
/
m
k
[

d
e
e
p
S

40

20

0

1,200

1,220

1,240

1,260

Time [s]

860

880

900

920

Time [s]

Fig. 9.19 Example of measured (blue) and optimal (orange) vehicle speed proﬁles for the same
road segment without (a) and with the eco-coaching assistant (b)

Table 9.10 Experimental eco-coaching results

Energy [Wh]

Speed[km/h]

Average of pre-eco
trips
Average of eco trips
Variation

2246

2041
−9%

Time [s]

2623

2543
−3%

19.9

21.3
+3%

more slowly since the average speed is not decreased. One additional fact is that each
eco-trip made with the eco-driving assistance has a lower energy consumption.

9.5.2.5 Overall Gains

Eco-routing and eco-coaching have been validated independently on a similar urban
driving conditions with the same vehicle and driver. On average, the eco-coaching
and eco-routing allow the driving range to increase by 9 and 12% respectively (as
compared to the fastest route), by reducing the energy consumption. The driving
range prediction strategy allows the driver to have a more precise knowledge of which
destination is reachable. The state-of-the-art iso-distance approach is signiﬁcantly
less precise and is therefore necessarily tuned in a conservative way. By overcoming
this limitation, the proposed strategy allows the driver to use the full potential of the
available driving range.